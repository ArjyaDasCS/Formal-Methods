Running Symbolic PathFinder ...
symbolic.dp=choco
symbolic.string_dp_timeout_ms=0
symbolic.string_dp=none
symbolic.choco_time_bound=30000
symbolic.max_pc_length=2147483647
symbolic.max_pc_msec=0
symbolic.bvlength=32
symbolic.min_int=-200
symbolic.min_long=-9223372036854775808
symbolic.min_short=-32768
symbolic.min_byte=-128
symbolic.min_char=0
symbolic.max_int=200
symbolic.max_long=9223372036854775807
symbolic.max_short=32767
symbolic.max_byte=127
symbolic.max_char=65535
symbolic.min_double=4.9E-324
symbolic.max_double=1.7976931348623157E308
----------------------------------- search started
      [skipping static init instructions]
JavaPathfinder core system v8.0 - (C) 2005-2014 United States Government. All rights reserved.


====================================================== system under test
Sort.main()

====================================================== search started: 10/4/22 6:19 PM
		 # choice: gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"ROOT" ,1/1,isCascaded:false}
		 # exposed java.lang.Boolean@bc through exposed java.lang.Boolean
		 # exposed java.lang.Boolean@bd through exposed java.lang.Boolean
		 # exposed java.lang.Class@17 through exposed java.lang.Boolean
		 # exposed java.lang.Class@29 through exposed java.lang.Short
		 # exposed java.lang.Class@2f through exposed java.lang.Integer
		 # exposed java.lang.Class@35 through exposed java.lang.Long
		 # exposed java.lang.Class@3b through exposed java.lang.Float
		 # exposed java.lang.Class@41 through exposed java.lang.Double
		 # exposed java.lang.Class@1d through exposed java.lang.Byte
		 # exposed [Ljava.io.ObjectStreamField;@d3 through exposed java.lang.String
		 # exposed java.lang.String$CaseInsensitiveComparator@da through exposed java.lang.String
		 # exposed java.lang.Thread$State@db through exposed java.lang.Thread$State
		 # exposed java.lang.Thread$State@de through exposed java.lang.Thread$State
		 # exposed java.lang.Thread$State@e1 through exposed java.lang.Thread$State
		 # exposed java.lang.Thread$State@e4 through exposed java.lang.Thread$State
		 # exposed java.lang.Thread$State@e7 through exposed java.lang.Thread$State
		 # exposed java.lang.Thread$State@ea through exposed java.lang.Thread$State
		 # exposed [Ljava.lang.Thread$State;@f0 through exposed java.lang.Thread$State
		 # exposed gov.nasa.jpf.ConsoleOutputStream@f4 through exposed java.lang.System
		 # exposed gov.nasa.jpf.ConsoleOutputStream@f5 through exposed java.lang.System
		 # exposed java.util.Properties@106 through exposed java.lang.System
		 # exposed [Ljava.util.Hashtable$Entry;@149 through exposed java.util.Properties@106
		 # exposed sun.misc.Unsafe@15a through exposed sun.misc.Unsafe
		 # exposed java.lang.System$1@153 through exposed sun.misc.SharedSecrets
            [Sort.java:32] : int size = 5;
            [Sort.java:33] : int[] arr = new int[size];
            [Sort.java:34] : int a0 = Debug.makeSymbolicInteger("x0");
            [Sort.java:34] : int a0 = Debug.makeSymbolicInteger("x0");
New sym int x0 min=-200, max=200
            [Sort.java:34] : int a0 = Debug.makeSymbolicInteger("x0");
            [Sort.java:35] : int a1 = Debug.makeSymbolicInteger("x1");
New sym int x1 min=-200, max=200
            [Sort.java:35] : int a1 = Debug.makeSymbolicInteger("x1");
            [Sort.java:36] : int a2 = Debug.makeSymbolicInteger("x2");
New sym int x2 min=-200, max=200
            [Sort.java:36] : int a2 = Debug.makeSymbolicInteger("x2");
            [Sort.java:37] : int a3 = Debug.makeSymbolicInteger("x3");
New sym int x3 min=-200, max=200
            [Sort.java:37] : int a3 = Debug.makeSymbolicInteger("x3");
            [Sort.java:38] : int a4 = Debug.makeSymbolicInteger("x4");
New sym int x4 min=-200, max=200
            [Sort.java:38] : int a4 = Debug.makeSymbolicInteger("x4");
            [Sort.java:39] : arr[0] = a0;
            [Sort.java:40] : arr[1] = a1;
            [Sort.java:41] : arr[2] = a2;
            [Sort.java:42] : arr[3] = a3;
            [Sort.java:43] : arr[4] = a4;
            [Sort.java:44] : sort(arr);
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 1
x0 <= x1 -> true

### PCs: total:1 sat:1 unsat:0

string analysis: SPC # = 0
NPC constraint # = 1
x0 <= x1
numeric PC: constraint # = 1
x0 > x1 -> true

### PCs: total:2 sat:2 unsat:0

string analysis: SPC # = 0
NPC constraint # = 1
x0 > x1
		 # garbage collection
----------------------------------- [1] forward: 0 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 2
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:3 sat:3 unsat:0

string analysis: SPC # = 0
NPC constraint # = 2
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 2
x0 > x2 &&
x0 > x1 -> true

### PCs: total:4 sat:4 unsat:0

string analysis: SPC # = 0
NPC constraint # = 2
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [2] forward: 1 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 3
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:5 sat:5 unsat:0

string analysis: SPC # = 0
NPC constraint # = 3
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 3
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:6 sat:6 unsat:0

string analysis: SPC # = 0
NPC constraint # = 3
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [3] forward: 2 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:7 sat:7 unsat:0

string analysis: SPC # = 0
NPC constraint # = 4
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 4
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:8 sat:8 unsat:0

string analysis: SPC # = 0
NPC constraint # = 4
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [4] forward: 3 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:9 sat:9 unsat:0

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 5
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:10 sat:10 unsat:0

string analysis: SPC # = 0
NPC constraint # = 5
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [5] forward: 4 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:11 sat:11 unsat:0

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:12 sat:12 unsat:0

string analysis: SPC # = 0
NPC constraint # = 6
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [6] forward: 5 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:13 sat:13 unsat:0

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:14 sat:14 unsat:0

string analysis: SPC # = 0
NPC constraint # = 7
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [7] forward: 6 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:15 sat:15 unsat:0

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:16 sat:16 unsat:0

string analysis: SPC # = 0
NPC constraint # = 8
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [8] forward: 7 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x2 <= x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:17 sat:17 unsat:0

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:18 sat:18 unsat:0

string analysis: SPC # = 0
NPC constraint # = 9
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [9] forward: 8 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 10
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:19 sat:19 unsat:0

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:20 sat:20 unsat:0

string analysis: SPC # = 0
NPC constraint # = 10
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [10] forward: 9 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 10
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 10
x3[-199] > x4[-200] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x1[-197] > x4[-200] &&
x1[-197] > x3[-199] &&
x1[-197] > x2[-198] &&
x0[-196] > x4[-200] &&
x0[-196] > x3[-199] &&
x0[-196] > x2[-198] &&
x0[-196] > x1[-197]
*************Summary***************
PC is:constraint # = 10
x3[-199] > x4[-200] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x1[-197] > x4[-200] &&
x1[-197] > x3[-199] &&
x1[-197] > x2[-198] &&
x0[-196] > x4[-200] &&
x0[-196] > x3[-199] &&
x0[-196] > x2[-198] &&
x0[-196] > x1[-197]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x4 <= x3 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:21 sat:21 unsat:0

string analysis: SPC # = 0
NPC constraint # = 11
x4 <= x3 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x4 > x3 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:22 sat:21 unsat:1

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x3 <= x2 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:23 sat:22 unsat:1

string analysis: SPC # = 0
NPC constraint # = 11
x3 <= x2 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x3 > x2 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:24 sat:22 unsat:2

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x2 <= x1 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:25 sat:23 unsat:2

string analysis: SPC # = 0
NPC constraint # = 11
x2 <= x1 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x2 > x1 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:26 sat:23 unsat:3

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x1 <= x0 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:27 sat:24 unsat:3

string analysis: SPC # = 0
NPC constraint # = 11
x1 <= x0 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x1 > x0 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:28 sat:24 unsat:4

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [11] forward: 10 new end
----------------------------------- [10] backtrack: 9
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 10
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 10
x3[-200] <= x4[-200] &&
x2[-199] > x4[-200] &&
x2[-199] > x3[-200] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-197] > x4[-200] &&
x0[-197] > x3[-200] &&
x0[-197] > x2[-199] &&
x0[-197] > x1[-198]
*************Summary***************
PC is:constraint # = 10
x3[-200] <= x4[-200] &&
x2[-199] > x4[-200] &&
x2[-199] > x3[-200] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-197] > x4[-200] &&
x0[-197] > x3[-200] &&
x0[-197] > x2[-199] &&
x0[-197] > x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:29 sat:25 unsat:4

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x3 > x4 &&
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:30 sat:25 unsat:5

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x4 <= x2 &&
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:31 sat:26 unsat:5

string analysis: SPC # = 0
NPC constraint # = 11
x4 <= x2 &&
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x4 > x2 &&
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:32 sat:26 unsat:6

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x2 <= x1 &&
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:33 sat:27 unsat:6

string analysis: SPC # = 0
NPC constraint # = 11
x2 <= x1 &&
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x2 > x1 &&
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:34 sat:27 unsat:7

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x1 <= x0 &&
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:35 sat:28 unsat:7

string analysis: SPC # = 0
NPC constraint # = 11
x1 <= x0 &&
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x1 > x0 &&
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:36 sat:28 unsat:8

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [11] forward: 11 new end
----------------------------------- [10] backtrack: 9
----------------------------------- [10] done: 9
----------------------------------- [9] backtrack: 8
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 10
x3 <= x2 &&
x2 <= x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:37 sat:29 unsat:8

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x2 &&
x2 <= x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x3 > x2 &&
x2 <= x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:38 sat:29 unsat:9

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x2 <= x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x2[-199] <= x4[-199] &&
x2[-199] > x3[-200] &&
x1[-198] > x4[-199] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-197] > x4[-199] &&
x0[-197] > x3[-200] &&
x0[-197] > x2[-199] &&
x0[-197] > x1[-198]
*************Summary***************
PC is:constraint # = 9
x2[-199] <= x4[-199] &&
x2[-199] > x3[-200] &&
x1[-198] > x4[-199] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-197] > x4[-199] &&
x0[-197] > x3[-200] &&
x0[-197] > x2[-199] &&
x0[-197] > x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x2 &&
x2 <= x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:39 sat:30 unsat:9

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x2 &&
x2 <= x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x3 > x2 &&
x2 <= x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:40 sat:30 unsat:10

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x2 <= x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:41 sat:31 unsat:10

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x2 > x4 &&
x2 <= x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:42 sat:31 unsat:11

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x1 &&
x2 <= x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:43 sat:32 unsat:11

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x1 &&
x2 <= x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x4 > x1 &&
x2 <= x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:44 sat:32 unsat:12

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x1 <= x0 &&
x2 <= x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:45 sat:33 unsat:12

string analysis: SPC # = 0
NPC constraint # = 10
x1 <= x0 &&
x2 <= x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x1 > x0 &&
x2 <= x4 &&
x2 > x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:46 sat:33 unsat:13

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 12 new end
----------------------------------- [9] backtrack: 8
----------------------------------- [9] done: 8
----------------------------------- [8] backtrack: 7
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x3 <= x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:47 sat:34 unsat:13

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:48 sat:35 unsat:13

string analysis: SPC # = 0
NPC constraint # = 9
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [9] forward: 13 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 10
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:49 sat:36 unsat:13

string analysis: SPC # = 0
NPC constraint # = 10
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:50 sat:37 unsat:13

string analysis: SPC # = 0
NPC constraint # = 10
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [10] forward: 14 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 10
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 10
x2[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x2[-199] <= x3[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x1[-198] > x2[-199] &&
x0[-197] > x4[-200] &&
x0[-197] > x3[-199] &&
x0[-197] > x2[-199] &&
x0[-197] > x1[-198]
*************Summary***************
PC is:constraint # = 10
x2[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x2[-199] <= x3[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x1[-198] > x2[-199] &&
x0[-197] > x4[-200] &&
x0[-197] > x3[-199] &&
x0[-197] > x2[-199] &&
x0[-197] > x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x4 <= x2 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:51 sat:38 unsat:13

string analysis: SPC # = 0
NPC constraint # = 11
x4 <= x2 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x4 > x2 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:52 sat:38 unsat:14

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:53 sat:39 unsat:14

string analysis: SPC # = 0
NPC constraint # = 10
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x2 > x3 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:54 sat:39 unsat:15

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x3 <= x1 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:55 sat:40 unsat:15

string analysis: SPC # = 0
NPC constraint # = 11
x3 <= x1 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x3 > x1 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:56 sat:40 unsat:16

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x1 <= x0 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:57 sat:41 unsat:16

string analysis: SPC # = 0
NPC constraint # = 11
x1 <= x0 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x1 > x0 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:58 sat:41 unsat:17

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [11] forward: 15 new end
----------------------------------- [10] backtrack: 14
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 10
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 10
x2[-200] <= x4[-200] &&
x3[-199] > x4[-200] &&
x2[-200] <= x3[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x1[-198] > x2[-200] &&
x0[-197] > x4[-200] &&
x0[-197] > x3[-199] &&
x0[-197] > x2[-200] &&
x0[-197] > x1[-198]
*************Summary***************
PC is:constraint # = 10
x2[-200] <= x4[-200] &&
x3[-199] > x4[-200] &&
x2[-200] <= x3[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x1[-198] > x2[-200] &&
x0[-197] > x4[-200] &&
x0[-197] > x3[-199] &&
x0[-197] > x2[-200] &&
x0[-197] > x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:59 sat:42 unsat:17

string analysis: SPC # = 0
NPC constraint # = 10
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x2 > x4 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:60 sat:42 unsat:18

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x4 <= x3 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:61 sat:43 unsat:18

string analysis: SPC # = 0
NPC constraint # = 11
x4 <= x3 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x4 > x3 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:62 sat:43 unsat:19

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x3 <= x1 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:63 sat:44 unsat:19

string analysis: SPC # = 0
NPC constraint # = 11
x3 <= x1 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x3 > x1 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:64 sat:44 unsat:20

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x1 <= x0 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:65 sat:45 unsat:20

string analysis: SPC # = 0
NPC constraint # = 11
x1 <= x0 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x1 > x0 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:66 sat:45 unsat:21

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [11] forward: 16 new end
----------------------------------- [10] backtrack: 14
----------------------------------- [10] done: 14
----------------------------------- [9] backtrack: 13
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x3 <= x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:67 sat:46 unsat:21

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x2 > x3 &&
x3 <= x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:68 sat:46 unsat:22

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x3 <= x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x3[-200] <= x4[-200] &&
x2[-200] <= x3[-200] &&
x1[-199] > x4[-200] &&
x1[-199] > x3[-200] &&
x1[-199] > x2[-200] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 9
x3[-200] <= x4[-200] &&
x2[-200] <= x3[-200] &&
x1[-199] > x4[-200] &&
x1[-199] > x3[-200] &&
x1[-199] > x2[-200] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:69 sat:47 unsat:22

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x2 > x3 &&
x3 <= x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:70 sat:47 unsat:23

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:71 sat:48 unsat:23

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x3 > x4 &&
x3 <= x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:72 sat:48 unsat:24

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x1 &&
x3 <= x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:73 sat:49 unsat:24

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x1 &&
x3 <= x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x4 > x1 &&
x3 <= x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:74 sat:49 unsat:25

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x1 <= x0 &&
x3 <= x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:75 sat:50 unsat:25

string analysis: SPC # = 0
NPC constraint # = 10
x1 <= x0 &&
x3 <= x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x1 > x0 &&
x3 <= x4 &&
x2 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:76 sat:50 unsat:26

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 17 new end
----------------------------------- [9] backtrack: 13
----------------------------------- [9] done: 13
----------------------------------- [8] backtrack: 7
----------------------------------- [8] done: 7
----------------------------------- [7] backtrack: 6
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:77 sat:51 unsat:26

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x2 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:78 sat:52 unsat:26

string analysis: SPC # = 0
NPC constraint # = 8
x2 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [8] forward: 18 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x2 <= x1 &&
x2 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:79 sat:53 unsat:26

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x1 &&
x2 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x2 > x1 &&
x2 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:80 sat:53 unsat:27

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x3 <= x2 &&
x2 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:81 sat:54 unsat:27

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x2 &&
x2 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x3 > x2 &&
x2 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:82 sat:54 unsat:28

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x2 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x2[-199] > x3[-200] &&
x1[-198] <= x4[-198] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-197] > x4[-198] &&
x0[-197] > x3[-200] &&
x0[-197] > x2[-199] &&
x0[-197] > x1[-198]
*************Summary***************
PC is:constraint # = 8
x2[-199] > x3[-200] &&
x1[-198] <= x4[-198] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-197] > x4[-198] &&
x0[-197] > x3[-200] &&
x0[-197] > x2[-199] &&
x0[-197] > x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x2 &&
x2 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:83 sat:55 unsat:28

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x2 &&
x2 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x3 > x2 &&
x2 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:84 sat:55 unsat:29

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x2 <= x1 &&
x2 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:85 sat:56 unsat:29

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x1 &&
x2 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x2 > x1 &&
x2 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:86 sat:56 unsat:30

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:87 sat:57 unsat:30

string analysis: SPC # = 0
NPC constraint # = 8
x2 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x1 > x4 &&
x2 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:88 sat:57 unsat:31

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x0 &&
x2 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:89 sat:58 unsat:31

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x0 &&
x2 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x4 > x0 &&
x2 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:90 sat:58 unsat:32

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 19 new end
----------------------------------- [8] backtrack: 18
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x3 <= x1 &&
x2 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:91 sat:59 unsat:32

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x1 &&
x2 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x3 > x1 &&
x2 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:92 sat:59 unsat:33

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:93 sat:60 unsat:33

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x2 > x3 &&
x2 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:94 sat:60 unsat:34

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x2 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x2[-200] <= x3[-200] &&
x1[-199] <= x4[-199] &&
x1[-199] > x3[-200] &&
x1[-199] > x2[-200] &&
x0[-198] > x4[-199] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 8
x2[-200] <= x3[-200] &&
x1[-199] <= x4[-199] &&
x1[-199] > x3[-200] &&
x1[-199] > x2[-200] &&
x0[-198] > x4[-199] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:95 sat:61 unsat:34

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x2 > x3 &&
x2 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:96 sat:61 unsat:35

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x1 &&
x2 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:97 sat:62 unsat:35

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x1 &&
x2 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x3 > x1 &&
x2 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:98 sat:62 unsat:36

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:99 sat:63 unsat:36

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x1 > x4 &&
x2 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:100 sat:63 unsat:37

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x0 &&
x2 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:101 sat:64 unsat:37

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x0 &&
x2 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x4 > x0 &&
x2 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:102 sat:64 unsat:38

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 20 new end
----------------------------------- [8] backtrack: 18
----------------------------------- [8] done: 18
----------------------------------- [7] backtrack: 6
----------------------------------- [7] done: 6
----------------------------------- [6] backtrack: 5
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:103 sat:65 unsat:38

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:104 sat:66 unsat:38

string analysis: SPC # = 0
NPC constraint # = 7
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [7] forward: 21 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x1 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:105 sat:67 unsat:38

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x1 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x2 > x1 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:106 sat:67 unsat:39

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:107 sat:68 unsat:39

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:108 sat:69 unsat:39

string analysis: SPC # = 0
NPC constraint # = 8
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [8] forward: 22 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x2 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:109 sat:70 unsat:39

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x2 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:110 sat:71 unsat:39

string analysis: SPC # = 0
NPC constraint # = 9
x2 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [9] forward: 23 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x2 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x2[-199] > x4[-200] &&
x1[-198] > x4[-200] &&
x3[-198] > x4[-200] &&
x1[-198] <= x3[-198] &&
x1[-198] > x2[-199] &&
x0[-197] > x4[-200] &&
x0[-197] > x3[-198] &&
x0[-197] > x2[-199] &&
x0[-197] > x1[-198]
*************Summary***************
PC is:constraint # = 9
x2[-199] > x4[-200] &&
x1[-198] > x4[-200] &&
x3[-198] > x4[-200] &&
x1[-198] <= x3[-198] &&
x1[-198] > x2[-199] &&
x0[-197] > x4[-200] &&
x0[-197] > x3[-198] &&
x0[-197] > x2[-199] &&
x0[-197] > x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x2 &&
x2 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:111 sat:72 unsat:39

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x2 &&
x2 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x4 > x2 &&
x2 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:112 sat:72 unsat:40

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x2 <= x1 &&
x2 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:113 sat:73 unsat:40

string analysis: SPC # = 0
NPC constraint # = 10
x2 <= x1 &&
x2 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x2 > x1 &&
x2 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:114 sat:73 unsat:41

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x2 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:115 sat:74 unsat:41

string analysis: SPC # = 0
NPC constraint # = 9
x2 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x1 > x3 &&
x2 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:116 sat:74 unsat:42

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x0 &&
x2 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:117 sat:75 unsat:42

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x0 &&
x2 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x3 > x0 &&
x2 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:118 sat:75 unsat:43

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 24 new end
----------------------------------- [9] backtrack: 23
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x2 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x2[-200] <= x4[-200] &&
x1[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x1[-199] <= x3[-199] &&
x1[-199] > x2[-200] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-199] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 9
x2[-200] <= x4[-200] &&
x1[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x1[-199] <= x3[-199] &&
x1[-199] > x2[-200] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-199] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x2 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:119 sat:76 unsat:43

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x2 > x4 &&
x2 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:120 sat:76 unsat:44

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x1 &&
x2 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:121 sat:77 unsat:44

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x1 &&
x2 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x4 > x1 &&
x2 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:122 sat:77 unsat:45

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x2 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:123 sat:78 unsat:45

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x1 > x3 &&
x2 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:124 sat:78 unsat:46

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x0 &&
x2 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:125 sat:79 unsat:46

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x0 &&
x2 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x3 > x0 &&
x2 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:126 sat:79 unsat:47

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 25 new end
----------------------------------- [9] backtrack: 23
----------------------------------- [9] done: 23
----------------------------------- [8] backtrack: 22
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x2 <= x1 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:127 sat:80 unsat:47

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x1 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x2 > x1 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:128 sat:80 unsat:48

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x1[-199] <= x4[-199] &&
x3[-198] > x4[-199] &&
x1[-199] <= x3[-198] &&
x1[-199] > x2[-200] &&
x0[-197] > x4[-199] &&
x0[-197] > x3[-198] &&
x0[-197] > x2[-200] &&
x0[-197] > x1[-199]
*************Summary***************
PC is:constraint # = 8
x1[-199] <= x4[-199] &&
x3[-198] > x4[-199] &&
x1[-199] <= x3[-198] &&
x1[-199] > x2[-200] &&
x0[-197] > x4[-199] &&
x0[-197] > x3[-198] &&
x0[-197] > x2[-200] &&
x0[-197] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x2 <= x1 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:129 sat:81 unsat:48

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x1 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x2 > x1 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:130 sat:81 unsat:49

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:131 sat:82 unsat:49

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x1 > x4 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:132 sat:82 unsat:50

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x3 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:133 sat:83 unsat:50

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x3 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x4 > x3 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:134 sat:83 unsat:51

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x0 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:135 sat:84 unsat:51

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x0 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x3 > x0 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:136 sat:84 unsat:52

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 26 new end
----------------------------------- [8] backtrack: 22
----------------------------------- [8] done: 22
----------------------------------- [7] backtrack: 21
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x1 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:137 sat:85 unsat:52

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x1 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x2 > x1 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:138 sat:85 unsat:53

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:139 sat:86 unsat:53

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x3 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:140 sat:86 unsat:54

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x1 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:141 sat:87 unsat:54

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x1 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x2 > x1 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:142 sat:87 unsat:55

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x3[-199] <= x4[-199] &&
x1[-199] <= x3[-199] &&
x1[-199] > x2[-200] &&
x0[-198] > x4[-199] &&
x0[-198] > x3[-199] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 7
x3[-199] <= x4[-199] &&
x1[-199] <= x3[-199] &&
x1[-199] > x2[-200] &&
x0[-198] > x4[-199] &&
x0[-198] > x3[-199] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x1 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:143 sat:88 unsat:55

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x1 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x2 > x1 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:144 sat:88 unsat:56

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:145 sat:89 unsat:56

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x3 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:146 sat:89 unsat:57

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:147 sat:90 unsat:57

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x3 > x4 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:148 sat:90 unsat:58

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x4 <= x0 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:149 sat:91 unsat:58

string analysis: SPC # = 0
NPC constraint # = 8
x4 <= x0 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x4 > x0 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:150 sat:91 unsat:59

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 27 new end
----------------------------------- [7] backtrack: 21
----------------------------------- [7] done: 21
----------------------------------- [6] backtrack: 5
----------------------------------- [6] done: 5
----------------------------------- [5] backtrack: 4
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:151 sat:92 unsat:59

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:152 sat:93 unsat:59

string analysis: SPC # = 0
NPC constraint # = 6
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [6] forward: 28 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:153 sat:94 unsat:59

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:154 sat:95 unsat:59

string analysis: SPC # = 0
NPC constraint # = 7
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [7] forward: 29 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:155 sat:96 unsat:59

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:156 sat:97 unsat:59

string analysis: SPC # = 0
NPC constraint # = 8
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [8] forward: 30 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:157 sat:98 unsat:59

string analysis: SPC # = 0
NPC constraint # = 9
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:158 sat:99 unsat:59

string analysis: SPC # = 0
NPC constraint # = 9
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [9] forward: 31 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 10
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:159 sat:100 unsat:59

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:160 sat:101 unsat:59

string analysis: SPC # = 0
NPC constraint # = 10
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [10] forward: 32 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 10
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 10
x3[-199] > x4[-200] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x1[-198] <= x2[-198] &&
x0[-197] > x4[-200] &&
x0[-197] > x3[-199] &&
x0[-197] > x2[-198] &&
x0[-197] > x1[-198]
*************Summary***************
PC is:constraint # = 10
x3[-199] > x4[-200] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x1[-198] <= x2[-198] &&
x0[-197] > x4[-200] &&
x0[-197] > x3[-199] &&
x0[-197] > x2[-198] &&
x0[-197] > x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x4 <= x3 &&
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:161 sat:102 unsat:59

string analysis: SPC # = 0
NPC constraint # = 11
x4 <= x3 &&
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x4 > x3 &&
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:162 sat:102 unsat:60

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x3 <= x1 &&
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:163 sat:103 unsat:60

string analysis: SPC # = 0
NPC constraint # = 11
x3 <= x1 &&
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x3 > x1 &&
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:164 sat:103 unsat:61

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:165 sat:104 unsat:61

string analysis: SPC # = 0
NPC constraint # = 10
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x1 > x2 &&
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:166 sat:104 unsat:62

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x2 <= x0 &&
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:167 sat:105 unsat:62

string analysis: SPC # = 0
NPC constraint # = 11
x2 <= x0 &&
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x2 > x0 &&
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:168 sat:105 unsat:63

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [11] forward: 33 new end
----------------------------------- [10] backtrack: 32
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 10
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 10
x3[-200] <= x4[-200] &&
x1[-199] > x4[-200] &&
x1[-199] > x3[-200] &&
x2[-199] > x4[-200] &&
x2[-199] > x3[-200] &&
x1[-199] <= x2[-199] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-199] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 10
x3[-200] <= x4[-200] &&
x1[-199] > x4[-200] &&
x1[-199] > x3[-200] &&
x2[-199] > x4[-200] &&
x2[-199] > x3[-200] &&
x1[-199] <= x2[-199] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-199] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:169 sat:106 unsat:63

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x3 > x4 &&
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:170 sat:106 unsat:64

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x4 <= x1 &&
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:171 sat:107 unsat:64

string analysis: SPC # = 0
NPC constraint # = 11
x4 <= x1 &&
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x4 > x1 &&
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:172 sat:107 unsat:65

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:173 sat:108 unsat:65

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x1 > x2 &&
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:174 sat:108 unsat:66

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x2 <= x0 &&
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:175 sat:109 unsat:66

string analysis: SPC # = 0
NPC constraint # = 11
x2 <= x0 &&
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x2 > x0 &&
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:176 sat:109 unsat:67

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [11] forward: 34 new end
----------------------------------- [10] backtrack: 32
----------------------------------- [10] done: 32
----------------------------------- [9] backtrack: 31
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 10
x3 <= x1 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:177 sat:110 unsat:67

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x1 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x3 > x1 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:178 sat:110 unsat:68

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x1[-199] <= x4[-199] &&
x1[-199] > x3[-200] &&
x2[-198] > x4[-199] &&
x2[-198] > x3[-200] &&
x1[-199] <= x2[-198] &&
x0[-197] > x4[-199] &&
x0[-197] > x3[-200] &&
x0[-197] > x2[-198] &&
x0[-197] > x1[-199]
*************Summary***************
PC is:constraint # = 9
x1[-199] <= x4[-199] &&
x1[-199] > x3[-200] &&
x2[-198] > x4[-199] &&
x2[-198] > x3[-200] &&
x1[-199] <= x2[-198] &&
x0[-197] > x4[-199] &&
x0[-197] > x3[-200] &&
x0[-197] > x2[-198] &&
x0[-197] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x1 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:179 sat:111 unsat:68

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x1 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x3 > x1 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:180 sat:111 unsat:69

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:181 sat:112 unsat:69

string analysis: SPC # = 0
NPC constraint # = 9
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x1 > x4 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:182 sat:112 unsat:70

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:183 sat:113 unsat:70

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x4 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:184 sat:113 unsat:71

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x2 <= x0 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:185 sat:114 unsat:71

string analysis: SPC # = 0
NPC constraint # = 10
x2 <= x0 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x2 > x0 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:186 sat:114 unsat:72

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 35 new end
----------------------------------- [9] backtrack: 31
----------------------------------- [9] done: 31
----------------------------------- [8] backtrack: 30
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:187 sat:115 unsat:72

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:188 sat:116 unsat:72

string analysis: SPC # = 0
NPC constraint # = 9
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [9] forward: 36 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 10
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:189 sat:117 unsat:72

string analysis: SPC # = 0
NPC constraint # = 10
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:190 sat:118 unsat:72

string analysis: SPC # = 0
NPC constraint # = 10
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [10] forward: 37 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 10
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 10
x1[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x1[-199] <= x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x1[-199] <= x2[-198] &&
x0[-197] > x4[-200] &&
x0[-197] > x3[-199] &&
x0[-197] > x2[-198] &&
x0[-197] > x1[-199]
*************Summary***************
PC is:constraint # = 10
x1[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x1[-199] <= x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x1[-199] <= x2[-198] &&
x0[-197] > x4[-200] &&
x0[-197] > x3[-199] &&
x0[-197] > x2[-198] &&
x0[-197] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x4 <= x1 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:191 sat:119 unsat:72

string analysis: SPC # = 0
NPC constraint # = 11
x4 <= x1 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x4 > x1 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:192 sat:119 unsat:73

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:193 sat:120 unsat:73

string analysis: SPC # = 0
NPC constraint # = 10
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x1 > x3 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:194 sat:120 unsat:74

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x3 <= x2 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:195 sat:121 unsat:74

string analysis: SPC # = 0
NPC constraint # = 11
x3 <= x2 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x3 > x2 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:196 sat:121 unsat:75

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x2 <= x0 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:197 sat:122 unsat:75

string analysis: SPC # = 0
NPC constraint # = 11
x2 <= x0 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x2 > x0 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:198 sat:122 unsat:76

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [11] forward: 38 new end
----------------------------------- [10] backtrack: 37
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 10
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 10
x1[-200] <= x4[-200] &&
x3[-199] > x4[-200] &&
x1[-200] <= x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x1[-200] <= x2[-198] &&
x0[-197] > x4[-200] &&
x0[-197] > x3[-199] &&
x0[-197] > x2[-198] &&
x0[-197] > x1[-200]
*************Summary***************
PC is:constraint # = 10
x1[-200] <= x4[-200] &&
x3[-199] > x4[-200] &&
x1[-200] <= x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x1[-200] <= x2[-198] &&
x0[-197] > x4[-200] &&
x0[-197] > x3[-199] &&
x0[-197] > x2[-198] &&
x0[-197] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:199 sat:123 unsat:76

string analysis: SPC # = 0
NPC constraint # = 10
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x1 > x4 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:200 sat:123 unsat:77

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x4 <= x3 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:201 sat:124 unsat:77

string analysis: SPC # = 0
NPC constraint # = 11
x4 <= x3 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x4 > x3 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:202 sat:124 unsat:78

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x3 <= x2 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:203 sat:125 unsat:78

string analysis: SPC # = 0
NPC constraint # = 11
x3 <= x2 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x3 > x2 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:204 sat:125 unsat:79

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x2 <= x0 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:205 sat:126 unsat:79

string analysis: SPC # = 0
NPC constraint # = 11
x2 <= x0 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 11
x2 > x0 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:206 sat:126 unsat:80

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [11] forward: 39 new end
----------------------------------- [10] backtrack: 37
----------------------------------- [10] done: 37
----------------------------------- [9] backtrack: 36
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:207 sat:127 unsat:80

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x1 > x3 &&
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:208 sat:127 unsat:81

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x3[-200] <= x4[-200] &&
x1[-200] <= x3[-200] &&
x2[-199] > x4[-200] &&
x2[-199] > x3[-200] &&
x1[-200] <= x2[-199] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-199] &&
x0[-198] > x1[-200]
*************Summary***************
PC is:constraint # = 9
x3[-200] <= x4[-200] &&
x1[-200] <= x3[-200] &&
x2[-199] > x4[-200] &&
x2[-199] > x3[-200] &&
x1[-200] <= x2[-199] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-199] &&
x0[-198] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:209 sat:128 unsat:81

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x1 > x3 &&
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:210 sat:128 unsat:82

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:211 sat:129 unsat:82

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x3 > x4 &&
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:212 sat:129 unsat:83

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:213 sat:130 unsat:83

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x4 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:214 sat:130 unsat:84

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x2 <= x0 &&
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:215 sat:131 unsat:84

string analysis: SPC # = 0
NPC constraint # = 10
x2 <= x0 &&
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x2 > x0 &&
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:216 sat:131 unsat:85

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 40 new end
----------------------------------- [9] backtrack: 36
----------------------------------- [9] done: 36
----------------------------------- [8] backtrack: 30
----------------------------------- [8] done: 30
----------------------------------- [7] backtrack: 29
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:217 sat:132 unsat:85

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:218 sat:133 unsat:85

string analysis: SPC # = 0
NPC constraint # = 8
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [8] forward: 41 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:219 sat:134 unsat:85

string analysis: SPC # = 0
NPC constraint # = 8
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x1 > x2 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:220 sat:134 unsat:86

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x3 <= x1 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:221 sat:135 unsat:86

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x1 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x3 > x1 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:222 sat:135 unsat:87

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x1[-199] > x3[-200] &&
x2[-199] <= x4[-199] &&
x2[-199] > x3[-200] &&
x1[-199] <= x2[-199] &&
x0[-198] > x4[-199] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-199] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 8
x1[-199] > x3[-200] &&
x2[-199] <= x4[-199] &&
x2[-199] > x3[-200] &&
x1[-199] <= x2[-199] &&
x0[-198] > x4[-199] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-199] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x1 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:223 sat:136 unsat:87

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x1 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x3 > x1 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:224 sat:136 unsat:88

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:225 sat:137 unsat:88

string analysis: SPC # = 0
NPC constraint # = 8
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x1 > x2 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:226 sat:137 unsat:89

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:227 sat:138 unsat:89

string analysis: SPC # = 0
NPC constraint # = 8
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x2 > x4 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:228 sat:138 unsat:90

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x0 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:229 sat:139 unsat:90

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x0 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x4 > x0 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:230 sat:139 unsat:91

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 42 new end
----------------------------------- [8] backtrack: 41
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x3 <= x2 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:231 sat:140 unsat:91

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x2 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x3 > x2 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:232 sat:140 unsat:92

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:233 sat:141 unsat:92

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x1 > x3 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:234 sat:141 unsat:93

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x1[-200] <= x3[-200] &&
x2[-199] <= x4[-199] &&
x2[-199] > x3[-200] &&
x1[-200] <= x2[-199] &&
x0[-198] > x4[-199] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-199] &&
x0[-198] > x1[-200]
*************Summary***************
PC is:constraint # = 8
x1[-200] <= x3[-200] &&
x2[-199] <= x4[-199] &&
x2[-199] > x3[-200] &&
x1[-200] <= x2[-199] &&
x0[-198] > x4[-199] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-199] &&
x0[-198] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:235 sat:142 unsat:93

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x1 > x3 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:236 sat:142 unsat:94

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x2 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:237 sat:143 unsat:94

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x2 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x3 > x2 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:238 sat:143 unsat:95

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:239 sat:144 unsat:95

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x2 > x4 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:240 sat:144 unsat:96

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x0 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:241 sat:145 unsat:96

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x0 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x4 > x0 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:242 sat:145 unsat:97

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 43 new end
----------------------------------- [8] backtrack: 41
----------------------------------- [8] done: 41
----------------------------------- [7] backtrack: 29
----------------------------------- [7] done: 29
----------------------------------- [6] backtrack: 28
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:243 sat:146 unsat:97

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:244 sat:147 unsat:97

string analysis: SPC # = 0
NPC constraint # = 7
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [7] forward: 44 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:245 sat:148 unsat:97

string analysis: SPC # = 0
NPC constraint # = 7
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x2 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:246 sat:148 unsat:98

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:247 sat:149 unsat:98

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:248 sat:150 unsat:98

string analysis: SPC # = 0
NPC constraint # = 8
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [8] forward: 45 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:249 sat:151 unsat:98

string analysis: SPC # = 0
NPC constraint # = 9
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:250 sat:152 unsat:98

string analysis: SPC # = 0
NPC constraint # = 9
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [9] forward: 46 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x1[-199] > x4[-200] &&
x2[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x2[-199] <= x3[-199] &&
x1[-199] <= x2[-199] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-199] &&
x0[-198] > x2[-199] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 9
x1[-199] > x4[-200] &&
x2[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x2[-199] <= x3[-199] &&
x1[-199] <= x2[-199] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-199] &&
x0[-198] > x2[-199] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x1 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:251 sat:153 unsat:98

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x1 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x4 > x1 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:252 sat:153 unsat:99

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:253 sat:154 unsat:99

string analysis: SPC # = 0
NPC constraint # = 9
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x1 > x2 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:254 sat:154 unsat:100

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:255 sat:155 unsat:100

string analysis: SPC # = 0
NPC constraint # = 9
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x2 > x3 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:256 sat:155 unsat:101

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x0 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:257 sat:156 unsat:101

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x0 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x3 > x0 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:258 sat:156 unsat:102

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 47 new end
----------------------------------- [9] backtrack: 46
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x1[-200] <= x4[-200] &&
x2[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x2[-199] <= x3[-199] &&
x1[-200] <= x2[-199] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-199] &&
x0[-198] > x2[-199] &&
x0[-198] > x1[-200]
*************Summary***************
PC is:constraint # = 9
x1[-200] <= x4[-200] &&
x2[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x2[-199] <= x3[-199] &&
x1[-200] <= x2[-199] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-199] &&
x0[-198] > x2[-199] &&
x0[-198] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:259 sat:157 unsat:102

string analysis: SPC # = 0
NPC constraint # = 9
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x1 > x4 &&
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:260 sat:157 unsat:103

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x2 &&
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:261 sat:158 unsat:103

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x2 &&
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x4 > x2 &&
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:262 sat:158 unsat:104

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:263 sat:159 unsat:104

string analysis: SPC # = 0
NPC constraint # = 9
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x2 > x3 &&
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:264 sat:159 unsat:105

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x0 &&
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:265 sat:160 unsat:105

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x0 &&
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 10
x3 > x0 &&
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:266 sat:160 unsat:106

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 48 new end
----------------------------------- [9] backtrack: 46
----------------------------------- [9] done: 46
----------------------------------- [8] backtrack: 45
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:267 sat:161 unsat:106

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x1 > x2 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:268 sat:161 unsat:107

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x2[-200] <= x4[-200] &&
x3[-199] > x4[-200] &&
x2[-200] <= x3[-199] &&
x1[-200] <= x2[-200] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-199] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-200]
*************Summary***************
PC is:constraint # = 8
x2[-200] <= x4[-200] &&
x3[-199] > x4[-200] &&
x2[-200] <= x3[-199] &&
x1[-200] <= x2[-200] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-199] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:269 sat:162 unsat:107

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x1 > x2 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:270 sat:162 unsat:108

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:271 sat:163 unsat:108

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x2 > x4 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:272 sat:163 unsat:109

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x3 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:273 sat:164 unsat:109

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x3 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x4 > x3 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:274 sat:164 unsat:110

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x0 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:275 sat:165 unsat:110

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x0 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x3 > x0 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:276 sat:165 unsat:111

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 49 new end
----------------------------------- [8] backtrack: 45
----------------------------------- [8] done: 45
----------------------------------- [7] backtrack: 44
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:277 sat:166 unsat:111

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x2 &&
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:278 sat:166 unsat:112

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:279 sat:167 unsat:112

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x2 > x3 &&
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:280 sat:167 unsat:113

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:281 sat:168 unsat:113

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x2 &&
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:282 sat:168 unsat:114

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x3[-200] <= x4[-200] &&
x2[-200] <= x3[-200] &&
x1[-200] <= x2[-200] &&
x0[-199] > x4[-200] &&
x0[-199] > x3[-200] &&
x0[-199] > x2[-200] &&
x0[-199] > x1[-200]
*************Summary***************
PC is:constraint # = 7
x3[-200] <= x4[-200] &&
x2[-200] <= x3[-200] &&
x1[-200] <= x2[-200] &&
x0[-199] > x4[-200] &&
x0[-199] > x3[-200] &&
x0[-199] > x2[-200] &&
x0[-199] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:283 sat:169 unsat:114

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x2 &&
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:284 sat:169 unsat:115

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:285 sat:170 unsat:115

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x2 > x3 &&
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:286 sat:170 unsat:116

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:287 sat:171 unsat:116

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x3 > x4 &&
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:288 sat:171 unsat:117

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x4 <= x0 &&
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:289 sat:172 unsat:117

string analysis: SPC # = 0
NPC constraint # = 8
x4 <= x0 &&
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x4 > x0 &&
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:290 sat:172 unsat:118

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 50 new end
----------------------------------- [7] backtrack: 44
----------------------------------- [7] done: 44
----------------------------------- [6] backtrack: 28
----------------------------------- [6] done: 28
----------------------------------- [5] backtrack: 4
----------------------------------- [5] done: 4
----------------------------------- [4] backtrack: 3
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:291 sat:173 unsat:118

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 5
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:292 sat:174 unsat:118

string analysis: SPC # = 0
NPC constraint # = 5
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [5] forward: 51 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:293 sat:175 unsat:118

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:294 sat:176 unsat:118

string analysis: SPC # = 0
NPC constraint # = 6
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [6] forward: 52 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x1 <= x0 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:295 sat:177 unsat:118

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x0 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x0 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:296 sat:177 unsat:119

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:297 sat:178 unsat:119

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x2 > x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:298 sat:179 unsat:119

string analysis: SPC # = 0
NPC constraint # = 7
x2 > x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [7] forward: 53 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x1 &&
x2 > x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:299 sat:180 unsat:119

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x1 &&
x2 > x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x2 > x1 &&
x2 > x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:300 sat:180 unsat:120

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x3 <= x2 &&
x2 > x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:301 sat:181 unsat:120

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x2 &&
x2 > x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x3 > x2 &&
x2 > x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:302 sat:181 unsat:121

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x2 > x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x2[-199] > x3[-200] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-197] <= x4[-197] &&
x0[-197] > x3[-200] &&
x0[-197] > x2[-199] &&
x0[-197] > x1[-198]
*************Summary***************
PC is:constraint # = 7
x2[-199] > x3[-200] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-197] <= x4[-197] &&
x0[-197] > x3[-200] &&
x0[-197] > x2[-199] &&
x0[-197] > x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x3 <= x2 &&
x2 > x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:303 sat:182 unsat:121

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x2 &&
x2 > x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x3 > x2 &&
x2 > x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:304 sat:182 unsat:122

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x1 &&
x2 > x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:305 sat:183 unsat:122

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x1 &&
x2 > x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x2 > x1 &&
x2 > x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:306 sat:183 unsat:123

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x1 <= x0 &&
x2 > x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:307 sat:184 unsat:123

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x0 &&
x2 > x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x0 &&
x2 > x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:308 sat:184 unsat:124

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x2 > x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:309 sat:185 unsat:124

string analysis: SPC # = 0
NPC constraint # = 7
x2 > x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x0 > x4 &&
x2 > x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:310 sat:185 unsat:125

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 54 new end
----------------------------------- [7] backtrack: 53
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x3 <= x1 &&
x2 <= x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:311 sat:186 unsat:125

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x1 &&
x2 <= x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x3 > x1 &&
x2 <= x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:312 sat:186 unsat:126

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:313 sat:187 unsat:126

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x2 > x3 &&
x2 <= x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:314 sat:187 unsat:127

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x2 <= x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x2[-200] <= x3[-200] &&
x1[-199] > x3[-200] &&
x1[-199] > x2[-200] &&
x0[-198] <= x4[-198] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 7
x2[-200] <= x3[-200] &&
x1[-199] > x3[-200] &&
x1[-199] > x2[-200] &&
x0[-198] <= x4[-198] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x2 <= x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:315 sat:188 unsat:127

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x2 > x3 &&
x2 <= x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:316 sat:188 unsat:128

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x3 <= x1 &&
x2 <= x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:317 sat:189 unsat:128

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x1 &&
x2 <= x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x3 > x1 &&
x2 <= x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:318 sat:189 unsat:129

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x1 <= x0 &&
x2 <= x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:319 sat:190 unsat:129

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x0 &&
x2 <= x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x0 &&
x2 <= x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:320 sat:190 unsat:130

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x2 <= x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:321 sat:191 unsat:130

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x0 > x4 &&
x2 <= x3 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:322 sat:191 unsat:131

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 55 new end
----------------------------------- [7] backtrack: 53
----------------------------------- [7] done: 53
----------------------------------- [6] backtrack: 52
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 <= x0 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:323 sat:192 unsat:131

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x0 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x3 > x0 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:324 sat:192 unsat:132

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x1 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:325 sat:193 unsat:132

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x1 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x2 > x1 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:326 sat:193 unsat:133

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:327 sat:194 unsat:133

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x3 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:328 sat:194 unsat:134

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x1 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:329 sat:195 unsat:134

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x1 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x2 > x1 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:330 sat:195 unsat:135

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 6
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 6
x1[-199] <= x3[-199] &&
x1[-199] > x2[-200] &&
x0[-198] <= x4[-198] &&
x0[-198] > x3[-199] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 6
x1[-199] <= x3[-199] &&
x1[-199] > x2[-200] &&
x0[-198] <= x4[-198] &&
x0[-198] > x3[-199] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x2 <= x1 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:331 sat:196 unsat:135

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x1 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x2 > x1 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:332 sat:196 unsat:136

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:333 sat:197 unsat:136

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x3 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:334 sat:197 unsat:137

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x3 <= x0 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:335 sat:198 unsat:137

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x0 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x3 > x0 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:336 sat:198 unsat:138

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:337 sat:199 unsat:138

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x0 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:338 sat:199 unsat:139

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [7] forward: 56 new end
----------------------------------- [6] backtrack: 52
----------------------------------- [6] done: 52
----------------------------------- [5] backtrack: 51
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:339 sat:200 unsat:139

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:340 sat:201 unsat:139

string analysis: SPC # = 0
NPC constraint # = 6
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [6] forward: 57 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x0 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:341 sat:202 unsat:139

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x0 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x2 > x0 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:342 sat:202 unsat:140

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x1 <= x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:343 sat:203 unsat:140

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:344 sat:204 unsat:140

string analysis: SPC # = 0
NPC constraint # = 7
x1 > x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [7] forward: 58 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x1 > x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:345 sat:205 unsat:140

string analysis: SPC # = 0
NPC constraint # = 7
x1 > x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x2 &&
x1 > x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:346 sat:205 unsat:141

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x3 <= x1 &&
x1 > x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:347 sat:206 unsat:141

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x1 &&
x1 > x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x3 > x1 &&
x1 > x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:348 sat:206 unsat:142

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x1 > x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x1[-199] > x3[-200] &&
x2[-199] > x3[-200] &&
x1[-199] <= x2[-199] &&
x0[-198] <= x4[-198] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-199] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 7
x1[-199] > x3[-200] &&
x2[-199] > x3[-200] &&
x1[-199] <= x2[-199] &&
x0[-198] <= x4[-198] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-199] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x3 <= x1 &&
x1 > x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:349 sat:207 unsat:142

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x1 &&
x1 > x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x3 > x1 &&
x1 > x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:350 sat:207 unsat:143

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x1 > x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:351 sat:208 unsat:143

string analysis: SPC # = 0
NPC constraint # = 7
x1 > x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x2 &&
x1 > x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:352 sat:208 unsat:144

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x0 &&
x1 > x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:353 sat:209 unsat:144

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x0 &&
x1 > x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x2 > x0 &&
x1 > x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:354 sat:209 unsat:145

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x1 > x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:355 sat:210 unsat:145

string analysis: SPC # = 0
NPC constraint # = 7
x1 > x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x0 > x4 &&
x1 > x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:356 sat:210 unsat:146

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 59 new end
----------------------------------- [7] backtrack: 58
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x3 <= x2 &&
x1 <= x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:357 sat:211 unsat:146

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x2 &&
x1 <= x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x3 > x2 &&
x1 <= x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:358 sat:211 unsat:147

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x1 <= x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:359 sat:212 unsat:147

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x3 &&
x1 <= x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:360 sat:212 unsat:148

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x1 <= x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x1[-200] <= x3[-200] &&
x2[-199] > x3[-200] &&
x1[-200] <= x2[-199] &&
x0[-198] <= x4[-198] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-199] &&
x0[-198] > x1[-200]
*************Summary***************
PC is:constraint # = 7
x1[-200] <= x3[-200] &&
x2[-199] > x3[-200] &&
x1[-200] <= x2[-199] &&
x0[-198] <= x4[-198] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-199] &&
x0[-198] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x1 <= x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:361 sat:213 unsat:148

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x3 &&
x1 <= x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:362 sat:213 unsat:149

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x3 <= x2 &&
x1 <= x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:363 sat:214 unsat:149

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x2 &&
x1 <= x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x3 > x2 &&
x1 <= x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:364 sat:214 unsat:150

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x0 &&
x1 <= x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:365 sat:215 unsat:150

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x0 &&
x1 <= x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x2 > x0 &&
x1 <= x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:366 sat:215 unsat:151

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x1 <= x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:367 sat:216 unsat:151

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x0 > x4 &&
x1 <= x3 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:368 sat:216 unsat:152

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 60 new end
----------------------------------- [7] backtrack: 58
----------------------------------- [7] done: 58
----------------------------------- [6] backtrack: 57
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 <= x0 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:369 sat:217 unsat:152

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x0 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x3 > x0 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:370 sat:217 unsat:153

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:371 sat:218 unsat:153

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x2 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:372 sat:218 unsat:154

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:373 sat:219 unsat:154

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x2 > x3 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:374 sat:219 unsat:155

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:375 sat:220 unsat:155

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x2 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:376 sat:220 unsat:156

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 6
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 6
x2[-200] <= x3[-200] &&
x1[-200] <= x2[-200] &&
x0[-199] <= x4[-199] &&
x0[-199] > x3[-200] &&
x0[-199] > x2[-200] &&
x0[-199] > x1[-200]
*************Summary***************
PC is:constraint # = 6
x2[-200] <= x3[-200] &&
x1[-200] <= x2[-200] &&
x0[-199] <= x4[-199] &&
x0[-199] > x3[-200] &&
x0[-199] > x2[-200] &&
x0[-199] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:377 sat:221 unsat:156

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x2 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:378 sat:221 unsat:157

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:379 sat:222 unsat:157

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x2 > x3 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:380 sat:222 unsat:158

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x3 <= x0 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:381 sat:223 unsat:158

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x0 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x3 > x0 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:382 sat:223 unsat:159

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:383 sat:224 unsat:159

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x0 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:384 sat:224 unsat:160

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [7] forward: 61 new end
----------------------------------- [6] backtrack: 57
----------------------------------- [6] done: 57
----------------------------------- [5] backtrack: 51
----------------------------------- [5] done: 51
----------------------------------- [4] backtrack: 3
----------------------------------- [4] done: 3
----------------------------------- [3] backtrack: 2
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:385 sat:225 unsat:160

string analysis: SPC # = 0
NPC constraint # = 4
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 4
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:386 sat:226 unsat:160

string analysis: SPC # = 0
NPC constraint # = 4
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [4] forward: 62 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:387 sat:227 unsat:160

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 5
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:388 sat:228 unsat:160

string analysis: SPC # = 0
NPC constraint # = 5
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [5] forward: 63 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 <= x0 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:389 sat:229 unsat:160

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x0 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x1 > x0 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:390 sat:229 unsat:161

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:391 sat:230 unsat:161

string analysis: SPC # = 0
NPC constraint # = 6
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:392 sat:231 unsat:161

string analysis: SPC # = 0
NPC constraint # = 6
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [6] forward: 64 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x1 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:393 sat:232 unsat:161

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x1 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x2 > x1 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:394 sat:232 unsat:162

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x1 <= x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:395 sat:233 unsat:162

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:396 sat:234 unsat:162

string analysis: SPC # = 0
NPC constraint # = 7
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [7] forward: 65 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:397 sat:235 unsat:162

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x2 > x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:398 sat:236 unsat:162

string analysis: SPC # = 0
NPC constraint # = 8
x2 > x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [8] forward: 66 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x2 > x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x2[-199] > x4[-200] &&
x1[-198] > x4[-200] &&
x0[-197] > x4[-200] &&
x1[-198] > x2[-199] &&
x3[-197] > x4[-200] &&
x0[-197] <= x3[-197] &&
x0[-197] > x2[-199] &&
x0[-197] > x1[-198]
*************Summary***************
PC is:constraint # = 8
x2[-199] > x4[-200] &&
x1[-198] > x4[-200] &&
x0[-197] > x4[-200] &&
x1[-198] > x2[-199] &&
x3[-197] > x4[-200] &&
x0[-197] <= x3[-197] &&
x0[-197] > x2[-199] &&
x0[-197] > x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x2 &&
x2 > x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:399 sat:237 unsat:162

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x2 &&
x2 > x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x4 > x2 &&
x2 > x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:400 sat:237 unsat:163

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x2 <= x1 &&
x2 > x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:401 sat:238 unsat:163

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x1 &&
x2 > x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x2 > x1 &&
x2 > x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:402 sat:238 unsat:164

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x1 <= x0 &&
x2 > x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:403 sat:239 unsat:164

string analysis: SPC # = 0
NPC constraint # = 9
x1 <= x0 &&
x2 > x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x1 > x0 &&
x2 > x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:404 sat:239 unsat:165

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 > x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:405 sat:240 unsat:165

string analysis: SPC # = 0
NPC constraint # = 8
x2 > x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x0 > x3 &&
x2 > x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:406 sat:240 unsat:166

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 67 new end
----------------------------------- [8] backtrack: 66
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x2 <= x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x2[-200] <= x4[-200] &&
x1[-199] > x4[-200] &&
x0[-198] > x4[-200] &&
x1[-199] > x2[-200] &&
x3[-198] > x4[-200] &&
x0[-198] <= x3[-198] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 8
x2[-200] <= x4[-200] &&
x1[-199] > x4[-200] &&
x0[-198] > x4[-200] &&
x1[-199] > x2[-200] &&
x3[-198] > x4[-200] &&
x0[-198] <= x3[-198] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:407 sat:241 unsat:166

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x2 > x4 &&
x2 <= x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:408 sat:241 unsat:167

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x1 &&
x2 <= x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:409 sat:242 unsat:167

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x1 &&
x2 <= x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x4 > x1 &&
x2 <= x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:410 sat:242 unsat:168

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x1 <= x0 &&
x2 <= x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:411 sat:243 unsat:168

string analysis: SPC # = 0
NPC constraint # = 9
x1 <= x0 &&
x2 <= x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x1 > x0 &&
x2 <= x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:412 sat:243 unsat:169

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:413 sat:244 unsat:169

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x0 > x3 &&
x2 <= x4 &&
x1 > x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:414 sat:244 unsat:170

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 68 new end
----------------------------------- [8] backtrack: 66
----------------------------------- [8] done: 66
----------------------------------- [7] backtrack: 65
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x1 &&
x1 <= x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:415 sat:245 unsat:170

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x1 &&
x1 <= x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x2 > x1 &&
x1 <= x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:416 sat:245 unsat:171

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x1 <= x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x1[-199] <= x4[-199] &&
x0[-198] > x4[-199] &&
x1[-199] > x2[-200] &&
x3[-198] > x4[-199] &&
x0[-198] <= x3[-198] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 7
x1[-199] <= x4[-199] &&
x0[-198] > x4[-199] &&
x1[-199] > x2[-200] &&
x3[-198] > x4[-199] &&
x0[-198] <= x3[-198] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x1 &&
x1 <= x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:417 sat:246 unsat:171

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x1 &&
x1 <= x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x2 > x1 &&
x1 <= x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:418 sat:246 unsat:172

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x1 <= x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:419 sat:247 unsat:172

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x4 &&
x1 <= x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:420 sat:247 unsat:173

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x4 <= x0 &&
x1 <= x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:421 sat:248 unsat:173

string analysis: SPC # = 0
NPC constraint # = 8
x4 <= x0 &&
x1 <= x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x4 > x0 &&
x1 <= x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:422 sat:248 unsat:174

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x1 <= x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:423 sat:249 unsat:174

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x0 > x3 &&
x1 <= x4 &&
x0 > x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:424 sat:249 unsat:175

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 69 new end
----------------------------------- [7] backtrack: 65
----------------------------------- [7] done: 65
----------------------------------- [6] backtrack: 64
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x1 &&
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:425 sat:250 unsat:175

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x1 &&
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x2 > x1 &&
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:426 sat:250 unsat:176

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x1 <= x0 &&
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:427 sat:251 unsat:176

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x0 &&
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x0 &&
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:428 sat:251 unsat:177

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x1 &&
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:429 sat:252 unsat:177

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x1 &&
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x2 > x1 &&
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:430 sat:252 unsat:178

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 6
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 6
x0[-198] <= x4[-198] &&
x1[-199] > x2[-200] &&
x3[-197] > x4[-198] &&
x0[-198] <= x3[-197] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 6
x0[-198] <= x4[-198] &&
x1[-199] > x2[-200] &&
x3[-197] > x4[-198] &&
x0[-198] <= x3[-197] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x2 <= x1 &&
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:431 sat:253 unsat:178

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x1 &&
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x2 > x1 &&
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:432 sat:253 unsat:179

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x1 <= x0 &&
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:433 sat:254 unsat:179

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x0 &&
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x0 &&
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:434 sat:254 unsat:180

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:435 sat:255 unsat:180

string analysis: SPC # = 0
NPC constraint # = 6
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x0 > x4 &&
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:436 sat:255 unsat:181

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x4 <= x3 &&
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:437 sat:256 unsat:181

string analysis: SPC # = 0
NPC constraint # = 7
x4 <= x3 &&
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x4 > x3 &&
x0 <= x4 &&
x1 > x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:438 sat:256 unsat:182

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [7] forward: 70 new end
----------------------------------- [6] backtrack: 64
----------------------------------- [6] done: 64
----------------------------------- [5] backtrack: 63
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x2 <= x0 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:439 sat:257 unsat:182

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x0 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x2 > x0 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:440 sat:257 unsat:183

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:441 sat:258 unsat:183

string analysis: SPC # = 0
NPC constraint # = 6
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:442 sat:259 unsat:183

string analysis: SPC # = 0
NPC constraint # = 6
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [6] forward: 71 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:443 sat:260 unsat:183

string analysis: SPC # = 0
NPC constraint # = 6
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x2 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:444 sat:260 unsat:184

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:445 sat:261 unsat:184

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:446 sat:262 unsat:184

string analysis: SPC # = 0
NPC constraint # = 7
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [7] forward: 72 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x1 <= x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:447 sat:263 unsat:184

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:448 sat:264 unsat:184

string analysis: SPC # = 0
NPC constraint # = 8
x1 > x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [8] forward: 73 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x1 > x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x1[-199] > x4[-200] &&
x2[-199] > x4[-200] &&
x0[-198] > x4[-200] &&
x1[-199] <= x2[-199] &&
x3[-198] > x4[-200] &&
x0[-198] <= x3[-198] &&
x0[-198] > x2[-199] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 8
x1[-199] > x4[-200] &&
x2[-199] > x4[-200] &&
x0[-198] > x4[-200] &&
x1[-199] <= x2[-199] &&
x3[-198] > x4[-200] &&
x0[-198] <= x3[-198] &&
x0[-198] > x2[-199] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x1 &&
x1 > x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:449 sat:265 unsat:184

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x1 &&
x1 > x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x4 > x1 &&
x1 > x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:450 sat:265 unsat:185

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x1 > x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:451 sat:266 unsat:185

string analysis: SPC # = 0
NPC constraint # = 8
x1 > x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x1 > x2 &&
x1 > x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:452 sat:266 unsat:186

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x2 <= x0 &&
x1 > x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:453 sat:267 unsat:186

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x0 &&
x1 > x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x2 > x0 &&
x1 > x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:454 sat:267 unsat:187

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x1 > x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:455 sat:268 unsat:187

string analysis: SPC # = 0
NPC constraint # = 8
x1 > x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x0 > x3 &&
x1 > x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:456 sat:268 unsat:188

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 74 new end
----------------------------------- [8] backtrack: 73
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x1 <= x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x1[-200] <= x4[-200] &&
x2[-199] > x4[-200] &&
x0[-198] > x4[-200] &&
x1[-200] <= x2[-199] &&
x3[-198] > x4[-200] &&
x0[-198] <= x3[-198] &&
x0[-198] > x2[-199] &&
x0[-198] > x1[-200]
*************Summary***************
PC is:constraint # = 8
x1[-200] <= x4[-200] &&
x2[-199] > x4[-200] &&
x0[-198] > x4[-200] &&
x1[-200] <= x2[-199] &&
x3[-198] > x4[-200] &&
x0[-198] <= x3[-198] &&
x0[-198] > x2[-199] &&
x0[-198] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x1 <= x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:457 sat:269 unsat:188

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x1 > x4 &&
x1 <= x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:458 sat:269 unsat:189

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x2 &&
x1 <= x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:459 sat:270 unsat:189

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x2 &&
x1 <= x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x4 > x2 &&
x1 <= x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:460 sat:270 unsat:190

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x2 <= x0 &&
x1 <= x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:461 sat:271 unsat:190

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x0 &&
x1 <= x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x2 > x0 &&
x1 <= x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:462 sat:271 unsat:191

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x1 <= x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:463 sat:272 unsat:191

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 9
x0 > x3 &&
x1 <= x4 &&
x2 > x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:464 sat:272 unsat:192

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 75 new end
----------------------------------- [8] backtrack: 73
----------------------------------- [8] done: 73
----------------------------------- [7] backtrack: 72
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:465 sat:273 unsat:192

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x2 &&
x2 <= x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:466 sat:273 unsat:193

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x2 <= x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x2[-200] <= x4[-200] &&
x0[-199] > x4[-200] &&
x1[-200] <= x2[-200] &&
x3[-199] > x4[-200] &&
x0[-199] <= x3[-199] &&
x0[-199] > x2[-200] &&
x0[-199] > x1[-200]
*************Summary***************
PC is:constraint # = 7
x2[-200] <= x4[-200] &&
x0[-199] > x4[-200] &&
x1[-200] <= x2[-200] &&
x3[-199] > x4[-200] &&
x0[-199] <= x3[-199] &&
x0[-199] > x2[-200] &&
x0[-199] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x2 <= x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:467 sat:274 unsat:193

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x2 &&
x2 <= x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:468 sat:274 unsat:194

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x2 <= x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:469 sat:275 unsat:194

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x2 > x4 &&
x2 <= x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:470 sat:275 unsat:195

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x4 <= x0 &&
x2 <= x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:471 sat:276 unsat:195

string analysis: SPC # = 0
NPC constraint # = 8
x4 <= x0 &&
x2 <= x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x4 > x0 &&
x2 <= x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:472 sat:276 unsat:196

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x2 <= x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:473 sat:277 unsat:196

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 8
x0 > x3 &&
x2 <= x4 &&
x0 > x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:474 sat:277 unsat:197

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 76 new end
----------------------------------- [7] backtrack: 72
----------------------------------- [7] done: 72
----------------------------------- [6] backtrack: 71
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:475 sat:278 unsat:197

string analysis: SPC # = 0
NPC constraint # = 6
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x2 &&
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:476 sat:278 unsat:198

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x0 &&
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:477 sat:279 unsat:198

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x0 &&
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x2 > x0 &&
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:478 sat:279 unsat:199

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:479 sat:280 unsat:199

string analysis: SPC # = 0
NPC constraint # = 6
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x2 &&
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:480 sat:280 unsat:200

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 6
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 6
x0[-199] <= x4[-199] &&
x1[-200] <= x2[-200] &&
x3[-198] > x4[-199] &&
x0[-199] <= x3[-198] &&
x0[-199] > x2[-200] &&
x0[-199] > x1[-200]
*************Summary***************
PC is:constraint # = 6
x0[-199] <= x4[-199] &&
x1[-200] <= x2[-200] &&
x3[-198] > x4[-199] &&
x0[-199] <= x3[-198] &&
x0[-199] > x2[-200] &&
x0[-199] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:481 sat:281 unsat:200

string analysis: SPC # = 0
NPC constraint # = 6
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x2 &&
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:482 sat:281 unsat:201

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x2 <= x0 &&
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:483 sat:282 unsat:201

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x0 &&
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x2 > x0 &&
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:484 sat:282 unsat:202

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:485 sat:283 unsat:202

string analysis: SPC # = 0
NPC constraint # = 6
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x0 > x4 &&
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:486 sat:283 unsat:203

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x4 <= x3 &&
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:487 sat:284 unsat:203

string analysis: SPC # = 0
NPC constraint # = 7
x4 <= x3 &&
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 7
x4 > x3 &&
x0 <= x4 &&
x1 <= x2 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:488 sat:284 unsat:204

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [7] forward: 77 new end
----------------------------------- [6] backtrack: 71
----------------------------------- [6] done: 71
----------------------------------- [5] backtrack: 63
----------------------------------- [5] done: 63
----------------------------------- [4] backtrack: 62
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:489 sat:285 unsat:204

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 5
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:490 sat:286 unsat:204

string analysis: SPC # = 0
NPC constraint # = 5
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [5] forward: 78 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 <= x0 &&
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:491 sat:287 unsat:204

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x0 &&
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x1 > x0 &&
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:492 sat:287 unsat:205

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:493 sat:288 unsat:205

string analysis: SPC # = 0
NPC constraint # = 5
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x0 > x3 &&
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:494 sat:288 unsat:206

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x2 <= x1 &&
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:495 sat:289 unsat:206

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x1 &&
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x2 > x1 &&
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:496 sat:289 unsat:207

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 <= x0 &&
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:497 sat:290 unsat:207

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x0 &&
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x1 > x0 &&
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:498 sat:290 unsat:208

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x2 <= x1 &&
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:499 sat:291 unsat:208

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x1 &&
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x2 > x1 &&
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:500 sat:291 unsat:209

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 5
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 5
x1[-199] > x2[-200] &&
x3[-198] <= x4[-198] &&
x0[-198] <= x3[-198] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 5
x1[-199] > x2[-200] &&
x3[-198] <= x4[-198] &&
x0[-198] <= x3[-198] &&
x0[-198] > x2[-200] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x2 <= x1 &&
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:501 sat:292 unsat:209

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x1 &&
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x2 > x1 &&
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:502 sat:292 unsat:210

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x1 <= x0 &&
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:503 sat:293 unsat:210

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x0 &&
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x1 > x0 &&
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:504 sat:293 unsat:211

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:505 sat:294 unsat:211

string analysis: SPC # = 0
NPC constraint # = 5
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x0 > x3 &&
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:506 sat:294 unsat:212

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:507 sat:295 unsat:212

string analysis: SPC # = 0
NPC constraint # = 5
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x3 > x4 &&
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:508 sat:295 unsat:213

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [6] forward: 79 new end
----------------------------------- [5] backtrack: 78
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x2 <= x0 &&
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:509 sat:296 unsat:213

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x0 &&
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x2 > x0 &&
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:510 sat:296 unsat:214

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:511 sat:297 unsat:214

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x0 > x3 &&
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:512 sat:297 unsat:215

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:513 sat:298 unsat:215

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x1 > x2 &&
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:514 sat:298 unsat:216

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x2 <= x0 &&
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:515 sat:299 unsat:216

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x0 &&
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x2 > x0 &&
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:516 sat:299 unsat:217

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:517 sat:300 unsat:217

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x1 > x2 &&
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:518 sat:300 unsat:218

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 5
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 5
x1[-200] <= x2[-200] &&
x3[-199] <= x4[-199] &&
x0[-199] <= x3[-199] &&
x0[-199] > x2[-200] &&
x0[-199] > x1[-200]
*************Summary***************
PC is:constraint # = 5
x1[-200] <= x2[-200] &&
x3[-199] <= x4[-199] &&
x0[-199] <= x3[-199] &&
x0[-199] > x2[-200] &&
x0[-199] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:519 sat:301 unsat:218

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x1 > x2 &&
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:520 sat:301 unsat:219

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x2 <= x0 &&
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:521 sat:302 unsat:219

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x0 &&
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x2 > x0 &&
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:522 sat:302 unsat:220

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:523 sat:303 unsat:220

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x0 > x3 &&
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:524 sat:303 unsat:221

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> true

### PCs: total:525 sat:304 unsat:221

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1
numeric PC: constraint # = 6
x3 > x4 &&
x1 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x0 > x1 -> false

### PCs: total:526 sat:304 unsat:222

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [6] forward: 80 new end
----------------------------------- [5] backtrack: 78
----------------------------------- [5] done: 78
----------------------------------- [4] backtrack: 62
----------------------------------- [4] done: 62
----------------------------------- [3] backtrack: 2
----------------------------------- [3] done: 2
----------------------------------- [2] backtrack: 1
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 3
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:527 sat:305 unsat:222

string analysis: SPC # = 0
NPC constraint # = 3
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 3
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:528 sat:306 unsat:222

string analysis: SPC # = 0
NPC constraint # = 3
x2 > x3 &&
x0 <= x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [3] forward: 81 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:529 sat:307 unsat:222

string analysis: SPC # = 0
NPC constraint # = 4
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 4
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:530 sat:308 unsat:222

string analysis: SPC # = 0
NPC constraint # = 4
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [4] forward: 82 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x1 <= x0 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:531 sat:309 unsat:222

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x0 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 5
x1 > x0 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:532 sat:309 unsat:223

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:533 sat:310 unsat:223

string analysis: SPC # = 0
NPC constraint # = 5
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 5
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:534 sat:311 unsat:223

string analysis: SPC # = 0
NPC constraint # = 5
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [5] forward: 83 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:535 sat:312 unsat:223

string analysis: SPC # = 0
NPC constraint # = 6
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 6
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:536 sat:313 unsat:223

string analysis: SPC # = 0
NPC constraint # = 6
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [6] forward: 84 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:537 sat:314 unsat:223

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:538 sat:315 unsat:223

string analysis: SPC # = 0
NPC constraint # = 7
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [7] forward: 85 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x1 <= x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:539 sat:316 unsat:223

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:540 sat:317 unsat:223

string analysis: SPC # = 0
NPC constraint # = 8
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [8] forward: 86 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:541 sat:318 unsat:223

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 9
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:542 sat:319 unsat:223

string analysis: SPC # = 0
NPC constraint # = 9
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [9] forward: 87 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x3[-199] > x4[-200] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x0[-197] > x4[-200] &&
x0[-197] > x3[-199] &&
x2[-197] > x4[-200] &&
x2[-197] > x3[-199] &&
x0[-197] <= x2[-197] &&
x0[-197] > x1[-198]
*************Summary***************
PC is:constraint # = 9
x3[-199] > x4[-200] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x0[-197] > x4[-200] &&
x0[-197] > x3[-199] &&
x2[-197] > x4[-200] &&
x2[-197] > x3[-199] &&
x0[-197] <= x2[-197] &&
x0[-197] > x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x3 &&
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:543 sat:320 unsat:223

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x3 &&
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 10
x4 > x3 &&
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:544 sat:320 unsat:224

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x1 &&
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:545 sat:321 unsat:224

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x1 &&
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 10
x3 > x1 &&
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:546 sat:321 unsat:225

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x1 <= x0 &&
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:547 sat:322 unsat:225

string analysis: SPC # = 0
NPC constraint # = 10
x1 <= x0 &&
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 10
x1 > x0 &&
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:548 sat:322 unsat:226

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:549 sat:323 unsat:226

string analysis: SPC # = 0
NPC constraint # = 9
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 10
x0 > x2 &&
x3 > x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:550 sat:323 unsat:227

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 88 new end
----------------------------------- [9] backtrack: 87
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x3[-200] <= x4[-200] &&
x1[-199] > x4[-200] &&
x1[-199] > x3[-200] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-200] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-200] &&
x0[-198] <= x2[-198] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 9
x3[-200] <= x4[-200] &&
x1[-199] > x4[-200] &&
x1[-199] > x3[-200] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-200] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-200] &&
x0[-198] <= x2[-198] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:551 sat:324 unsat:227

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 10
x3 > x4 &&
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:552 sat:324 unsat:228

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x1 &&
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:553 sat:325 unsat:228

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x1 &&
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 10
x4 > x1 &&
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:554 sat:325 unsat:229

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x1 <= x0 &&
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:555 sat:326 unsat:229

string analysis: SPC # = 0
NPC constraint # = 10
x1 <= x0 &&
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 10
x1 > x0 &&
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:556 sat:326 unsat:230

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:557 sat:327 unsat:230

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 10
x0 > x2 &&
x3 <= x4 &&
x1 > x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:558 sat:327 unsat:231

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 89 new end
----------------------------------- [9] backtrack: 87
----------------------------------- [9] done: 87
----------------------------------- [8] backtrack: 86
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x3 <= x1 &&
x1 <= x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:559 sat:328 unsat:231

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x1 &&
x1 <= x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 9
x3 > x1 &&
x1 <= x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:560 sat:328 unsat:232

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x1 <= x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x1[-199] <= x4[-199] &&
x1[-199] > x3[-200] &&
x0[-198] > x4[-199] &&
x0[-198] > x3[-200] &&
x2[-198] > x4[-199] &&
x2[-198] > x3[-200] &&
x0[-198] <= x2[-198] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 8
x1[-199] <= x4[-199] &&
x1[-199] > x3[-200] &&
x0[-198] > x4[-199] &&
x0[-198] > x3[-200] &&
x2[-198] > x4[-199] &&
x2[-198] > x3[-200] &&
x0[-198] <= x2[-198] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x1 &&
x1 <= x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:561 sat:329 unsat:232

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x1 &&
x1 <= x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 9
x3 > x1 &&
x1 <= x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:562 sat:329 unsat:233

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x1 <= x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:563 sat:330 unsat:233

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 9
x1 > x4 &&
x1 <= x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:564 sat:330 unsat:234

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x0 &&
x1 <= x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:565 sat:331 unsat:234

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x0 &&
x1 <= x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 9
x4 > x0 &&
x1 <= x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:566 sat:331 unsat:235

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x1 <= x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:567 sat:332 unsat:235

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 9
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:568 sat:332 unsat:236

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 90 new end
----------------------------------- [8] backtrack: 86
----------------------------------- [8] done: 86
----------------------------------- [7] backtrack: 85
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x3 <= x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:569 sat:333 unsat:236

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:570 sat:334 unsat:236

string analysis: SPC # = 0
NPC constraint # = 8
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [8] forward: 91 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:571 sat:335 unsat:236

string analysis: SPC # = 0
NPC constraint # = 9
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 9
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:572 sat:336 unsat:236

string analysis: SPC # = 0
NPC constraint # = 9
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [9] forward: 92 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x1[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x1[-199] <= x3[-199] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x0[-198] <= x2[-198] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 9
x1[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x1[-199] <= x3[-199] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x0[-198] <= x2[-198] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x1 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:573 sat:337 unsat:236

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x1 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 10
x4 > x1 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:574 sat:337 unsat:237

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:575 sat:338 unsat:237

string analysis: SPC # = 0
NPC constraint # = 9
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 10
x1 > x3 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:576 sat:338 unsat:238

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x0 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:577 sat:339 unsat:238

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x0 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 10
x3 > x0 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:578 sat:339 unsat:239

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:579 sat:340 unsat:239

string analysis: SPC # = 0
NPC constraint # = 9
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 10
x0 > x2 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:580 sat:340 unsat:240

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 93 new end
----------------------------------- [9] backtrack: 92
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x1[-200] <= x4[-200] &&
x3[-199] > x4[-200] &&
x1[-200] <= x3[-199] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x0[-198] <= x2[-198] &&
x0[-198] > x1[-200]
*************Summary***************
PC is:constraint # = 9
x1[-200] <= x4[-200] &&
x3[-199] > x4[-200] &&
x1[-200] <= x3[-199] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x0[-198] <= x2[-198] &&
x0[-198] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:581 sat:341 unsat:240

string analysis: SPC # = 0
NPC constraint # = 9
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 10
x1 > x4 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:582 sat:341 unsat:241

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x3 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:583 sat:342 unsat:241

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x3 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 10
x4 > x3 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:584 sat:342 unsat:242

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x0 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:585 sat:343 unsat:242

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x0 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 10
x3 > x0 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:586 sat:343 unsat:243

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:587 sat:344 unsat:243

string analysis: SPC # = 0
NPC constraint # = 9
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 10
x0 > x2 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:588 sat:344 unsat:244

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 94 new end
----------------------------------- [9] backtrack: 92
----------------------------------- [9] done: 92
----------------------------------- [8] backtrack: 91
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x3 <= x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:589 sat:345 unsat:244

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 9
x1 > x3 &&
x3 <= x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:590 sat:345 unsat:245

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x3 <= x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x3[-200] <= x4[-200] &&
x1[-200] <= x3[-200] &&
x0[-199] > x4[-200] &&
x0[-199] > x3[-200] &&
x2[-199] > x4[-200] &&
x2[-199] > x3[-200] &&
x0[-199] <= x2[-199] &&
x0[-199] > x1[-200]
*************Summary***************
PC is:constraint # = 8
x3[-200] <= x4[-200] &&
x1[-200] <= x3[-200] &&
x0[-199] > x4[-200] &&
x0[-199] > x3[-200] &&
x2[-199] > x4[-200] &&
x2[-199] > x3[-200] &&
x0[-199] <= x2[-199] &&
x0[-199] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x3 <= x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:591 sat:346 unsat:245

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 9
x1 > x3 &&
x3 <= x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:592 sat:346 unsat:246

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x3 <= x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:593 sat:347 unsat:246

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 9
x3 > x4 &&
x3 <= x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:594 sat:347 unsat:247

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x0 &&
x3 <= x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:595 sat:348 unsat:247

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x0 &&
x3 <= x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 9
x4 > x0 &&
x3 <= x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:596 sat:348 unsat:248

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x3 <= x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:597 sat:349 unsat:248

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 9
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:598 sat:349 unsat:249

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 95 new end
----------------------------------- [8] backtrack: 91
----------------------------------- [8] done: 91
----------------------------------- [7] backtrack: 85
----------------------------------- [7] done: 85
----------------------------------- [6] backtrack: 84
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x1 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:599 sat:350 unsat:249

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:600 sat:351 unsat:249

string analysis: SPC # = 0
NPC constraint # = 7
x1 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [7] forward: 96 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x1 <= x0 &&
x1 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:601 sat:352 unsat:249

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x0 &&
x1 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x0 &&
x1 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:602 sat:352 unsat:250

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x3 <= x1 &&
x1 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:603 sat:353 unsat:250

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x1 &&
x1 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x3 > x1 &&
x1 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:604 sat:353 unsat:251

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x1 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x1[-199] > x3[-200] &&
x0[-198] <= x4[-198] &&
x0[-198] > x3[-200] &&
x2[-197] > x4[-198] &&
x2[-197] > x3[-200] &&
x0[-198] <= x2[-197] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 7
x1[-199] > x3[-200] &&
x0[-198] <= x4[-198] &&
x0[-198] > x3[-200] &&
x2[-197] > x4[-198] &&
x2[-197] > x3[-200] &&
x0[-198] <= x2[-197] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x3 <= x1 &&
x1 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:605 sat:354 unsat:251

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x1 &&
x1 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x3 > x1 &&
x1 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:606 sat:354 unsat:252

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x1 <= x0 &&
x1 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:607 sat:355 unsat:252

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x0 &&
x1 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x0 &&
x1 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:608 sat:355 unsat:253

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x1 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:609 sat:356 unsat:253

string analysis: SPC # = 0
NPC constraint # = 7
x1 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x0 > x4 &&
x1 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:610 sat:356 unsat:254

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x4 <= x2 &&
x1 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:611 sat:357 unsat:254

string analysis: SPC # = 0
NPC constraint # = 8
x4 <= x2 &&
x1 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x4 > x2 &&
x1 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:612 sat:357 unsat:255

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 97 new end
----------------------------------- [7] backtrack: 96
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x3 <= x0 &&
x1 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:613 sat:358 unsat:255

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x0 &&
x1 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x3 > x0 &&
x1 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:614 sat:358 unsat:256

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x1 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:615 sat:359 unsat:256

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x3 &&
x1 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:616 sat:359 unsat:257

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x1 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x1[-200] <= x3[-200] &&
x0[-199] <= x4[-199] &&
x0[-199] > x3[-200] &&
x2[-198] > x4[-199] &&
x2[-198] > x3[-200] &&
x0[-199] <= x2[-198] &&
x0[-199] > x1[-200]
*************Summary***************
PC is:constraint # = 7
x1[-200] <= x3[-200] &&
x0[-199] <= x4[-199] &&
x0[-199] > x3[-200] &&
x2[-198] > x4[-199] &&
x2[-198] > x3[-200] &&
x0[-199] <= x2[-198] &&
x0[-199] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x1 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:617 sat:360 unsat:257

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x3 &&
x1 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:618 sat:360 unsat:258

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x3 <= x0 &&
x1 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:619 sat:361 unsat:258

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x0 &&
x1 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x3 > x0 &&
x1 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:620 sat:361 unsat:259

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x1 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:621 sat:362 unsat:259

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x0 > x4 &&
x1 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:622 sat:362 unsat:260

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x4 <= x2 &&
x1 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:623 sat:363 unsat:260

string analysis: SPC # = 0
NPC constraint # = 8
x4 <= x2 &&
x1 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x4 > x2 &&
x1 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:624 sat:363 unsat:261

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 98 new end
----------------------------------- [7] backtrack: 96
----------------------------------- [7] done: 96
----------------------------------- [6] backtrack: 84
----------------------------------- [6] done: 84
----------------------------------- [5] backtrack: 83
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:625 sat:364 unsat:261

string analysis: SPC # = 0
NPC constraint # = 6
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 6
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:626 sat:365 unsat:261

string analysis: SPC # = 0
NPC constraint # = 6
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [6] forward: 99 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x1 <= x0 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:627 sat:366 unsat:261

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x0 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x0 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:628 sat:366 unsat:262

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:629 sat:367 unsat:262

string analysis: SPC # = 0
NPC constraint # = 7
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:630 sat:368 unsat:262

string analysis: SPC # = 0
NPC constraint # = 7
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [7] forward: 100 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x1 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:631 sat:369 unsat:262

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:632 sat:370 unsat:262

string analysis: SPC # = 0
NPC constraint # = 8
x1 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [8] forward: 101 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x1 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x1[-199] > x4[-200] &&
x0[-198] > x4[-200] &&
x3[-198] > x4[-200] &&
x0[-198] <= x3[-198] &&
x2[-197] > x4[-200] &&
x2[-197] > x3[-198] &&
x0[-198] <= x2[-197] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 8
x1[-199] > x4[-200] &&
x0[-198] > x4[-200] &&
x3[-198] > x4[-200] &&
x0[-198] <= x3[-198] &&
x2[-197] > x4[-200] &&
x2[-197] > x3[-198] &&
x0[-198] <= x2[-197] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x1 &&
x1 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:633 sat:371 unsat:262

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x1 &&
x1 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 9
x4 > x1 &&
x1 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:634 sat:371 unsat:263

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x1 <= x0 &&
x1 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:635 sat:372 unsat:263

string analysis: SPC # = 0
NPC constraint # = 9
x1 <= x0 &&
x1 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 9
x1 > x0 &&
x1 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:636 sat:372 unsat:264

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x1 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:637 sat:373 unsat:264

string analysis: SPC # = 0
NPC constraint # = 8
x1 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 9
x0 > x3 &&
x1 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:638 sat:373 unsat:265

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x2 &&
x1 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:639 sat:374 unsat:265

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x2 &&
x1 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 9
x3 > x2 &&
x1 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:640 sat:374 unsat:266

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 102 new end
----------------------------------- [8] backtrack: 101
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x1 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x1[-200] <= x4[-200] &&
x0[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x0[-199] <= x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x0[-199] <= x2[-198] &&
x0[-199] > x1[-200]
*************Summary***************
PC is:constraint # = 8
x1[-200] <= x4[-200] &&
x0[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x0[-199] <= x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x0[-199] <= x2[-198] &&
x0[-199] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x1 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:641 sat:375 unsat:266

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 9
x1 > x4 &&
x1 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:642 sat:375 unsat:267

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x0 &&
x1 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:643 sat:376 unsat:267

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x0 &&
x1 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 9
x4 > x0 &&
x1 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:644 sat:376 unsat:268

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x1 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:645 sat:377 unsat:268

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 9
x0 > x3 &&
x1 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:646 sat:377 unsat:269

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x2 &&
x1 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:647 sat:378 unsat:269

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x2 &&
x1 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 9
x3 > x2 &&
x1 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:648 sat:378 unsat:270

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 103 new end
----------------------------------- [8] backtrack: 101
----------------------------------- [8] done: 101
----------------------------------- [7] backtrack: 100
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x1 <= x0 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:649 sat:379 unsat:270

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x0 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x0 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:650 sat:379 unsat:271

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x0[-199] <= x4[-199] &&
x3[-198] > x4[-199] &&
x0[-199] <= x3[-198] &&
x2[-197] > x4[-199] &&
x2[-197] > x3[-198] &&
x0[-199] <= x2[-197] &&
x0[-199] > x1[-200]
*************Summary***************
PC is:constraint # = 7
x0[-199] <= x4[-199] &&
x3[-198] > x4[-199] &&
x0[-199] <= x3[-198] &&
x2[-197] > x4[-199] &&
x2[-197] > x3[-198] &&
x0[-199] <= x2[-197] &&
x0[-199] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x1 <= x0 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:651 sat:380 unsat:271

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x0 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x0 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:652 sat:380 unsat:272

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:653 sat:381 unsat:272

string analysis: SPC # = 0
NPC constraint # = 7
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x0 > x4 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:654 sat:381 unsat:273

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x4 <= x3 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:655 sat:382 unsat:273

string analysis: SPC # = 0
NPC constraint # = 8
x4 <= x3 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x4 > x3 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:656 sat:382 unsat:274

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x3 <= x2 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:657 sat:383 unsat:274

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x2 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x3 > x2 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:658 sat:383 unsat:275

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 104 new end
----------------------------------- [7] backtrack: 100
----------------------------------- [7] done: 100
----------------------------------- [6] backtrack: 99
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x1 <= x0 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:659 sat:384 unsat:275

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x0 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x0 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:660 sat:384 unsat:276

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:661 sat:385 unsat:276

string analysis: SPC # = 0
NPC constraint # = 6
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x0 > x3 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:662 sat:385 unsat:277

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x1 <= x0 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:663 sat:386 unsat:277

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x0 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x0 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:664 sat:386 unsat:278

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 6
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 6
x3[-199] <= x4[-199] &&
x0[-199] <= x3[-199] &&
x2[-198] > x4[-199] &&
x2[-198] > x3[-199] &&
x0[-199] <= x2[-198] &&
x0[-199] > x1[-200]
*************Summary***************
PC is:constraint # = 6
x3[-199] <= x4[-199] &&
x0[-199] <= x3[-199] &&
x2[-198] > x4[-199] &&
x2[-198] > x3[-199] &&
x0[-199] <= x2[-198] &&
x0[-199] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x1 <= x0 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:665 sat:387 unsat:278

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x0 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x0 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:666 sat:387 unsat:279

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:667 sat:388 unsat:279

string analysis: SPC # = 0
NPC constraint # = 6
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x0 > x3 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:668 sat:388 unsat:280

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:669 sat:389 unsat:280

string analysis: SPC # = 0
NPC constraint # = 6
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x3 > x4 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:670 sat:389 unsat:281

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x4 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:671 sat:390 unsat:281

string analysis: SPC # = 0
NPC constraint # = 7
x4 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x4 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:672 sat:390 unsat:282

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [7] forward: 105 new end
----------------------------------- [6] backtrack: 99
----------------------------------- [6] done: 99
----------------------------------- [5] backtrack: 83
----------------------------------- [5] done: 83
----------------------------------- [4] backtrack: 82
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x1 <= x0 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:673 sat:391 unsat:282

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x0 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 5
x1 > x0 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:674 sat:391 unsat:283

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:675 sat:392 unsat:283

string analysis: SPC # = 0
NPC constraint # = 5
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 5
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:676 sat:393 unsat:283

string analysis: SPC # = 0
NPC constraint # = 5
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [5] forward: 106 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:677 sat:394 unsat:283

string analysis: SPC # = 0
NPC constraint # = 5
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 6
x0 > x2 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:678 sat:394 unsat:284

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 <= x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:679 sat:395 unsat:284

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 6
x1 > x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:680 sat:396 unsat:284

string analysis: SPC # = 0
NPC constraint # = 6
x1 > x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [6] forward: 107 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x1 <= x0 &&
x1 > x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:681 sat:397 unsat:284

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x0 &&
x1 > x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x0 &&
x1 > x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:682 sat:397 unsat:285

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 <= x1 &&
x1 > x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:683 sat:398 unsat:285

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x1 &&
x1 > x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x3 > x1 &&
x1 > x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:684 sat:398 unsat:286

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 6
x1 > x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 6
x1[-199] > x3[-200] &&
x0[-198] > x3[-200] &&
x2[-198] <= x4[-198] &&
x2[-198] > x3[-200] &&
x0[-198] <= x2[-198] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 6
x1[-199] > x3[-200] &&
x0[-198] > x3[-200] &&
x2[-198] <= x4[-198] &&
x2[-198] > x3[-200] &&
x0[-198] <= x2[-198] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x3 <= x1 &&
x1 > x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:685 sat:399 unsat:286

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x1 &&
x1 > x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x3 > x1 &&
x1 > x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:686 sat:399 unsat:287

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x1 <= x0 &&
x1 > x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:687 sat:400 unsat:287

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x0 &&
x1 > x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x0 &&
x1 > x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:688 sat:400 unsat:288

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x1 > x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:689 sat:401 unsat:288

string analysis: SPC # = 0
NPC constraint # = 6
x1 > x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x0 > x2 &&
x1 > x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:690 sat:401 unsat:289

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x1 > x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:691 sat:402 unsat:289

string analysis: SPC # = 0
NPC constraint # = 6
x1 > x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x2 > x4 &&
x1 > x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:692 sat:402 unsat:290

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [7] forward: 108 new end
----------------------------------- [6] backtrack: 107
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 <= x0 &&
x1 <= x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:693 sat:403 unsat:290

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x0 &&
x1 <= x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x3 > x0 &&
x1 <= x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:694 sat:403 unsat:291

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 <= x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:695 sat:404 unsat:291

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x3 &&
x1 <= x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:696 sat:404 unsat:292

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 6
x1 <= x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 6
x1[-200] <= x3[-200] &&
x0[-199] > x3[-200] &&
x2[-199] <= x4[-199] &&
x2[-199] > x3[-200] &&
x0[-199] <= x2[-199] &&
x0[-199] > x1[-200]
*************Summary***************
PC is:constraint # = 6
x1[-200] <= x3[-200] &&
x0[-199] > x3[-200] &&
x2[-199] <= x4[-199] &&
x2[-199] > x3[-200] &&
x0[-199] <= x2[-199] &&
x0[-199] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x1 <= x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:697 sat:405 unsat:292

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x3 &&
x1 <= x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:698 sat:405 unsat:293

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x3 <= x0 &&
x1 <= x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:699 sat:406 unsat:293

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x0 &&
x1 <= x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x3 > x0 &&
x1 <= x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:700 sat:406 unsat:294

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x1 <= x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:701 sat:407 unsat:294

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x0 > x2 &&
x1 <= x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:702 sat:407 unsat:295

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x1 <= x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:703 sat:408 unsat:295

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x2 > x4 &&
x1 <= x3 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:704 sat:408 unsat:296

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [7] forward: 109 new end
----------------------------------- [6] backtrack: 107
----------------------------------- [6] done: 107
----------------------------------- [5] backtrack: 106
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x3 <= x2 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:705 sat:409 unsat:296

string analysis: SPC # = 0
NPC constraint # = 6
x3 <= x2 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 6
x3 > x2 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:706 sat:409 unsat:297

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 <= x0 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:707 sat:410 unsat:297

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x0 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 6
x1 > x0 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:708 sat:410 unsat:298

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:709 sat:411 unsat:298

string analysis: SPC # = 0
NPC constraint # = 5
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 6
x0 > x3 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:710 sat:411 unsat:299

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 <= x0 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:711 sat:412 unsat:299

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x0 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 6
x1 > x0 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:712 sat:412 unsat:300

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 5
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 5
x0[-199] <= x3[-199] &&
x2[-198] <= x4[-198] &&
x2[-198] > x3[-199] &&
x0[-199] <= x2[-198] &&
x0[-199] > x1[-200]
*************Summary***************
PC is:constraint # = 5
x0[-199] <= x3[-199] &&
x2[-198] <= x4[-198] &&
x2[-198] > x3[-199] &&
x0[-199] <= x2[-198] &&
x0[-199] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x1 <= x0 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:713 sat:413 unsat:300

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x0 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 6
x1 > x0 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:714 sat:413 unsat:301

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:715 sat:414 unsat:301

string analysis: SPC # = 0
NPC constraint # = 5
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 6
x0 > x3 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:716 sat:414 unsat:302

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x3 <= x2 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:717 sat:415 unsat:302

string analysis: SPC # = 0
NPC constraint # = 6
x3 <= x2 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 6
x3 > x2 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:718 sat:415 unsat:303

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:719 sat:416 unsat:303

string analysis: SPC # = 0
NPC constraint # = 5
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 6
x2 > x4 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:720 sat:416 unsat:304

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [6] forward: 110 new end
----------------------------------- [5] backtrack: 106
----------------------------------- [5] done: 106
----------------------------------- [4] backtrack: 82
----------------------------------- [4] done: 82
----------------------------------- [3] backtrack: 81
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:721 sat:417 unsat:304

string analysis: SPC # = 0
NPC constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 4
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:722 sat:418 unsat:304

string analysis: SPC # = 0
NPC constraint # = 4
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [4] forward: 111 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x1 <= x0 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:723 sat:419 unsat:304

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x0 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 5
x1 > x0 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:724 sat:419 unsat:305

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:725 sat:420 unsat:305

string analysis: SPC # = 0
NPC constraint # = 4
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 5
x0 > x2 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:726 sat:420 unsat:306

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:727 sat:421 unsat:306

string analysis: SPC # = 0
NPC constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 5
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:728 sat:422 unsat:306

string analysis: SPC # = 0
NPC constraint # = 5
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [5] forward: 112 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 <= x0 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:729 sat:423 unsat:306

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x0 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 6
x1 > x0 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:730 sat:423 unsat:307

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:731 sat:424 unsat:307

string analysis: SPC # = 0
NPC constraint # = 6
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 6
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:732 sat:425 unsat:307

string analysis: SPC # = 0
NPC constraint # = 6
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [6] forward: 113 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x1 <= x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:733 sat:426 unsat:307

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:734 sat:427 unsat:307

string analysis: SPC # = 0
NPC constraint # = 7
x1 > x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
		 # garbage collection
----------------------------------- [7] forward: 114 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x1 > x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x1[-199] > x4[-200] &&
x0[-198] > x4[-200] &&
x2[-198] > x4[-200] &&
x3[-198] > x4[-200] &&
x2[-198] <= x3[-198] &&
x0[-198] <= x2[-198] &&
x0[-198] > x1[-199]
*************Summary***************
PC is:constraint # = 7
x1[-199] > x4[-200] &&
x0[-198] > x4[-200] &&
x2[-198] > x4[-200] &&
x3[-198] > x4[-200] &&
x2[-198] <= x3[-198] &&
x0[-198] <= x2[-198] &&
x0[-198] > x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x4 <= x1 &&
x1 > x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:735 sat:428 unsat:307

string analysis: SPC # = 0
NPC constraint # = 8
x4 <= x1 &&
x1 > x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x4 > x1 &&
x1 > x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:736 sat:428 unsat:308

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x1 <= x0 &&
x1 > x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:737 sat:429 unsat:308

string analysis: SPC # = 0
NPC constraint # = 8
x1 <= x0 &&
x1 > x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x0 &&
x1 > x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:738 sat:429 unsat:309

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x1 > x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:739 sat:430 unsat:309

string analysis: SPC # = 0
NPC constraint # = 7
x1 > x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x0 > x2 &&
x1 > x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:740 sat:430 unsat:310

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x1 > x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:741 sat:431 unsat:310

string analysis: SPC # = 0
NPC constraint # = 7
x1 > x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x2 > x3 &&
x1 > x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:742 sat:431 unsat:311

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 115 new end
----------------------------------- [7] backtrack: 114
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x1 <= x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x1[-200] <= x4[-200] &&
x0[-199] > x4[-200] &&
x2[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x2[-199] <= x3[-199] &&
x0[-199] <= x2[-199] &&
x0[-199] > x1[-200]
*************Summary***************
PC is:constraint # = 7
x1[-200] <= x4[-200] &&
x0[-199] > x4[-200] &&
x2[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x2[-199] <= x3[-199] &&
x0[-199] <= x2[-199] &&
x0[-199] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x1 <= x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:743 sat:432 unsat:311

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x1 > x4 &&
x1 <= x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:744 sat:432 unsat:312

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x4 <= x0 &&
x1 <= x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:745 sat:433 unsat:312

string analysis: SPC # = 0
NPC constraint # = 8
x4 <= x0 &&
x1 <= x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x4 > x0 &&
x1 <= x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:746 sat:433 unsat:313

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x1 <= x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:747 sat:434 unsat:313

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x0 > x2 &&
x1 <= x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:748 sat:434 unsat:314

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x1 <= x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:749 sat:435 unsat:314

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 8
x2 > x3 &&
x1 <= x4 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:750 sat:435 unsat:315

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 116 new end
----------------------------------- [7] backtrack: 114
----------------------------------- [7] done: 114
----------------------------------- [6] backtrack: 113
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x1 <= x0 &&
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:751 sat:436 unsat:315

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x0 &&
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x0 &&
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:752 sat:436 unsat:316

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 6
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 6
x0[-199] <= x4[-199] &&
x2[-198] > x4[-199] &&
x3[-198] > x4[-199] &&
x2[-198] <= x3[-198] &&
x0[-199] <= x2[-198] &&
x0[-199] > x1[-200]
*************Summary***************
PC is:constraint # = 6
x0[-199] <= x4[-199] &&
x2[-198] > x4[-199] &&
x3[-198] > x4[-199] &&
x2[-198] <= x3[-198] &&
x0[-199] <= x2[-198] &&
x0[-199] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x1 <= x0 &&
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:753 sat:437 unsat:316

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x0 &&
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x1 > x0 &&
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:754 sat:437 unsat:317

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:755 sat:438 unsat:317

string analysis: SPC # = 0
NPC constraint # = 6
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x0 > x4 &&
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:756 sat:438 unsat:318

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x4 <= x2 &&
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:757 sat:439 unsat:318

string analysis: SPC # = 0
NPC constraint # = 7
x4 <= x2 &&
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x4 > x2 &&
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:758 sat:439 unsat:319

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:759 sat:440 unsat:319

string analysis: SPC # = 0
NPC constraint # = 6
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 7
x2 > x3 &&
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:760 sat:440 unsat:320

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [7] forward: 117 new end
----------------------------------- [6] backtrack: 113
----------------------------------- [6] done: 113
----------------------------------- [5] backtrack: 112
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 <= x0 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:761 sat:441 unsat:320

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x0 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 6
x1 > x0 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:762 sat:441 unsat:321

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:763 sat:442 unsat:321

string analysis: SPC # = 0
NPC constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 6
x0 > x2 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:764 sat:442 unsat:322

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 <= x0 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:765 sat:443 unsat:322

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x0 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 6
x1 > x0 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:766 sat:443 unsat:323

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 5
x2[-199] <= x4[-199] &&
x3[-198] > x4[-199] &&
x2[-199] <= x3[-198] &&
x0[-199] <= x2[-199] &&
x0[-199] > x1[-200]
*************Summary***************
PC is:constraint # = 5
x2[-199] <= x4[-199] &&
x3[-198] > x4[-199] &&
x2[-199] <= x3[-198] &&
x0[-199] <= x2[-199] &&
x0[-199] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x1 <= x0 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:767 sat:444 unsat:323

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x0 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 6
x1 > x0 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:768 sat:444 unsat:324

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:769 sat:445 unsat:324

string analysis: SPC # = 0
NPC constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 6
x0 > x2 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:770 sat:445 unsat:325

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:771 sat:446 unsat:325

string analysis: SPC # = 0
NPC constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 6
x2 > x4 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:772 sat:446 unsat:326

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x4 <= x3 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:773 sat:447 unsat:326

string analysis: SPC # = 0
NPC constraint # = 6
x4 <= x3 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 6
x4 > x3 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:774 sat:447 unsat:327

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [6] forward: 118 new end
----------------------------------- [5] backtrack: 112
----------------------------------- [5] done: 112
----------------------------------- [4] backtrack: 111
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x1 <= x0 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:775 sat:448 unsat:327

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x0 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 5
x1 > x0 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:776 sat:448 unsat:328

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:777 sat:449 unsat:328

string analysis: SPC # = 0
NPC constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 5
x0 > x2 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:778 sat:449 unsat:329

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:779 sat:450 unsat:329

string analysis: SPC # = 0
NPC constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 5
x2 > x3 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:780 sat:450 unsat:330

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x1 <= x0 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:781 sat:451 unsat:330

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x0 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 5
x1 > x0 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:782 sat:451 unsat:331

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:783 sat:452 unsat:331

string analysis: SPC # = 0
NPC constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 5
x0 > x2 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:784 sat:452 unsat:332

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x1 <= x0 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:785 sat:453 unsat:332

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x0 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 5
x1 > x0 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:786 sat:453 unsat:333

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

string analysis: SPC # = 0
NPC constraint # = 4
x3[-199] <= x4[-199] &&
x2[-199] <= x3[-199] &&
x0[-199] <= x2[-199] &&
x0[-199] > x1[-200]
*************Summary***************
PC is:constraint # = 4
x3[-199] <= x4[-199] &&
x2[-199] <= x3[-199] &&
x0[-199] <= x2[-199] &&
x0[-199] > x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x1 <= x0 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:787 sat:454 unsat:333

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x0 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 5
x1 > x0 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:788 sat:454 unsat:334

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:789 sat:455 unsat:334

string analysis: SPC # = 0
NPC constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 5
x0 > x2 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:790 sat:455 unsat:335

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:791 sat:456 unsat:335

string analysis: SPC # = 0
NPC constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 5
x2 > x3 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:792 sat:456 unsat:336

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> true

### PCs: total:793 sat:457 unsat:336

string analysis: SPC # = 0
NPC constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1
numeric PC: constraint # = 5
x3 > x4 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x0 > x1 -> false

### PCs: total:794 sat:457 unsat:337

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [5] forward: 119 new end
----------------------------------- [4] backtrack: 111
----------------------------------- [4] done: 111
----------------------------------- [3] backtrack: 81
----------------------------------- [3] done: 81
----------------------------------- [2] backtrack: 1
----------------------------------- [2] done: 1
----------------------------------- [1] backtrack: 0
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 2
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:795 sat:458 unsat:337

string analysis: SPC # = 0
NPC constraint # = 2
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 2
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:796 sat:459 unsat:337

string analysis: SPC # = 0
NPC constraint # = 2
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [2] forward: 120 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 3
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:797 sat:460 unsat:337

string analysis: SPC # = 0
NPC constraint # = 3
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 3
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:798 sat:461 unsat:337

string analysis: SPC # = 0
NPC constraint # = 3
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [3] forward: 121 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:799 sat:462 unsat:337

string analysis: SPC # = 0
NPC constraint # = 4
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 4
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:800 sat:463 unsat:337

string analysis: SPC # = 0
NPC constraint # = 4
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [4] forward: 122 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:801 sat:464 unsat:337

string analysis: SPC # = 0
NPC constraint # = 5
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 5
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:802 sat:465 unsat:337

string analysis: SPC # = 0
NPC constraint # = 5
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [5] forward: 123 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:803 sat:466 unsat:337

string analysis: SPC # = 0
NPC constraint # = 6
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:804 sat:467 unsat:337

string analysis: SPC # = 0
NPC constraint # = 6
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [6] forward: 124 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:805 sat:468 unsat:337

string analysis: SPC # = 0
NPC constraint # = 7
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:806 sat:469 unsat:337

string analysis: SPC # = 0
NPC constraint # = 7
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [7] forward: 125 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:807 sat:470 unsat:337

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:808 sat:471 unsat:337

string analysis: SPC # = 0
NPC constraint # = 8
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [8] forward: 126 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x2 <= x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:809 sat:472 unsat:337

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:810 sat:473 unsat:337

string analysis: SPC # = 0
NPC constraint # = 9
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [9] forward: 127 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 10
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:811 sat:474 unsat:337

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:812 sat:475 unsat:337

string analysis: SPC # = 0
NPC constraint # = 10
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [10] forward: 128 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 10
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 10
x3[-199] > x4[-200] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x0[-197] > x4[-200] &&
x0[-197] > x3[-199] &&
x0[-197] > x2[-198] &&
x1[-197] > x4[-200] &&
x1[-197] > x3[-199] &&
x1[-197] > x2[-198] &&
x0[-197] <= x1[-197]
*************Summary***************
PC is:constraint # = 10
x3[-199] > x4[-200] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x0[-197] > x4[-200] &&
x0[-197] > x3[-199] &&
x0[-197] > x2[-198] &&
x1[-197] > x4[-200] &&
x1[-197] > x3[-199] &&
x1[-197] > x2[-198] &&
x0[-197] <= x1[-197]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x4 <= x3 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:813 sat:476 unsat:337

string analysis: SPC # = 0
NPC constraint # = 11
x4 <= x3 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x4 > x3 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:814 sat:476 unsat:338

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x3 <= x2 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:815 sat:477 unsat:338

string analysis: SPC # = 0
NPC constraint # = 11
x3 <= x2 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x3 > x2 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:816 sat:477 unsat:339

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x2 <= x0 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:817 sat:478 unsat:339

string analysis: SPC # = 0
NPC constraint # = 11
x2 <= x0 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x2 > x0 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:818 sat:478 unsat:340

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:819 sat:479 unsat:340

string analysis: SPC # = 0
NPC constraint # = 10
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x0 > x1 &&
x3 > x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:820 sat:479 unsat:341

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [11] forward: 129 new end
----------------------------------- [10] backtrack: 128
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 10
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 10
x3[-200] <= x4[-200] &&
x2[-199] > x4[-200] &&
x2[-199] > x3[-200] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-198] <= x1[-198]
*************Summary***************
PC is:constraint # = 10
x3[-200] <= x4[-200] &&
x2[-199] > x4[-200] &&
x2[-199] > x3[-200] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-198] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:821 sat:480 unsat:341

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x3 > x4 &&
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:822 sat:480 unsat:342

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x4 <= x2 &&
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:823 sat:481 unsat:342

string analysis: SPC # = 0
NPC constraint # = 11
x4 <= x2 &&
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x4 > x2 &&
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:824 sat:481 unsat:343

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x2 <= x0 &&
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:825 sat:482 unsat:343

string analysis: SPC # = 0
NPC constraint # = 11
x2 <= x0 &&
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x2 > x0 &&
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:826 sat:482 unsat:344

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:827 sat:483 unsat:344

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x0 > x1 &&
x3 <= x4 &&
x2 > x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:828 sat:483 unsat:345

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [11] forward: 130 new end
----------------------------------- [10] backtrack: 128
----------------------------------- [10] done: 128
----------------------------------- [9] backtrack: 127
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 10
x3 <= x2 &&
x2 <= x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:829 sat:484 unsat:345

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x2 &&
x2 <= x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x3 > x2 &&
x2 <= x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:830 sat:484 unsat:346

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x2 <= x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x2[-199] <= x4[-199] &&
x2[-199] > x3[-200] &&
x0[-198] > x4[-199] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-199] &&
x1[-198] > x4[-199] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-198] <= x1[-198]
*************Summary***************
PC is:constraint # = 9
x2[-199] <= x4[-199] &&
x2[-199] > x3[-200] &&
x0[-198] > x4[-199] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-199] &&
x1[-198] > x4[-199] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-198] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x2 &&
x2 <= x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:831 sat:485 unsat:346

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x2 &&
x2 <= x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x3 > x2 &&
x2 <= x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:832 sat:485 unsat:347

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x2 <= x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:833 sat:486 unsat:347

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x2 > x4 &&
x2 <= x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:834 sat:486 unsat:348

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x0 &&
x2 <= x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:835 sat:487 unsat:348

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x0 &&
x2 <= x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x4 > x0 &&
x2 <= x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:836 sat:487 unsat:349

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x2 <= x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:837 sat:488 unsat:349

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x0 > x1 &&
x2 <= x4 &&
x2 > x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:838 sat:488 unsat:350

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 131 new end
----------------------------------- [9] backtrack: 127
----------------------------------- [9] done: 127
----------------------------------- [8] backtrack: 126
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x3 <= x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:839 sat:489 unsat:350

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:840 sat:490 unsat:350

string analysis: SPC # = 0
NPC constraint # = 9
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [9] forward: 132 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 10
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:841 sat:491 unsat:350

string analysis: SPC # = 0
NPC constraint # = 10
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:842 sat:492 unsat:350

string analysis: SPC # = 0
NPC constraint # = 10
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [10] forward: 133 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 10
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 10
x2[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x2[-199] <= x3[-199] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-199] &&
x0[-198] > x2[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x1[-198] > x2[-199] &&
x0[-198] <= x1[-198]
*************Summary***************
PC is:constraint # = 10
x2[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x2[-199] <= x3[-199] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-199] &&
x0[-198] > x2[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x1[-198] > x2[-199] &&
x0[-198] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x4 <= x2 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:843 sat:493 unsat:350

string analysis: SPC # = 0
NPC constraint # = 11
x4 <= x2 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x4 > x2 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:844 sat:493 unsat:351

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:845 sat:494 unsat:351

string analysis: SPC # = 0
NPC constraint # = 10
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x2 > x3 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:846 sat:494 unsat:352

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x3 <= x0 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:847 sat:495 unsat:352

string analysis: SPC # = 0
NPC constraint # = 11
x3 <= x0 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x3 > x0 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:848 sat:495 unsat:353

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:849 sat:496 unsat:353

string analysis: SPC # = 0
NPC constraint # = 10
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x0 > x1 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:850 sat:496 unsat:354

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [11] forward: 134 new end
----------------------------------- [10] backtrack: 133
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 10
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 10
x2[-200] <= x4[-200] &&
x3[-199] > x4[-200] &&
x2[-200] <= x3[-199] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-199] &&
x0[-198] > x2[-200] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x1[-198] > x2[-200] &&
x0[-198] <= x1[-198]
*************Summary***************
PC is:constraint # = 10
x2[-200] <= x4[-200] &&
x3[-199] > x4[-200] &&
x2[-200] <= x3[-199] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-199] &&
x0[-198] > x2[-200] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x1[-198] > x2[-200] &&
x0[-198] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:851 sat:497 unsat:354

string analysis: SPC # = 0
NPC constraint # = 10
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x2 > x4 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:852 sat:497 unsat:355

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x4 <= x3 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:853 sat:498 unsat:355

string analysis: SPC # = 0
NPC constraint # = 11
x4 <= x3 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x4 > x3 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:854 sat:498 unsat:356

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x3 <= x0 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:855 sat:499 unsat:356

string analysis: SPC # = 0
NPC constraint # = 11
x3 <= x0 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x3 > x0 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:856 sat:499 unsat:357

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:857 sat:500 unsat:357

string analysis: SPC # = 0
NPC constraint # = 10
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x0 > x1 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:858 sat:500 unsat:358

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [11] forward: 135 new end
----------------------------------- [10] backtrack: 133
----------------------------------- [10] done: 133
----------------------------------- [9] backtrack: 132
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x3 <= x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:859 sat:501 unsat:358

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x2 > x3 &&
x3 <= x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:860 sat:501 unsat:359

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x3 <= x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x3[-200] <= x4[-200] &&
x2[-200] <= x3[-200] &&
x0[-199] > x4[-200] &&
x0[-199] > x3[-200] &&
x0[-199] > x2[-200] &&
x1[-199] > x4[-200] &&
x1[-199] > x3[-200] &&
x1[-199] > x2[-200] &&
x0[-199] <= x1[-199]
*************Summary***************
PC is:constraint # = 9
x3[-200] <= x4[-200] &&
x2[-200] <= x3[-200] &&
x0[-199] > x4[-200] &&
x0[-199] > x3[-200] &&
x0[-199] > x2[-200] &&
x1[-199] > x4[-200] &&
x1[-199] > x3[-200] &&
x1[-199] > x2[-200] &&
x0[-199] <= x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:861 sat:502 unsat:359

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x2 > x3 &&
x3 <= x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:862 sat:502 unsat:360

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:863 sat:503 unsat:360

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x3 > x4 &&
x3 <= x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:864 sat:503 unsat:361

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x0 &&
x3 <= x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:865 sat:504 unsat:361

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x0 &&
x3 <= x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x4 > x0 &&
x3 <= x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:866 sat:504 unsat:362

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:867 sat:505 unsat:362

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x0 > x1 &&
x3 <= x4 &&
x2 <= x3 &&
x0 > x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:868 sat:505 unsat:363

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 136 new end
----------------------------------- [9] backtrack: 132
----------------------------------- [9] done: 132
----------------------------------- [8] backtrack: 126
----------------------------------- [8] done: 126
----------------------------------- [7] backtrack: 125
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:869 sat:506 unsat:363

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x2 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:870 sat:507 unsat:363

string analysis: SPC # = 0
NPC constraint # = 8
x2 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [8] forward: 137 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x2 <= x0 &&
x2 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:871 sat:508 unsat:363

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x0 &&
x2 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x2 > x0 &&
x2 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:872 sat:508 unsat:364

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x3 <= x2 &&
x2 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:873 sat:509 unsat:364

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x2 &&
x2 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x3 > x2 &&
x2 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:874 sat:509 unsat:365

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x2 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x2[-199] > x3[-200] &&
x0[-198] <= x4[-198] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-199] &&
x1[-197] > x4[-198] &&
x1[-197] > x3[-200] &&
x1[-197] > x2[-199] &&
x0[-198] <= x1[-197]
*************Summary***************
PC is:constraint # = 8
x2[-199] > x3[-200] &&
x0[-198] <= x4[-198] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-199] &&
x1[-197] > x4[-198] &&
x1[-197] > x3[-200] &&
x1[-197] > x2[-199] &&
x0[-198] <= x1[-197]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x2 &&
x2 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:875 sat:510 unsat:365

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x2 &&
x2 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x3 > x2 &&
x2 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:876 sat:510 unsat:366

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x2 <= x0 &&
x2 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:877 sat:511 unsat:366

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x0 &&
x2 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x2 > x0 &&
x2 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:878 sat:511 unsat:367

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:879 sat:512 unsat:367

string analysis: SPC # = 0
NPC constraint # = 8
x2 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x0 > x4 &&
x2 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:880 sat:512 unsat:368

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x1 &&
x2 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:881 sat:513 unsat:368

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x1 &&
x2 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x4 > x1 &&
x2 > x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:882 sat:513 unsat:369

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 138 new end
----------------------------------- [8] backtrack: 137
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x3 <= x0 &&
x2 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:883 sat:514 unsat:369

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x0 &&
x2 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x3 > x0 &&
x2 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:884 sat:514 unsat:370

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:885 sat:515 unsat:370

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x2 > x3 &&
x2 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:886 sat:515 unsat:371

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x2 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x2[-200] <= x3[-200] &&
x0[-199] <= x4[-199] &&
x0[-199] > x3[-200] &&
x0[-199] > x2[-200] &&
x1[-198] > x4[-199] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-200] &&
x0[-199] <= x1[-198]
*************Summary***************
PC is:constraint # = 8
x2[-200] <= x3[-200] &&
x0[-199] <= x4[-199] &&
x0[-199] > x3[-200] &&
x0[-199] > x2[-200] &&
x1[-198] > x4[-199] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-200] &&
x0[-199] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:887 sat:516 unsat:371

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x2 > x3 &&
x2 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:888 sat:516 unsat:372

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x0 &&
x2 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:889 sat:517 unsat:372

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x0 &&
x2 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x3 > x0 &&
x2 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:890 sat:517 unsat:373

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:891 sat:518 unsat:373

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x0 > x4 &&
x2 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:892 sat:518 unsat:374

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x1 &&
x2 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:893 sat:519 unsat:374

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x1 &&
x2 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x4 > x1 &&
x2 <= x3 &&
x0 <= x4 &&
x0 > x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:894 sat:519 unsat:375

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 139 new end
----------------------------------- [8] backtrack: 137
----------------------------------- [8] done: 137
----------------------------------- [7] backtrack: 125
----------------------------------- [7] done: 125
----------------------------------- [6] backtrack: 124
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:895 sat:520 unsat:375

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:896 sat:521 unsat:375

string analysis: SPC # = 0
NPC constraint # = 7
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [7] forward: 140 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x0 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:897 sat:522 unsat:375

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x0 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x2 > x0 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:898 sat:522 unsat:376

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:899 sat:523 unsat:376

string analysis: SPC # = 0
NPC constraint # = 8
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:900 sat:524 unsat:376

string analysis: SPC # = 0
NPC constraint # = 8
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [8] forward: 141 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x2 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:901 sat:525 unsat:376

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x2 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:902 sat:526 unsat:376

string analysis: SPC # = 0
NPC constraint # = 9
x2 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [9] forward: 142 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x2 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x2[-199] > x4[-200] &&
x0[-198] > x4[-200] &&
x3[-198] > x4[-200] &&
x0[-198] <= x3[-198] &&
x0[-198] > x2[-199] &&
x1[-197] > x4[-200] &&
x1[-197] > x3[-198] &&
x1[-197] > x2[-199] &&
x0[-198] <= x1[-197]
*************Summary***************
PC is:constraint # = 9
x2[-199] > x4[-200] &&
x0[-198] > x4[-200] &&
x3[-198] > x4[-200] &&
x0[-198] <= x3[-198] &&
x0[-198] > x2[-199] &&
x1[-197] > x4[-200] &&
x1[-197] > x3[-198] &&
x1[-197] > x2[-199] &&
x0[-198] <= x1[-197]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x2 &&
x2 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:903 sat:527 unsat:376

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x2 &&
x2 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x4 > x2 &&
x2 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:904 sat:527 unsat:377

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x2 <= x0 &&
x2 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:905 sat:528 unsat:377

string analysis: SPC # = 0
NPC constraint # = 10
x2 <= x0 &&
x2 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x2 > x0 &&
x2 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:906 sat:528 unsat:378

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x2 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:907 sat:529 unsat:378

string analysis: SPC # = 0
NPC constraint # = 9
x2 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x0 > x3 &&
x2 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:908 sat:529 unsat:379

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x1 &&
x2 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:909 sat:530 unsat:379

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x1 &&
x2 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x3 > x1 &&
x2 > x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:910 sat:530 unsat:380

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 143 new end
----------------------------------- [9] backtrack: 142
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x2 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x2[-200] <= x4[-200] &&
x0[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x0[-199] <= x3[-199] &&
x0[-199] > x2[-200] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x1[-198] > x2[-200] &&
x0[-199] <= x1[-198]
*************Summary***************
PC is:constraint # = 9
x2[-200] <= x4[-200] &&
x0[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x0[-199] <= x3[-199] &&
x0[-199] > x2[-200] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x1[-198] > x2[-200] &&
x0[-199] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x2 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:911 sat:531 unsat:380

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x2 > x4 &&
x2 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:912 sat:531 unsat:381

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x0 &&
x2 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:913 sat:532 unsat:381

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x0 &&
x2 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x4 > x0 &&
x2 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:914 sat:532 unsat:382

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x2 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:915 sat:533 unsat:382

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x0 > x3 &&
x2 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:916 sat:533 unsat:383

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x1 &&
x2 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:917 sat:534 unsat:383

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x1 &&
x2 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x3 > x1 &&
x2 <= x4 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:918 sat:534 unsat:384

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 144 new end
----------------------------------- [9] backtrack: 142
----------------------------------- [9] done: 142
----------------------------------- [8] backtrack: 141
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x2 <= x0 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:919 sat:535 unsat:384

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x0 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x2 > x0 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:920 sat:535 unsat:385

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x0[-199] <= x4[-199] &&
x3[-198] > x4[-199] &&
x0[-199] <= x3[-198] &&
x0[-199] > x2[-200] &&
x1[-197] > x4[-199] &&
x1[-197] > x3[-198] &&
x1[-197] > x2[-200] &&
x0[-199] <= x1[-197]
*************Summary***************
PC is:constraint # = 8
x0[-199] <= x4[-199] &&
x3[-198] > x4[-199] &&
x0[-199] <= x3[-198] &&
x0[-199] > x2[-200] &&
x1[-197] > x4[-199] &&
x1[-197] > x3[-198] &&
x1[-197] > x2[-200] &&
x0[-199] <= x1[-197]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x2 <= x0 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:921 sat:536 unsat:385

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x0 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x2 > x0 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:922 sat:536 unsat:386

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:923 sat:537 unsat:386

string analysis: SPC # = 0
NPC constraint # = 8
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x0 > x4 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:924 sat:537 unsat:387

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x3 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:925 sat:538 unsat:387

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x3 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x4 > x3 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:926 sat:538 unsat:388

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x1 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:927 sat:539 unsat:388

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x1 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x3 > x1 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:928 sat:539 unsat:389

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 145 new end
----------------------------------- [8] backtrack: 141
----------------------------------- [8] done: 141
----------------------------------- [7] backtrack: 140
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x0 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:929 sat:540 unsat:389

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x0 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x2 > x0 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:930 sat:540 unsat:390

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:931 sat:541 unsat:390

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x3 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:932 sat:541 unsat:391

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x0 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:933 sat:542 unsat:391

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x0 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x2 > x0 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:934 sat:542 unsat:392

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x3[-199] <= x4[-199] &&
x0[-199] <= x3[-199] &&
x0[-199] > x2[-200] &&
x1[-198] > x4[-199] &&
x1[-198] > x3[-199] &&
x1[-198] > x2[-200] &&
x0[-199] <= x1[-198]
*************Summary***************
PC is:constraint # = 7
x3[-199] <= x4[-199] &&
x0[-199] <= x3[-199] &&
x0[-199] > x2[-200] &&
x1[-198] > x4[-199] &&
x1[-198] > x3[-199] &&
x1[-198] > x2[-200] &&
x0[-199] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x0 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:935 sat:543 unsat:392

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x0 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x2 > x0 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:936 sat:543 unsat:393

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:937 sat:544 unsat:393

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x3 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:938 sat:544 unsat:394

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:939 sat:545 unsat:394

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x3 > x4 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:940 sat:545 unsat:395

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x4 <= x1 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:941 sat:546 unsat:395

string analysis: SPC # = 0
NPC constraint # = 8
x4 <= x1 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x4 > x1 &&
x3 <= x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:942 sat:546 unsat:396

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 146 new end
----------------------------------- [7] backtrack: 140
----------------------------------- [7] done: 140
----------------------------------- [6] backtrack: 124
----------------------------------- [6] done: 124
----------------------------------- [5] backtrack: 123
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:943 sat:547 unsat:396

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:944 sat:548 unsat:396

string analysis: SPC # = 0
NPC constraint # = 6
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [6] forward: 147 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:945 sat:549 unsat:396

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:946 sat:550 unsat:396

string analysis: SPC # = 0
NPC constraint # = 7
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [7] forward: 148 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:947 sat:551 unsat:396

string analysis: SPC # = 0
NPC constraint # = 8
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:948 sat:552 unsat:396

string analysis: SPC # = 0
NPC constraint # = 8
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [8] forward: 149 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:949 sat:553 unsat:396

string analysis: SPC # = 0
NPC constraint # = 9
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:950 sat:554 unsat:396

string analysis: SPC # = 0
NPC constraint # = 9
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [9] forward: 150 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 10
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:951 sat:555 unsat:396

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:952 sat:556 unsat:396

string analysis: SPC # = 0
NPC constraint # = 10
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [10] forward: 151 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 10
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 10
x3[-199] > x4[-200] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x0[-198] <= x2[-198] &&
x1[-197] > x4[-200] &&
x1[-197] > x3[-199] &&
x1[-197] > x2[-198] &&
x0[-198] <= x1[-197]
*************Summary***************
PC is:constraint # = 10
x3[-199] > x4[-200] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x0[-198] <= x2[-198] &&
x1[-197] > x4[-200] &&
x1[-197] > x3[-199] &&
x1[-197] > x2[-198] &&
x0[-198] <= x1[-197]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x4 <= x3 &&
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:953 sat:557 unsat:396

string analysis: SPC # = 0
NPC constraint # = 11
x4 <= x3 &&
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x4 > x3 &&
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:954 sat:557 unsat:397

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x3 <= x0 &&
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:955 sat:558 unsat:397

string analysis: SPC # = 0
NPC constraint # = 11
x3 <= x0 &&
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x3 > x0 &&
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:956 sat:558 unsat:398

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:957 sat:559 unsat:398

string analysis: SPC # = 0
NPC constraint # = 10
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x0 > x2 &&
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:958 sat:559 unsat:399

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x2 <= x1 &&
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:959 sat:560 unsat:399

string analysis: SPC # = 0
NPC constraint # = 11
x2 <= x1 &&
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x2 > x1 &&
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:960 sat:560 unsat:400

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [11] forward: 152 new end
----------------------------------- [10] backtrack: 151
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 10
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 10
x3[-200] <= x4[-200] &&
x0[-199] > x4[-200] &&
x0[-199] > x3[-200] &&
x2[-199] > x4[-200] &&
x2[-199] > x3[-200] &&
x0[-199] <= x2[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-199] <= x1[-198]
*************Summary***************
PC is:constraint # = 10
x3[-200] <= x4[-200] &&
x0[-199] > x4[-200] &&
x0[-199] > x3[-200] &&
x2[-199] > x4[-200] &&
x2[-199] > x3[-200] &&
x0[-199] <= x2[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-199] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:961 sat:561 unsat:400

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x3 > x4 &&
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:962 sat:561 unsat:401

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x4 <= x0 &&
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:963 sat:562 unsat:401

string analysis: SPC # = 0
NPC constraint # = 11
x4 <= x0 &&
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x4 > x0 &&
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:964 sat:562 unsat:402

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:965 sat:563 unsat:402

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x0 > x2 &&
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:966 sat:563 unsat:403

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x2 <= x1 &&
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:967 sat:564 unsat:403

string analysis: SPC # = 0
NPC constraint # = 11
x2 <= x1 &&
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x2 > x1 &&
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:968 sat:564 unsat:404

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [11] forward: 153 new end
----------------------------------- [10] backtrack: 151
----------------------------------- [10] done: 151
----------------------------------- [9] backtrack: 150
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 10
x3 <= x0 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:969 sat:565 unsat:404

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x0 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x3 > x0 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:970 sat:565 unsat:405

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x0[-199] <= x4[-199] &&
x0[-199] > x3[-200] &&
x2[-198] > x4[-199] &&
x2[-198] > x3[-200] &&
x0[-199] <= x2[-198] &&
x1[-197] > x4[-199] &&
x1[-197] > x3[-200] &&
x1[-197] > x2[-198] &&
x0[-199] <= x1[-197]
*************Summary***************
PC is:constraint # = 9
x0[-199] <= x4[-199] &&
x0[-199] > x3[-200] &&
x2[-198] > x4[-199] &&
x2[-198] > x3[-200] &&
x0[-199] <= x2[-198] &&
x1[-197] > x4[-199] &&
x1[-197] > x3[-200] &&
x1[-197] > x2[-198] &&
x0[-199] <= x1[-197]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x0 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:971 sat:566 unsat:405

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x0 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x3 > x0 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:972 sat:566 unsat:406

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:973 sat:567 unsat:406

string analysis: SPC # = 0
NPC constraint # = 9
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x0 > x4 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:974 sat:567 unsat:407

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:975 sat:568 unsat:407

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x2 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x4 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:976 sat:568 unsat:408

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x2 <= x1 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:977 sat:569 unsat:408

string analysis: SPC # = 0
NPC constraint # = 10
x2 <= x1 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x2 > x1 &&
x0 <= x4 &&
x0 > x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:978 sat:569 unsat:409

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 154 new end
----------------------------------- [9] backtrack: 150
----------------------------------- [9] done: 150
----------------------------------- [8] backtrack: 149
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:979 sat:570 unsat:409

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:980 sat:571 unsat:409

string analysis: SPC # = 0
NPC constraint # = 9
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [9] forward: 155 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 10
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:981 sat:572 unsat:409

string analysis: SPC # = 0
NPC constraint # = 10
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:982 sat:573 unsat:409

string analysis: SPC # = 0
NPC constraint # = 10
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [10] forward: 156 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 10
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 10
x0[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x0[-199] <= x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x0[-199] <= x2[-198] &&
x1[-197] > x4[-200] &&
x1[-197] > x3[-199] &&
x1[-197] > x2[-198] &&
x0[-199] <= x1[-197]
*************Summary***************
PC is:constraint # = 10
x0[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x0[-199] <= x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x0[-199] <= x2[-198] &&
x1[-197] > x4[-200] &&
x1[-197] > x3[-199] &&
x1[-197] > x2[-198] &&
x0[-199] <= x1[-197]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x4 <= x0 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:983 sat:574 unsat:409

string analysis: SPC # = 0
NPC constraint # = 11
x4 <= x0 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x4 > x0 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:984 sat:574 unsat:410

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:985 sat:575 unsat:410

string analysis: SPC # = 0
NPC constraint # = 10
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x0 > x3 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:986 sat:575 unsat:411

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x3 <= x2 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:987 sat:576 unsat:411

string analysis: SPC # = 0
NPC constraint # = 11
x3 <= x2 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x3 > x2 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:988 sat:576 unsat:412

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x2 <= x1 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:989 sat:577 unsat:412

string analysis: SPC # = 0
NPC constraint # = 11
x2 <= x1 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x2 > x1 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:990 sat:577 unsat:413

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [11] forward: 157 new end
----------------------------------- [10] backtrack: 156
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 10
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 10
x0[-200] <= x4[-200] &&
x3[-199] > x4[-200] &&
x0[-200] <= x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x0[-200] <= x2[-198] &&
x1[-197] > x4[-200] &&
x1[-197] > x3[-199] &&
x1[-197] > x2[-198] &&
x0[-200] <= x1[-197]
*************Summary***************
PC is:constraint # = 10
x0[-200] <= x4[-200] &&
x3[-199] > x4[-200] &&
x0[-200] <= x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x0[-200] <= x2[-198] &&
x1[-197] > x4[-200] &&
x1[-197] > x3[-199] &&
x1[-197] > x2[-198] &&
x0[-200] <= x1[-197]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:991 sat:578 unsat:413

string analysis: SPC # = 0
NPC constraint # = 10
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x0 > x4 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:992 sat:578 unsat:414

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x4 <= x3 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:993 sat:579 unsat:414

string analysis: SPC # = 0
NPC constraint # = 11
x4 <= x3 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x4 > x3 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:994 sat:579 unsat:415

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x3 <= x2 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:995 sat:580 unsat:415

string analysis: SPC # = 0
NPC constraint # = 11
x3 <= x2 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x3 > x2 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:996 sat:580 unsat:416

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 11
x2 <= x1 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:997 sat:581 unsat:416

string analysis: SPC # = 0
NPC constraint # = 11
x2 <= x1 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 11
x2 > x1 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:998 sat:581 unsat:417

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [11] forward: 158 new end
----------------------------------- [10] backtrack: 156
----------------------------------- [10] done: 156
----------------------------------- [9] backtrack: 155
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:999 sat:582 unsat:417

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x0 > x3 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1000 sat:582 unsat:418

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x3[-200] <= x4[-200] &&
x0[-200] <= x3[-200] &&
x2[-199] > x4[-200] &&
x2[-199] > x3[-200] &&
x0[-200] <= x2[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-200] <= x1[-198]
*************Summary***************
PC is:constraint # = 9
x3[-200] <= x4[-200] &&
x0[-200] <= x3[-200] &&
x2[-199] > x4[-200] &&
x2[-199] > x3[-200] &&
x0[-200] <= x2[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-200] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1001 sat:583 unsat:418

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x0 > x3 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1002 sat:583 unsat:419

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1003 sat:584 unsat:419

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x3 > x4 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1004 sat:584 unsat:420

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1005 sat:585 unsat:420

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x2 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x4 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1006 sat:585 unsat:421

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x2 <= x1 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1007 sat:586 unsat:421

string analysis: SPC # = 0
NPC constraint # = 10
x2 <= x1 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x2 > x1 &&
x3 <= x4 &&
x0 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1008 sat:586 unsat:422

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 159 new end
----------------------------------- [9] backtrack: 155
----------------------------------- [9] done: 155
----------------------------------- [8] backtrack: 149
----------------------------------- [8] done: 149
----------------------------------- [7] backtrack: 148
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1009 sat:587 unsat:422

string analysis: SPC # = 0
NPC constraint # = 8
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1010 sat:588 unsat:422

string analysis: SPC # = 0
NPC constraint # = 8
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [8] forward: 160 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1011 sat:589 unsat:422

string analysis: SPC # = 0
NPC constraint # = 8
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x0 > x2 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1012 sat:589 unsat:423

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x3 <= x0 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1013 sat:590 unsat:423

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x0 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x3 > x0 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1014 sat:590 unsat:424

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x0[-199] > x3[-200] &&
x2[-199] <= x4[-199] &&
x2[-199] > x3[-200] &&
x0[-199] <= x2[-199] &&
x1[-198] > x4[-199] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-199] <= x1[-198]
*************Summary***************
PC is:constraint # = 8
x0[-199] > x3[-200] &&
x2[-199] <= x4[-199] &&
x2[-199] > x3[-200] &&
x0[-199] <= x2[-199] &&
x1[-198] > x4[-199] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-199] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x0 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1015 sat:591 unsat:424

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x0 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x3 > x0 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1016 sat:591 unsat:425

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1017 sat:592 unsat:425

string analysis: SPC # = 0
NPC constraint # = 8
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x0 > x2 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1018 sat:592 unsat:426

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1019 sat:593 unsat:426

string analysis: SPC # = 0
NPC constraint # = 8
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x2 > x4 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1020 sat:593 unsat:427

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x1 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1021 sat:594 unsat:427

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x1 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x4 > x1 &&
x0 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1022 sat:594 unsat:428

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 161 new end
----------------------------------- [8] backtrack: 160
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x3 <= x2 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1023 sat:595 unsat:428

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x2 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x3 > x2 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1024 sat:595 unsat:429

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1025 sat:596 unsat:429

string analysis: SPC # = 0
NPC constraint # = 8
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x0 > x3 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1026 sat:596 unsat:430

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x0[-200] <= x3[-200] &&
x2[-199] <= x4[-199] &&
x2[-199] > x3[-200] &&
x0[-200] <= x2[-199] &&
x1[-198] > x4[-199] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-200] <= x1[-198]
*************Summary***************
PC is:constraint # = 8
x0[-200] <= x3[-200] &&
x2[-199] <= x4[-199] &&
x2[-199] > x3[-200] &&
x0[-200] <= x2[-199] &&
x1[-198] > x4[-199] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-200] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1027 sat:597 unsat:430

string analysis: SPC # = 0
NPC constraint # = 8
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x0 > x3 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1028 sat:597 unsat:431

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x2 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1029 sat:598 unsat:431

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x2 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x3 > x2 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1030 sat:598 unsat:432

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1031 sat:599 unsat:432

string analysis: SPC # = 0
NPC constraint # = 8
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x2 > x4 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1032 sat:599 unsat:433

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x1 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1033 sat:600 unsat:433

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x1 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x4 > x1 &&
x0 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1034 sat:600 unsat:434

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 162 new end
----------------------------------- [8] backtrack: 160
----------------------------------- [8] done: 160
----------------------------------- [7] backtrack: 148
----------------------------------- [7] done: 148
----------------------------------- [6] backtrack: 147
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1035 sat:601 unsat:434

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1036 sat:602 unsat:434

string analysis: SPC # = 0
NPC constraint # = 7
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [7] forward: 163 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1037 sat:603 unsat:434

string analysis: SPC # = 0
NPC constraint # = 7
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x2 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1038 sat:603 unsat:435

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1039 sat:604 unsat:435

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1040 sat:605 unsat:435

string analysis: SPC # = 0
NPC constraint # = 8
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [8] forward: 164 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1041 sat:606 unsat:435

string analysis: SPC # = 0
NPC constraint # = 9
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1042 sat:607 unsat:435

string analysis: SPC # = 0
NPC constraint # = 9
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [9] forward: 165 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x0[-199] > x4[-200] &&
x2[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x2[-199] <= x3[-199] &&
x0[-199] <= x2[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x1[-198] > x2[-199] &&
x0[-199] <= x1[-198]
*************Summary***************
PC is:constraint # = 9
x0[-199] > x4[-200] &&
x2[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x2[-199] <= x3[-199] &&
x0[-199] <= x2[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x1[-198] > x2[-199] &&
x0[-199] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x0 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1043 sat:608 unsat:435

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x0 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x4 > x0 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1044 sat:608 unsat:436

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1045 sat:609 unsat:436

string analysis: SPC # = 0
NPC constraint # = 9
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x0 > x2 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1046 sat:609 unsat:437

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1047 sat:610 unsat:437

string analysis: SPC # = 0
NPC constraint # = 9
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x2 > x3 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1048 sat:610 unsat:438

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x1 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1049 sat:611 unsat:438

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x1 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x3 > x1 &&
x0 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1050 sat:611 unsat:439

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 166 new end
----------------------------------- [9] backtrack: 165
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x0[-200] <= x4[-200] &&
x2[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x2[-199] <= x3[-199] &&
x0[-200] <= x2[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x1[-198] > x2[-199] &&
x0[-200] <= x1[-198]
*************Summary***************
PC is:constraint # = 9
x0[-200] <= x4[-200] &&
x2[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x2[-199] <= x3[-199] &&
x0[-200] <= x2[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x1[-198] > x2[-199] &&
x0[-200] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1051 sat:612 unsat:439

string analysis: SPC # = 0
NPC constraint # = 9
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x0 > x4 &&
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1052 sat:612 unsat:440

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x2 &&
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1053 sat:613 unsat:440

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x2 &&
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x4 > x2 &&
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1054 sat:613 unsat:441

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1055 sat:614 unsat:441

string analysis: SPC # = 0
NPC constraint # = 9
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x2 > x3 &&
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1056 sat:614 unsat:442

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x1 &&
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1057 sat:615 unsat:442

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x1 &&
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 10
x3 > x1 &&
x0 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1058 sat:615 unsat:443

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 167 new end
----------------------------------- [9] backtrack: 165
----------------------------------- [9] done: 165
----------------------------------- [8] backtrack: 164
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1059 sat:616 unsat:443

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x0 > x2 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1060 sat:616 unsat:444

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x2[-200] <= x4[-200] &&
x3[-199] > x4[-200] &&
x2[-200] <= x3[-199] &&
x0[-200] <= x2[-200] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x1[-198] > x2[-200] &&
x0[-200] <= x1[-198]
*************Summary***************
PC is:constraint # = 8
x2[-200] <= x4[-200] &&
x3[-199] > x4[-200] &&
x2[-200] <= x3[-199] &&
x0[-200] <= x2[-200] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x1[-198] > x2[-200] &&
x0[-200] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1061 sat:617 unsat:444

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x0 > x2 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1062 sat:617 unsat:445

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1063 sat:618 unsat:445

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x2 > x4 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1064 sat:618 unsat:446

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x3 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1065 sat:619 unsat:446

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x3 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x4 > x3 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1066 sat:619 unsat:447

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x1 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1067 sat:620 unsat:447

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x1 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x3 > x1 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1068 sat:620 unsat:448

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 168 new end
----------------------------------- [8] backtrack: 164
----------------------------------- [8] done: 164
----------------------------------- [7] backtrack: 163
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1069 sat:621 unsat:448

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x2 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1070 sat:621 unsat:449

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1071 sat:622 unsat:449

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x2 > x3 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1072 sat:622 unsat:450

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1073 sat:623 unsat:450

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x2 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1074 sat:623 unsat:451

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x3[-200] <= x4[-200] &&
x2[-200] <= x3[-200] &&
x0[-200] <= x2[-200] &&
x1[-199] > x4[-200] &&
x1[-199] > x3[-200] &&
x1[-199] > x2[-200] &&
x0[-200] <= x1[-199]
*************Summary***************
PC is:constraint # = 7
x3[-200] <= x4[-200] &&
x2[-200] <= x3[-200] &&
x0[-200] <= x2[-200] &&
x1[-199] > x4[-200] &&
x1[-199] > x3[-200] &&
x1[-199] > x2[-200] &&
x0[-200] <= x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1075 sat:624 unsat:451

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x2 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1076 sat:624 unsat:452

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1077 sat:625 unsat:452

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x2 > x3 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1078 sat:625 unsat:453

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1079 sat:626 unsat:453

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x3 > x4 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1080 sat:626 unsat:454

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x4 <= x1 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1081 sat:627 unsat:454

string analysis: SPC # = 0
NPC constraint # = 8
x4 <= x1 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x4 > x1 &&
x3 <= x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 > x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1082 sat:627 unsat:455

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 169 new end
----------------------------------- [7] backtrack: 163
----------------------------------- [7] done: 163
----------------------------------- [6] backtrack: 147
----------------------------------- [6] done: 147
----------------------------------- [5] backtrack: 123
----------------------------------- [5] done: 123
----------------------------------- [4] backtrack: 122
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1083 sat:628 unsat:455

string analysis: SPC # = 0
NPC constraint # = 5
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 5
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1084 sat:629 unsat:455

string analysis: SPC # = 0
NPC constraint # = 5
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [5] forward: 170 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1085 sat:630 unsat:455

string analysis: SPC # = 0
NPC constraint # = 6
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1086 sat:631 unsat:455

string analysis: SPC # = 0
NPC constraint # = 6
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [6] forward: 171 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1087 sat:632 unsat:455

string analysis: SPC # = 0
NPC constraint # = 6
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x1 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1088 sat:632 unsat:456

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1089 sat:633 unsat:456

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x2 > x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1090 sat:634 unsat:456

string analysis: SPC # = 0
NPC constraint # = 7
x2 > x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [7] forward: 172 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x0 &&
x2 > x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1091 sat:635 unsat:456

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x0 &&
x2 > x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x2 > x0 &&
x2 > x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1092 sat:635 unsat:457

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x3 <= x2 &&
x2 > x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1093 sat:636 unsat:457

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x2 &&
x2 > x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x3 > x2 &&
x2 > x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1094 sat:636 unsat:458

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x2 > x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x2[-199] > x3[-200] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-199] &&
x1[-198] <= x4[-198] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-198] <= x1[-198]
*************Summary***************
PC is:constraint # = 7
x2[-199] > x3[-200] &&
x0[-198] > x3[-200] &&
x0[-198] > x2[-199] &&
x1[-198] <= x4[-198] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-198] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x3 <= x2 &&
x2 > x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1095 sat:637 unsat:458

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x2 &&
x2 > x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x3 > x2 &&
x2 > x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1096 sat:637 unsat:459

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x0 &&
x2 > x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1097 sat:638 unsat:459

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x0 &&
x2 > x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x2 > x0 &&
x2 > x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1098 sat:638 unsat:460

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x2 > x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1099 sat:639 unsat:460

string analysis: SPC # = 0
NPC constraint # = 7
x2 > x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x1 &&
x2 > x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1100 sat:639 unsat:461

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x2 > x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1101 sat:640 unsat:461

string analysis: SPC # = 0
NPC constraint # = 7
x2 > x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x1 > x4 &&
x2 > x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1102 sat:640 unsat:462

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 173 new end
----------------------------------- [7] backtrack: 172
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x3 <= x0 &&
x2 <= x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1103 sat:641 unsat:462

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x0 &&
x2 <= x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x3 > x0 &&
x2 <= x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1104 sat:641 unsat:463

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1105 sat:642 unsat:463

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x2 > x3 &&
x2 <= x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1106 sat:642 unsat:464

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x2 <= x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x2[-200] <= x3[-200] &&
x0[-199] > x3[-200] &&
x0[-199] > x2[-200] &&
x1[-199] <= x4[-199] &&
x1[-199] > x3[-200] &&
x1[-199] > x2[-200] &&
x0[-199] <= x1[-199]
*************Summary***************
PC is:constraint # = 7
x2[-200] <= x3[-200] &&
x0[-199] > x3[-200] &&
x0[-199] > x2[-200] &&
x1[-199] <= x4[-199] &&
x1[-199] > x3[-200] &&
x1[-199] > x2[-200] &&
x0[-199] <= x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x2 <= x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1107 sat:643 unsat:464

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x2 > x3 &&
x2 <= x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1108 sat:643 unsat:465

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x3 <= x0 &&
x2 <= x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1109 sat:644 unsat:465

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x0 &&
x2 <= x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x3 > x0 &&
x2 <= x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1110 sat:644 unsat:466

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x2 <= x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1111 sat:645 unsat:466

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x1 &&
x2 <= x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1112 sat:645 unsat:467

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x2 <= x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1113 sat:646 unsat:467

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x1 > x4 &&
x2 <= x3 &&
x0 > x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1114 sat:646 unsat:468

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 174 new end
----------------------------------- [7] backtrack: 172
----------------------------------- [7] done: 172
----------------------------------- [6] backtrack: 171
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 <= x1 &&
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1115 sat:647 unsat:468

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x1 &&
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x3 > x1 &&
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1116 sat:647 unsat:469

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x0 &&
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1117 sat:648 unsat:469

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x0 &&
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x2 > x0 &&
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1118 sat:648 unsat:470

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1119 sat:649 unsat:470

string analysis: SPC # = 0
NPC constraint # = 6
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x3 &&
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1120 sat:649 unsat:471

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x0 &&
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1121 sat:650 unsat:471

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x0 &&
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x2 > x0 &&
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1122 sat:650 unsat:472

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 6
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 6
x0[-199] <= x3[-199] &&
x0[-199] > x2[-200] &&
x1[-198] <= x4[-198] &&
x1[-198] > x3[-199] &&
x1[-198] > x2[-200] &&
x0[-199] <= x1[-198]
*************Summary***************
PC is:constraint # = 6
x0[-199] <= x3[-199] &&
x0[-199] > x2[-200] &&
x1[-198] <= x4[-198] &&
x1[-198] > x3[-199] &&
x1[-198] > x2[-200] &&
x0[-199] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x2 <= x0 &&
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1123 sat:651 unsat:472

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x0 &&
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x2 > x0 &&
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1124 sat:651 unsat:473

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1125 sat:652 unsat:473

string analysis: SPC # = 0
NPC constraint # = 6
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x3 &&
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1126 sat:652 unsat:474

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x3 <= x1 &&
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1127 sat:653 unsat:474

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x1 &&
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x3 > x1 &&
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1128 sat:653 unsat:475

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1129 sat:654 unsat:475

string analysis: SPC # = 0
NPC constraint # = 6
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x1 > x4 &&
x0 <= x3 &&
x0 > x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1130 sat:654 unsat:476

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [7] forward: 175 new end
----------------------------------- [6] backtrack: 171
----------------------------------- [6] done: 171
----------------------------------- [5] backtrack: 170
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1131 sat:655 unsat:476

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1132 sat:656 unsat:476

string analysis: SPC # = 0
NPC constraint # = 6
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [6] forward: 176 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x1 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1133 sat:657 unsat:476

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x1 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x2 > x1 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1134 sat:657 unsat:477

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x0 <= x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1135 sat:658 unsat:477

string analysis: SPC # = 0
NPC constraint # = 7
x0 <= x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1136 sat:659 unsat:477

string analysis: SPC # = 0
NPC constraint # = 7
x0 > x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [7] forward: 177 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x0 > x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1137 sat:660 unsat:477

string analysis: SPC # = 0
NPC constraint # = 7
x0 > x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x2 &&
x0 > x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1138 sat:660 unsat:478

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x3 <= x0 &&
x0 > x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1139 sat:661 unsat:478

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x0 &&
x0 > x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x3 > x0 &&
x0 > x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1140 sat:661 unsat:479

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x0 > x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x0[-199] > x3[-200] &&
x2[-199] > x3[-200] &&
x0[-199] <= x2[-199] &&
x1[-198] <= x4[-198] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-199] <= x1[-198]
*************Summary***************
PC is:constraint # = 7
x0[-199] > x3[-200] &&
x2[-199] > x3[-200] &&
x0[-199] <= x2[-199] &&
x1[-198] <= x4[-198] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-199] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x3 <= x0 &&
x0 > x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1141 sat:662 unsat:479

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x0 &&
x0 > x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x3 > x0 &&
x0 > x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1142 sat:662 unsat:480

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x0 > x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1143 sat:663 unsat:480

string analysis: SPC # = 0
NPC constraint # = 7
x0 > x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x2 &&
x0 > x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1144 sat:663 unsat:481

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x1 &&
x0 > x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1145 sat:664 unsat:481

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x1 &&
x0 > x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x2 > x1 &&
x0 > x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1146 sat:664 unsat:482

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x0 > x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1147 sat:665 unsat:482

string analysis: SPC # = 0
NPC constraint # = 7
x0 > x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x1 > x4 &&
x0 > x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1148 sat:665 unsat:483

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 178 new end
----------------------------------- [7] backtrack: 177
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x3 <= x2 &&
x0 <= x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1149 sat:666 unsat:483

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x2 &&
x0 <= x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x3 > x2 &&
x0 <= x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1150 sat:666 unsat:484

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x0 <= x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1151 sat:667 unsat:484

string analysis: SPC # = 0
NPC constraint # = 7
x0 <= x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x3 &&
x0 <= x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1152 sat:667 unsat:485

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x0 <= x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x0[-200] <= x3[-200] &&
x2[-199] > x3[-200] &&
x0[-200] <= x2[-199] &&
x1[-198] <= x4[-198] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-200] <= x1[-198]
*************Summary***************
PC is:constraint # = 7
x0[-200] <= x3[-200] &&
x2[-199] > x3[-200] &&
x0[-200] <= x2[-199] &&
x1[-198] <= x4[-198] &&
x1[-198] > x3[-200] &&
x1[-198] > x2[-199] &&
x0[-200] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x0 <= x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1153 sat:668 unsat:485

string analysis: SPC # = 0
NPC constraint # = 7
x0 <= x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x3 &&
x0 <= x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1154 sat:668 unsat:486

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x3 <= x2 &&
x0 <= x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1155 sat:669 unsat:486

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x2 &&
x0 <= x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x3 > x2 &&
x0 <= x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1156 sat:669 unsat:487

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x1 &&
x0 <= x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1157 sat:670 unsat:487

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x1 &&
x0 <= x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x2 > x1 &&
x0 <= x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1158 sat:670 unsat:488

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x0 <= x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1159 sat:671 unsat:488

string analysis: SPC # = 0
NPC constraint # = 7
x0 <= x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x1 > x4 &&
x0 <= x3 &&
x2 > x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1160 sat:671 unsat:489

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 179 new end
----------------------------------- [7] backtrack: 177
----------------------------------- [7] done: 177
----------------------------------- [6] backtrack: 176
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 <= x1 &&
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1161 sat:672 unsat:489

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x1 &&
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x3 > x1 &&
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1162 sat:672 unsat:490

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1163 sat:673 unsat:490

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x2 &&
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1164 sat:673 unsat:491

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1165 sat:674 unsat:491

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x2 > x3 &&
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1166 sat:674 unsat:492

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1167 sat:675 unsat:492

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x2 &&
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1168 sat:675 unsat:493

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 6
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 6
x2[-200] <= x3[-200] &&
x0[-200] <= x2[-200] &&
x1[-199] <= x4[-199] &&
x1[-199] > x3[-200] &&
x1[-199] > x2[-200] &&
x0[-200] <= x1[-199]
*************Summary***************
PC is:constraint # = 6
x2[-200] <= x3[-200] &&
x0[-200] <= x2[-200] &&
x1[-199] <= x4[-199] &&
x1[-199] > x3[-200] &&
x1[-199] > x2[-200] &&
x0[-200] <= x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1169 sat:676 unsat:493

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x2 &&
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1170 sat:676 unsat:494

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1171 sat:677 unsat:494

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x2 > x3 &&
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1172 sat:677 unsat:495

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x3 <= x1 &&
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1173 sat:678 unsat:495

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x1 &&
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x3 > x1 &&
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1174 sat:678 unsat:496

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1175 sat:679 unsat:496

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x1 > x4 &&
x2 <= x3 &&
x0 <= x2 &&
x1 <= x4 &&
x1 > x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1176 sat:679 unsat:497

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [7] forward: 180 new end
----------------------------------- [6] backtrack: 176
----------------------------------- [6] done: 176
----------------------------------- [5] backtrack: 170
----------------------------------- [5] done: 170
----------------------------------- [4] backtrack: 122
----------------------------------- [4] done: 122
----------------------------------- [3] backtrack: 121
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1177 sat:680 unsat:497

string analysis: SPC # = 0
NPC constraint # = 4
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 4
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1178 sat:681 unsat:497

string analysis: SPC # = 0
NPC constraint # = 4
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [4] forward: 181 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1179 sat:682 unsat:497

string analysis: SPC # = 0
NPC constraint # = 5
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 5
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1180 sat:683 unsat:497

string analysis: SPC # = 0
NPC constraint # = 5
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [5] forward: 182 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1181 sat:684 unsat:497

string analysis: SPC # = 0
NPC constraint # = 5
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x0 > x1 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1182 sat:684 unsat:498

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1183 sat:685 unsat:498

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1184 sat:686 unsat:498

string analysis: SPC # = 0
NPC constraint # = 6
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [6] forward: 183 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x0 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1185 sat:687 unsat:498

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x0 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x2 > x0 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1186 sat:687 unsat:499

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x0 <= x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1187 sat:688 unsat:499

string analysis: SPC # = 0
NPC constraint # = 7
x0 <= x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1188 sat:689 unsat:499

string analysis: SPC # = 0
NPC constraint # = 7
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [7] forward: 184 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1189 sat:690 unsat:499

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x2 > x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1190 sat:691 unsat:499

string analysis: SPC # = 0
NPC constraint # = 8
x2 > x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [8] forward: 185 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x2 > x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x2[-199] > x4[-200] &&
x0[-198] > x4[-200] &&
x1[-198] > x4[-200] &&
x0[-198] > x2[-199] &&
x3[-198] > x4[-200] &&
x1[-198] <= x3[-198] &&
x1[-198] > x2[-199] &&
x0[-198] <= x1[-198]
*************Summary***************
PC is:constraint # = 8
x2[-199] > x4[-200] &&
x0[-198] > x4[-200] &&
x1[-198] > x4[-200] &&
x0[-198] > x2[-199] &&
x3[-198] > x4[-200] &&
x1[-198] <= x3[-198] &&
x1[-198] > x2[-199] &&
x0[-198] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x2 &&
x2 > x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1191 sat:692 unsat:499

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x2 &&
x2 > x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x4 > x2 &&
x2 > x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1192 sat:692 unsat:500

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x2 <= x0 &&
x2 > x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1193 sat:693 unsat:500

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x0 &&
x2 > x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x2 > x0 &&
x2 > x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1194 sat:693 unsat:501

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 > x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1195 sat:694 unsat:501

string analysis: SPC # = 0
NPC constraint # = 8
x2 > x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x0 > x1 &&
x2 > x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1196 sat:694 unsat:502

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 > x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1197 sat:695 unsat:502

string analysis: SPC # = 0
NPC constraint # = 8
x2 > x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x1 > x3 &&
x2 > x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1198 sat:695 unsat:503

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 186 new end
----------------------------------- [8] backtrack: 185
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x2 <= x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x2[-200] <= x4[-200] &&
x0[-199] > x4[-200] &&
x1[-199] > x4[-200] &&
x0[-199] > x2[-200] &&
x3[-199] > x4[-200] &&
x1[-199] <= x3[-199] &&
x1[-199] > x2[-200] &&
x0[-199] <= x1[-199]
*************Summary***************
PC is:constraint # = 8
x2[-200] <= x4[-200] &&
x0[-199] > x4[-200] &&
x1[-199] > x4[-200] &&
x0[-199] > x2[-200] &&
x3[-199] > x4[-200] &&
x1[-199] <= x3[-199] &&
x1[-199] > x2[-200] &&
x0[-199] <= x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1199 sat:696 unsat:503

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x2 > x4 &&
x2 <= x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1200 sat:696 unsat:504

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x0 &&
x2 <= x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1201 sat:697 unsat:504

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x0 &&
x2 <= x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x4 > x0 &&
x2 <= x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1202 sat:697 unsat:505

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1203 sat:698 unsat:505

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x0 > x1 &&
x2 <= x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1204 sat:698 unsat:506

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1205 sat:699 unsat:506

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x1 > x3 &&
x2 <= x4 &&
x0 > x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1206 sat:699 unsat:507

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 187 new end
----------------------------------- [8] backtrack: 185
----------------------------------- [8] done: 185
----------------------------------- [7] backtrack: 184
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x2 <= x0 &&
x0 <= x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1207 sat:700 unsat:507

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x0 &&
x0 <= x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x2 > x0 &&
x0 <= x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1208 sat:700 unsat:508

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x0 <= x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x0[-199] <= x4[-199] &&
x1[-198] > x4[-199] &&
x0[-199] > x2[-200] &&
x3[-198] > x4[-199] &&
x1[-198] <= x3[-198] &&
x1[-198] > x2[-200] &&
x0[-199] <= x1[-198]
*************Summary***************
PC is:constraint # = 7
x0[-199] <= x4[-199] &&
x1[-198] > x4[-199] &&
x0[-199] > x2[-200] &&
x3[-198] > x4[-199] &&
x1[-198] <= x3[-198] &&
x1[-198] > x2[-200] &&
x0[-199] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x2 <= x0 &&
x0 <= x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1209 sat:701 unsat:508

string analysis: SPC # = 0
NPC constraint # = 8
x2 <= x0 &&
x0 <= x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x2 > x0 &&
x0 <= x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1210 sat:701 unsat:509

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x0 <= x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1211 sat:702 unsat:509

string analysis: SPC # = 0
NPC constraint # = 7
x0 <= x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x4 &&
x0 <= x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1212 sat:702 unsat:510

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x4 <= x1 &&
x0 <= x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1213 sat:703 unsat:510

string analysis: SPC # = 0
NPC constraint # = 8
x4 <= x1 &&
x0 <= x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x4 > x1 &&
x0 <= x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1214 sat:703 unsat:511

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x0 <= x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1215 sat:704 unsat:511

string analysis: SPC # = 0
NPC constraint # = 7
x0 <= x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x1 > x3 &&
x0 <= x4 &&
x1 > x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1216 sat:704 unsat:512

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 188 new end
----------------------------------- [7] backtrack: 184
----------------------------------- [7] done: 184
----------------------------------- [6] backtrack: 183
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x0 &&
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1217 sat:705 unsat:512

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x0 &&
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x2 > x0 &&
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1218 sat:705 unsat:513

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1219 sat:706 unsat:513

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x1 &&
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1220 sat:706 unsat:514

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x0 &&
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1221 sat:707 unsat:514

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x0 &&
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x2 > x0 &&
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1222 sat:707 unsat:515

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 6
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 6
x1[-199] <= x4[-199] &&
x0[-199] > x2[-200] &&
x3[-198] > x4[-199] &&
x1[-199] <= x3[-198] &&
x1[-199] > x2[-200] &&
x0[-199] <= x1[-199]
*************Summary***************
PC is:constraint # = 6
x1[-199] <= x4[-199] &&
x0[-199] > x2[-200] &&
x3[-198] > x4[-199] &&
x1[-199] <= x3[-198] &&
x1[-199] > x2[-200] &&
x0[-199] <= x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x2 <= x0 &&
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1223 sat:708 unsat:515

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x0 &&
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x2 > x0 &&
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1224 sat:708 unsat:516

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1225 sat:709 unsat:516

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x1 &&
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1226 sat:709 unsat:517

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1227 sat:710 unsat:517

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x1 > x4 &&
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1228 sat:710 unsat:518

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x4 <= x3 &&
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1229 sat:711 unsat:518

string analysis: SPC # = 0
NPC constraint # = 7
x4 <= x3 &&
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x4 > x3 &&
x1 <= x4 &&
x0 > x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1230 sat:711 unsat:519

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [7] forward: 189 new end
----------------------------------- [6] backtrack: 183
----------------------------------- [6] done: 183
----------------------------------- [5] backtrack: 182
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x2 <= x1 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1231 sat:712 unsat:519

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x1 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x2 > x1 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1232 sat:712 unsat:520

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1233 sat:713 unsat:520

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1234 sat:714 unsat:520

string analysis: SPC # = 0
NPC constraint # = 6
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [6] forward: 190 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1235 sat:715 unsat:520

string analysis: SPC # = 0
NPC constraint # = 6
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x2 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1236 sat:715 unsat:521

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1237 sat:716 unsat:521

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1238 sat:717 unsat:521

string analysis: SPC # = 0
NPC constraint # = 7
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [7] forward: 191 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x0 <= x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1239 sat:718 unsat:521

string analysis: SPC # = 0
NPC constraint # = 8
x0 <= x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1240 sat:719 unsat:521

string analysis: SPC # = 0
NPC constraint # = 8
x0 > x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [8] forward: 192 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x0 > x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x0[-199] > x4[-200] &&
x2[-199] > x4[-200] &&
x1[-198] > x4[-200] &&
x0[-199] <= x2[-199] &&
x3[-198] > x4[-200] &&
x1[-198] <= x3[-198] &&
x1[-198] > x2[-199] &&
x0[-199] <= x1[-198]
*************Summary***************
PC is:constraint # = 8
x0[-199] > x4[-200] &&
x2[-199] > x4[-200] &&
x1[-198] > x4[-200] &&
x0[-199] <= x2[-199] &&
x3[-198] > x4[-200] &&
x1[-198] <= x3[-198] &&
x1[-198] > x2[-199] &&
x0[-199] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x0 &&
x0 > x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1241 sat:720 unsat:521

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x0 &&
x0 > x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x4 > x0 &&
x0 > x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1242 sat:720 unsat:522

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x0 > x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1243 sat:721 unsat:522

string analysis: SPC # = 0
NPC constraint # = 8
x0 > x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x0 > x2 &&
x0 > x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1244 sat:721 unsat:523

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x2 <= x1 &&
x0 > x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1245 sat:722 unsat:523

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x1 &&
x0 > x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x2 > x1 &&
x0 > x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1246 sat:722 unsat:524

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x0 > x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1247 sat:723 unsat:524

string analysis: SPC # = 0
NPC constraint # = 8
x0 > x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x1 > x3 &&
x0 > x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1248 sat:723 unsat:525

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 193 new end
----------------------------------- [8] backtrack: 192
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x0 <= x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x0[-200] <= x4[-200] &&
x2[-199] > x4[-200] &&
x1[-198] > x4[-200] &&
x0[-200] <= x2[-199] &&
x3[-198] > x4[-200] &&
x1[-198] <= x3[-198] &&
x1[-198] > x2[-199] &&
x0[-200] <= x1[-198]
*************Summary***************
PC is:constraint # = 8
x0[-200] <= x4[-200] &&
x2[-199] > x4[-200] &&
x1[-198] > x4[-200] &&
x0[-200] <= x2[-199] &&
x3[-198] > x4[-200] &&
x1[-198] <= x3[-198] &&
x1[-198] > x2[-199] &&
x0[-200] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x0 <= x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1249 sat:724 unsat:525

string analysis: SPC # = 0
NPC constraint # = 8
x0 <= x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x0 > x4 &&
x0 <= x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1250 sat:724 unsat:526

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x2 &&
x0 <= x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1251 sat:725 unsat:526

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x2 &&
x0 <= x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x4 > x2 &&
x0 <= x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1252 sat:725 unsat:527

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x2 <= x1 &&
x0 <= x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1253 sat:726 unsat:527

string analysis: SPC # = 0
NPC constraint # = 9
x2 <= x1 &&
x0 <= x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x2 > x1 &&
x0 <= x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1254 sat:726 unsat:528

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x0 <= x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1255 sat:727 unsat:528

string analysis: SPC # = 0
NPC constraint # = 8
x0 <= x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 9
x1 > x3 &&
x0 <= x4 &&
x2 > x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1256 sat:727 unsat:529

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 194 new end
----------------------------------- [8] backtrack: 192
----------------------------------- [8] done: 192
----------------------------------- [7] backtrack: 191
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1257 sat:728 unsat:529

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x2 &&
x2 <= x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1258 sat:728 unsat:530

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x2 <= x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x2[-200] <= x4[-200] &&
x1[-199] > x4[-200] &&
x0[-200] <= x2[-200] &&
x3[-199] > x4[-200] &&
x1[-199] <= x3[-199] &&
x1[-199] > x2[-200] &&
x0[-200] <= x1[-199]
*************Summary***************
PC is:constraint # = 7
x2[-200] <= x4[-200] &&
x1[-199] > x4[-200] &&
x0[-200] <= x2[-200] &&
x3[-199] > x4[-200] &&
x1[-199] <= x3[-199] &&
x1[-199] > x2[-200] &&
x0[-200] <= x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x2 <= x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1259 sat:729 unsat:530

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x2 &&
x2 <= x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1260 sat:729 unsat:531

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x2 <= x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1261 sat:730 unsat:531

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x2 > x4 &&
x2 <= x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1262 sat:730 unsat:532

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x4 <= x1 &&
x2 <= x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1263 sat:731 unsat:532

string analysis: SPC # = 0
NPC constraint # = 8
x4 <= x1 &&
x2 <= x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x4 > x1 &&
x2 <= x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1264 sat:731 unsat:533

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x2 <= x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1265 sat:732 unsat:533

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 8
x1 > x3 &&
x2 <= x4 &&
x1 > x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1266 sat:732 unsat:534

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 195 new end
----------------------------------- [7] backtrack: 191
----------------------------------- [7] done: 191
----------------------------------- [6] backtrack: 190
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1267 sat:733 unsat:534

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x2 &&
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1268 sat:733 unsat:535

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x2 <= x1 &&
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1269 sat:734 unsat:535

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x1 &&
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x2 > x1 &&
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1270 sat:734 unsat:536

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1271 sat:735 unsat:536

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x2 &&
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1272 sat:735 unsat:537

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 6
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 6
x1[-199] <= x4[-199] &&
x0[-200] <= x2[-200] &&
x3[-198] > x4[-199] &&
x1[-199] <= x3[-198] &&
x1[-199] > x2[-200] &&
x0[-200] <= x1[-199]
*************Summary***************
PC is:constraint # = 6
x1[-199] <= x4[-199] &&
x0[-200] <= x2[-200] &&
x3[-198] > x4[-199] &&
x1[-199] <= x3[-198] &&
x1[-199] > x2[-200] &&
x0[-200] <= x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1273 sat:736 unsat:537

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x2 &&
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1274 sat:736 unsat:538

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x2 <= x1 &&
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1275 sat:737 unsat:538

string analysis: SPC # = 0
NPC constraint # = 7
x2 <= x1 &&
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x2 > x1 &&
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1276 sat:737 unsat:539

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1277 sat:738 unsat:539

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x1 > x4 &&
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1278 sat:738 unsat:540

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x4 <= x3 &&
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1279 sat:739 unsat:540

string analysis: SPC # = 0
NPC constraint # = 7
x4 <= x3 &&
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 7
x4 > x3 &&
x1 <= x4 &&
x0 <= x2 &&
x3 > x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1280 sat:739 unsat:541

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [7] forward: 196 new end
----------------------------------- [6] backtrack: 190
----------------------------------- [6] done: 190
----------------------------------- [5] backtrack: 182
----------------------------------- [5] done: 182
----------------------------------- [4] backtrack: 181
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1281 sat:740 unsat:541

string analysis: SPC # = 0
NPC constraint # = 5
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 5
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1282 sat:741 unsat:541

string analysis: SPC # = 0
NPC constraint # = 5
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [5] forward: 197 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1283 sat:742 unsat:541

string analysis: SPC # = 0
NPC constraint # = 5
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x0 > x1 &&
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1284 sat:742 unsat:542

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1285 sat:743 unsat:542

string analysis: SPC # = 0
NPC constraint # = 5
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x1 > x3 &&
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1286 sat:743 unsat:543

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x2 <= x0 &&
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1287 sat:744 unsat:543

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x0 &&
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x2 > x0 &&
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1288 sat:744 unsat:544

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1289 sat:745 unsat:544

string analysis: SPC # = 0
NPC constraint # = 5
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x0 > x1 &&
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1290 sat:745 unsat:545

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x2 <= x0 &&
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1291 sat:746 unsat:545

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x0 &&
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x2 > x0 &&
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1292 sat:746 unsat:546

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 5
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 5
x0[-199] > x2[-200] &&
x3[-199] <= x4[-199] &&
x1[-199] <= x3[-199] &&
x1[-199] > x2[-200] &&
x0[-199] <= x1[-199]
*************Summary***************
PC is:constraint # = 5
x0[-199] > x2[-200] &&
x3[-199] <= x4[-199] &&
x1[-199] <= x3[-199] &&
x1[-199] > x2[-200] &&
x0[-199] <= x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x2 <= x0 &&
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1293 sat:747 unsat:546

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x0 &&
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x2 > x0 &&
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1294 sat:747 unsat:547

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1295 sat:748 unsat:547

string analysis: SPC # = 0
NPC constraint # = 5
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x0 > x1 &&
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1296 sat:748 unsat:548

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1297 sat:749 unsat:548

string analysis: SPC # = 0
NPC constraint # = 5
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x1 > x3 &&
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1298 sat:749 unsat:549

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1299 sat:750 unsat:549

string analysis: SPC # = 0
NPC constraint # = 5
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x3 > x4 &&
x0 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1300 sat:750 unsat:550

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [6] forward: 198 new end
----------------------------------- [5] backtrack: 197
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x2 <= x1 &&
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1301 sat:751 unsat:550

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x1 &&
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x2 > x1 &&
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1302 sat:751 unsat:551

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1303 sat:752 unsat:551

string analysis: SPC # = 0
NPC constraint # = 5
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x1 > x3 &&
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1304 sat:752 unsat:552

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1305 sat:753 unsat:552

string analysis: SPC # = 0
NPC constraint # = 5
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x0 > x2 &&
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1306 sat:753 unsat:553

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x2 <= x1 &&
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1307 sat:754 unsat:553

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x1 &&
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x2 > x1 &&
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1308 sat:754 unsat:554

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1309 sat:755 unsat:554

string analysis: SPC # = 0
NPC constraint # = 5
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x0 > x2 &&
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1310 sat:755 unsat:555

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 5
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 5
x0[-200] <= x2[-200] &&
x3[-199] <= x4[-199] &&
x1[-199] <= x3[-199] &&
x1[-199] > x2[-200] &&
x0[-200] <= x1[-199]
*************Summary***************
PC is:constraint # = 5
x0[-200] <= x2[-200] &&
x3[-199] <= x4[-199] &&
x1[-199] <= x3[-199] &&
x1[-199] > x2[-200] &&
x0[-200] <= x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1311 sat:756 unsat:555

string analysis: SPC # = 0
NPC constraint # = 5
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x0 > x2 &&
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1312 sat:756 unsat:556

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x2 <= x1 &&
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1313 sat:757 unsat:556

string analysis: SPC # = 0
NPC constraint # = 6
x2 <= x1 &&
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x2 > x1 &&
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1314 sat:757 unsat:557

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1315 sat:758 unsat:557

string analysis: SPC # = 0
NPC constraint # = 5
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x1 > x3 &&
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1316 sat:758 unsat:558

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> true

### PCs: total:1317 sat:759 unsat:558

string analysis: SPC # = 0
NPC constraint # = 5
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1
numeric PC: constraint # = 6
x3 > x4 &&
x0 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x1 > x2 &&
x0 <= x1 -> false

### PCs: total:1318 sat:759 unsat:559

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [6] forward: 199 new end
----------------------------------- [5] backtrack: 197
----------------------------------- [5] done: 197
----------------------------------- [4] backtrack: 181
----------------------------------- [4] done: 181
----------------------------------- [3] backtrack: 121
----------------------------------- [3] done: 121
----------------------------------- [2] backtrack: 120
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 3
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1319 sat:760 unsat:559

string analysis: SPC # = 0
NPC constraint # = 3
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 3
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1320 sat:761 unsat:559

string analysis: SPC # = 0
NPC constraint # = 3
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [3] forward: 200 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1321 sat:762 unsat:559

string analysis: SPC # = 0
NPC constraint # = 4
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 4
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1322 sat:763 unsat:559

string analysis: SPC # = 0
NPC constraint # = 4
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [4] forward: 201 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1323 sat:764 unsat:559

string analysis: SPC # = 0
NPC constraint # = 4
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 5
x0 > x1 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1324 sat:764 unsat:560

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1325 sat:765 unsat:560

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 5
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1326 sat:766 unsat:560

string analysis: SPC # = 0
NPC constraint # = 5
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [5] forward: 202 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1327 sat:767 unsat:560

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 6
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1328 sat:768 unsat:560

string analysis: SPC # = 0
NPC constraint # = 6
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [6] forward: 203 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1329 sat:769 unsat:560

string analysis: SPC # = 0
NPC constraint # = 7
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1330 sat:770 unsat:560

string analysis: SPC # = 0
NPC constraint # = 7
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [7] forward: 204 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x0 <= x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1331 sat:771 unsat:560

string analysis: SPC # = 0
NPC constraint # = 8
x0 <= x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1332 sat:772 unsat:560

string analysis: SPC # = 0
NPC constraint # = 8
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [8] forward: 205 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1333 sat:773 unsat:560

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 9
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1334 sat:774 unsat:560

string analysis: SPC # = 0
NPC constraint # = 9
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [9] forward: 206 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x3[-199] > x4[-200] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x1[-198] <= x2[-198] &&
x0[-198] <= x1[-198]
*************Summary***************
PC is:constraint # = 9
x3[-199] > x4[-200] &&
x0[-198] > x4[-200] &&
x0[-198] > x3[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x1[-198] <= x2[-198] &&
x0[-198] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x3 &&
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1335 sat:775 unsat:560

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x3 &&
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 10
x4 > x3 &&
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1336 sat:775 unsat:561

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x0 &&
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1337 sat:776 unsat:561

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x0 &&
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 10
x3 > x0 &&
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1338 sat:776 unsat:562

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1339 sat:777 unsat:562

string analysis: SPC # = 0
NPC constraint # = 9
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 10
x0 > x1 &&
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1340 sat:777 unsat:563

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1341 sat:778 unsat:563

string analysis: SPC # = 0
NPC constraint # = 9
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 10
x1 > x2 &&
x3 > x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1342 sat:778 unsat:564

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 207 new end
----------------------------------- [9] backtrack: 206
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x3[-200] <= x4[-200] &&
x0[-199] > x4[-200] &&
x0[-199] > x3[-200] &&
x1[-199] > x4[-200] &&
x1[-199] > x3[-200] &&
x2[-199] > x4[-200] &&
x2[-199] > x3[-200] &&
x1[-199] <= x2[-199] &&
x0[-199] <= x1[-199]
*************Summary***************
PC is:constraint # = 9
x3[-200] <= x4[-200] &&
x0[-199] > x4[-200] &&
x0[-199] > x3[-200] &&
x1[-199] > x4[-200] &&
x1[-199] > x3[-200] &&
x2[-199] > x4[-200] &&
x2[-199] > x3[-200] &&
x1[-199] <= x2[-199] &&
x0[-199] <= x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1343 sat:779 unsat:564

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 10
x3 > x4 &&
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1344 sat:779 unsat:565

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x0 &&
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1345 sat:780 unsat:565

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x0 &&
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 10
x4 > x0 &&
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1346 sat:780 unsat:566

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1347 sat:781 unsat:566

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 10
x0 > x1 &&
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1348 sat:781 unsat:567

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1349 sat:782 unsat:567

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 10
x1 > x2 &&
x3 <= x4 &&
x0 > x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1350 sat:782 unsat:568

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 208 new end
----------------------------------- [9] backtrack: 206
----------------------------------- [9] done: 206
----------------------------------- [8] backtrack: 205
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x3 <= x0 &&
x0 <= x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1351 sat:783 unsat:568

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x0 &&
x0 <= x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 9
x3 > x0 &&
x0 <= x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1352 sat:783 unsat:569

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x0 <= x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x0[-199] <= x4[-199] &&
x0[-199] > x3[-200] &&
x1[-198] > x4[-199] &&
x1[-198] > x3[-200] &&
x2[-198] > x4[-199] &&
x2[-198] > x3[-200] &&
x1[-198] <= x2[-198] &&
x0[-199] <= x1[-198]
*************Summary***************
PC is:constraint # = 8
x0[-199] <= x4[-199] &&
x0[-199] > x3[-200] &&
x1[-198] > x4[-199] &&
x1[-198] > x3[-200] &&
x2[-198] > x4[-199] &&
x2[-198] > x3[-200] &&
x1[-198] <= x2[-198] &&
x0[-199] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x0 &&
x0 <= x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1353 sat:784 unsat:569

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x0 &&
x0 <= x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 9
x3 > x0 &&
x0 <= x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1354 sat:784 unsat:570

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x0 <= x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1355 sat:785 unsat:570

string analysis: SPC # = 0
NPC constraint # = 8
x0 <= x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 9
x0 > x4 &&
x0 <= x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1356 sat:785 unsat:571

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x1 &&
x0 <= x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1357 sat:786 unsat:571

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x1 &&
x0 <= x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 9
x4 > x1 &&
x0 <= x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1358 sat:786 unsat:572

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x0 <= x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1359 sat:787 unsat:572

string analysis: SPC # = 0
NPC constraint # = 8
x0 <= x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 9
x1 > x2 &&
x0 <= x4 &&
x0 > x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1360 sat:787 unsat:573

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 209 new end
----------------------------------- [8] backtrack: 205
----------------------------------- [8] done: 205
----------------------------------- [7] backtrack: 204
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x3 <= x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1361 sat:788 unsat:573

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1362 sat:789 unsat:573

string analysis: SPC # = 0
NPC constraint # = 8
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [8] forward: 210 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 9
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1363 sat:790 unsat:573

string analysis: SPC # = 0
NPC constraint # = 9
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 9
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1364 sat:791 unsat:573

string analysis: SPC # = 0
NPC constraint # = 9
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [9] forward: 211 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x0[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x0[-199] <= x3[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x1[-198] <= x2[-198] &&
x0[-199] <= x1[-198]
*************Summary***************
PC is:constraint # = 9
x0[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x0[-199] <= x3[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x1[-198] <= x2[-198] &&
x0[-199] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x0 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1365 sat:792 unsat:573

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x0 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 10
x4 > x0 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1366 sat:792 unsat:574

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1367 sat:793 unsat:574

string analysis: SPC # = 0
NPC constraint # = 9
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 10
x0 > x3 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1368 sat:793 unsat:575

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x1 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1369 sat:794 unsat:575

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x1 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 10
x3 > x1 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1370 sat:794 unsat:576

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1371 sat:795 unsat:576

string analysis: SPC # = 0
NPC constraint # = 9
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 10
x1 > x2 &&
x0 > x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1372 sat:795 unsat:577

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 212 new end
----------------------------------- [9] backtrack: 211
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 9
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 9
x0[-200] <= x4[-200] &&
x3[-199] > x4[-200] &&
x0[-200] <= x3[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x1[-198] <= x2[-198] &&
x0[-200] <= x1[-198]
*************Summary***************
PC is:constraint # = 9
x0[-200] <= x4[-200] &&
x3[-199] > x4[-200] &&
x0[-200] <= x3[-199] &&
x1[-198] > x4[-200] &&
x1[-198] > x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x1[-198] <= x2[-198] &&
x0[-200] <= x1[-198]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1373 sat:796 unsat:577

string analysis: SPC # = 0
NPC constraint # = 9
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 10
x0 > x4 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1374 sat:796 unsat:578

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x4 <= x3 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1375 sat:797 unsat:578

string analysis: SPC # = 0
NPC constraint # = 10
x4 <= x3 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 10
x4 > x3 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1376 sat:797 unsat:579

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 10
x3 <= x1 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1377 sat:798 unsat:579

string analysis: SPC # = 0
NPC constraint # = 10
x3 <= x1 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 10
x3 > x1 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1378 sat:798 unsat:580

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1379 sat:799 unsat:580

string analysis: SPC # = 0
NPC constraint # = 9
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 10
x1 > x2 &&
x0 <= x4 &&
x3 > x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1380 sat:799 unsat:581

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [10] forward: 213 new end
----------------------------------- [9] backtrack: 211
----------------------------------- [9] done: 211
----------------------------------- [8] backtrack: 210
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x3 <= x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1381 sat:800 unsat:581

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 9
x0 > x3 &&
x3 <= x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1382 sat:800 unsat:582

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x3 <= x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x3[-200] <= x4[-200] &&
x0[-200] <= x3[-200] &&
x1[-199] > x4[-200] &&
x1[-199] > x3[-200] &&
x2[-199] > x4[-200] &&
x2[-199] > x3[-200] &&
x1[-199] <= x2[-199] &&
x0[-200] <= x1[-199]
*************Summary***************
PC is:constraint # = 8
x3[-200] <= x4[-200] &&
x0[-200] <= x3[-200] &&
x1[-199] > x4[-200] &&
x1[-199] > x3[-200] &&
x2[-199] > x4[-200] &&
x2[-199] > x3[-200] &&
x1[-199] <= x2[-199] &&
x0[-200] <= x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x3 <= x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1383 sat:801 unsat:582

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 9
x0 > x3 &&
x3 <= x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1384 sat:801 unsat:583

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x3 <= x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1385 sat:802 unsat:583

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 9
x3 > x4 &&
x3 <= x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1386 sat:802 unsat:584

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x1 &&
x3 <= x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1387 sat:803 unsat:584

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x1 &&
x3 <= x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 9
x4 > x1 &&
x3 <= x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1388 sat:803 unsat:585

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x3 <= x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1389 sat:804 unsat:585

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 9
x1 > x2 &&
x3 <= x4 &&
x0 <= x3 &&
x1 > x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1390 sat:804 unsat:586

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 214 new end
----------------------------------- [8] backtrack: 210
----------------------------------- [8] done: 210
----------------------------------- [7] backtrack: 204
----------------------------------- [7] done: 204
----------------------------------- [6] backtrack: 203
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x0 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1391 sat:805 unsat:586

string analysis: SPC # = 0
NPC constraint # = 7
x0 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1392 sat:806 unsat:586

string analysis: SPC # = 0
NPC constraint # = 7
x0 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [7] forward: 215 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x0 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1393 sat:807 unsat:586

string analysis: SPC # = 0
NPC constraint # = 7
x0 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x1 &&
x0 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1394 sat:807 unsat:587

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x3 <= x0 &&
x0 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1395 sat:808 unsat:587

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x0 &&
x0 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x3 > x0 &&
x0 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1396 sat:808 unsat:588

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x0 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x0[-199] > x3[-200] &&
x1[-199] <= x4[-199] &&
x1[-199] > x3[-200] &&
x2[-198] > x4[-199] &&
x2[-198] > x3[-200] &&
x1[-199] <= x2[-198] &&
x0[-199] <= x1[-199]
*************Summary***************
PC is:constraint # = 7
x0[-199] > x3[-200] &&
x1[-199] <= x4[-199] &&
x1[-199] > x3[-200] &&
x2[-198] > x4[-199] &&
x2[-198] > x3[-200] &&
x1[-199] <= x2[-198] &&
x0[-199] <= x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x3 <= x0 &&
x0 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1397 sat:809 unsat:588

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x0 &&
x0 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x3 > x0 &&
x0 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1398 sat:809 unsat:589

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x0 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1399 sat:810 unsat:589

string analysis: SPC # = 0
NPC constraint # = 7
x0 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x1 &&
x0 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1400 sat:810 unsat:590

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x0 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1401 sat:811 unsat:590

string analysis: SPC # = 0
NPC constraint # = 7
x0 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x1 > x4 &&
x0 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1402 sat:811 unsat:591

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x4 <= x2 &&
x0 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1403 sat:812 unsat:591

string analysis: SPC # = 0
NPC constraint # = 8
x4 <= x2 &&
x0 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x4 > x2 &&
x0 > x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1404 sat:812 unsat:592

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 216 new end
----------------------------------- [7] backtrack: 215
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x3 <= x1 &&
x0 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1405 sat:813 unsat:592

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x1 &&
x0 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x3 > x1 &&
x0 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1406 sat:813 unsat:593

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x0 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1407 sat:814 unsat:593

string analysis: SPC # = 0
NPC constraint # = 7
x0 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x3 &&
x0 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1408 sat:814 unsat:594

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x0 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x0[-200] <= x3[-200] &&
x1[-199] <= x4[-199] &&
x1[-199] > x3[-200] &&
x2[-198] > x4[-199] &&
x2[-198] > x3[-200] &&
x1[-199] <= x2[-198] &&
x0[-200] <= x1[-199]
*************Summary***************
PC is:constraint # = 7
x0[-200] <= x3[-200] &&
x1[-199] <= x4[-199] &&
x1[-199] > x3[-200] &&
x2[-198] > x4[-199] &&
x2[-198] > x3[-200] &&
x1[-199] <= x2[-198] &&
x0[-200] <= x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x0 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1409 sat:815 unsat:594

string analysis: SPC # = 0
NPC constraint # = 7
x0 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x3 &&
x0 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1410 sat:815 unsat:595

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x3 <= x1 &&
x0 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1411 sat:816 unsat:595

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x1 &&
x0 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x3 > x1 &&
x0 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1412 sat:816 unsat:596

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x0 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1413 sat:817 unsat:596

string analysis: SPC # = 0
NPC constraint # = 7
x0 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x1 > x4 &&
x0 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1414 sat:817 unsat:597

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x4 <= x2 &&
x0 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1415 sat:818 unsat:597

string analysis: SPC # = 0
NPC constraint # = 8
x4 <= x2 &&
x0 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x4 > x2 &&
x0 <= x3 &&
x1 <= x4 &&
x1 > x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1416 sat:818 unsat:598

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 217 new end
----------------------------------- [7] backtrack: 215
----------------------------------- [7] done: 215
----------------------------------- [6] backtrack: 203
----------------------------------- [6] done: 203
----------------------------------- [5] backtrack: 202
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1417 sat:819 unsat:598

string analysis: SPC # = 0
NPC constraint # = 6
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 6
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1418 sat:820 unsat:598

string analysis: SPC # = 0
NPC constraint # = 6
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [6] forward: 218 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1419 sat:821 unsat:598

string analysis: SPC # = 0
NPC constraint # = 6
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x1 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1420 sat:821 unsat:599

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1421 sat:822 unsat:599

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1422 sat:823 unsat:599

string analysis: SPC # = 0
NPC constraint # = 7
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [7] forward: 219 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 8
x0 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1423 sat:824 unsat:599

string analysis: SPC # = 0
NPC constraint # = 8
x0 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1424 sat:825 unsat:599

string analysis: SPC # = 0
NPC constraint # = 8
x0 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [8] forward: 220 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x0 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x0[-199] > x4[-200] &&
x1[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x1[-199] <= x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x1[-199] <= x2[-198] &&
x0[-199] <= x1[-199]
*************Summary***************
PC is:constraint # = 8
x0[-199] > x4[-200] &&
x1[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x1[-199] <= x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x1[-199] <= x2[-198] &&
x0[-199] <= x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x0 &&
x0 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1425 sat:826 unsat:599

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x0 &&
x0 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 9
x4 > x0 &&
x0 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1426 sat:826 unsat:600

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x0 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1427 sat:827 unsat:600

string analysis: SPC # = 0
NPC constraint # = 8
x0 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 9
x0 > x1 &&
x0 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1428 sat:827 unsat:601

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x0 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1429 sat:828 unsat:601

string analysis: SPC # = 0
NPC constraint # = 8
x0 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 9
x1 > x3 &&
x0 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1430 sat:828 unsat:602

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x2 &&
x0 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1431 sat:829 unsat:602

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x2 &&
x0 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 9
x3 > x2 &&
x0 > x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1432 sat:829 unsat:603

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 221 new end
----------------------------------- [8] backtrack: 220
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 8
x0 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 8
x0[-200] <= x4[-200] &&
x1[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x1[-199] <= x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x1[-199] <= x2[-198] &&
x0[-200] <= x1[-199]
*************Summary***************
PC is:constraint # = 8
x0[-200] <= x4[-200] &&
x1[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x1[-199] <= x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x1[-199] <= x2[-198] &&
x0[-200] <= x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x0 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1433 sat:830 unsat:603

string analysis: SPC # = 0
NPC constraint # = 8
x0 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 9
x0 > x4 &&
x0 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1434 sat:830 unsat:604

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x4 <= x1 &&
x0 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1435 sat:831 unsat:604

string analysis: SPC # = 0
NPC constraint # = 9
x4 <= x1 &&
x0 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 9
x4 > x1 &&
x0 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1436 sat:831 unsat:605

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x0 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1437 sat:832 unsat:605

string analysis: SPC # = 0
NPC constraint # = 8
x0 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 9
x1 > x3 &&
x0 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1438 sat:832 unsat:606

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 9
x3 <= x2 &&
x0 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1439 sat:833 unsat:606

string analysis: SPC # = 0
NPC constraint # = 9
x3 <= x2 &&
x0 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 9
x3 > x2 &&
x0 <= x4 &&
x1 > x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1440 sat:833 unsat:607

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [9] forward: 222 new end
----------------------------------- [8] backtrack: 220
----------------------------------- [8] done: 220
----------------------------------- [7] backtrack: 219
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1441 sat:834 unsat:607

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x1 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1442 sat:834 unsat:608

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x1[-200] <= x4[-200] &&
x3[-199] > x4[-200] &&
x1[-200] <= x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x1[-200] <= x2[-198] &&
x0[-200] <= x1[-200]
*************Summary***************
PC is:constraint # = 7
x1[-200] <= x4[-200] &&
x3[-199] > x4[-200] &&
x1[-200] <= x3[-199] &&
x2[-198] > x4[-200] &&
x2[-198] > x3[-199] &&
x1[-200] <= x2[-198] &&
x0[-200] <= x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1443 sat:835 unsat:608

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x1 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1444 sat:835 unsat:609

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1445 sat:836 unsat:609

string analysis: SPC # = 0
NPC constraint # = 7
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x1 > x4 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1446 sat:836 unsat:610

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x4 <= x3 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1447 sat:837 unsat:610

string analysis: SPC # = 0
NPC constraint # = 8
x4 <= x3 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x4 > x3 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1448 sat:837 unsat:611

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x3 <= x2 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1449 sat:838 unsat:611

string analysis: SPC # = 0
NPC constraint # = 8
x3 <= x2 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x3 > x2 &&
x1 <= x4 &&
x3 > x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1450 sat:838 unsat:612

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 223 new end
----------------------------------- [7] backtrack: 219
----------------------------------- [7] done: 219
----------------------------------- [6] backtrack: 218
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1451 sat:839 unsat:612

string analysis: SPC # = 0
NPC constraint # = 6
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x1 &&
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1452 sat:839 unsat:613

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1453 sat:840 unsat:613

string analysis: SPC # = 0
NPC constraint # = 6
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x1 > x3 &&
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1454 sat:840 unsat:614

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1455 sat:841 unsat:614

string analysis: SPC # = 0
NPC constraint # = 6
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x1 &&
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1456 sat:841 unsat:615

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 6
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 6
x3[-200] <= x4[-200] &&
x1[-200] <= x3[-200] &&
x2[-199] > x4[-200] &&
x2[-199] > x3[-200] &&
x1[-200] <= x2[-199] &&
x0[-200] <= x1[-200]
*************Summary***************
PC is:constraint # = 6
x3[-200] <= x4[-200] &&
x1[-200] <= x3[-200] &&
x2[-199] > x4[-200] &&
x2[-199] > x3[-200] &&
x1[-200] <= x2[-199] &&
x0[-200] <= x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1457 sat:842 unsat:615

string analysis: SPC # = 0
NPC constraint # = 6
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x1 &&
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1458 sat:842 unsat:616

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1459 sat:843 unsat:616

string analysis: SPC # = 0
NPC constraint # = 6
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x1 > x3 &&
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1460 sat:843 unsat:617

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1461 sat:844 unsat:617

string analysis: SPC # = 0
NPC constraint # = 6
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x3 > x4 &&
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1462 sat:844 unsat:618

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x4 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1463 sat:845 unsat:618

string analysis: SPC # = 0
NPC constraint # = 7
x4 <= x2 &&
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x4 > x2 &&
x3 <= x4 &&
x1 <= x3 &&
x2 > x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1464 sat:845 unsat:619

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [7] forward: 224 new end
----------------------------------- [6] backtrack: 218
----------------------------------- [6] done: 218
----------------------------------- [5] backtrack: 202
----------------------------------- [5] done: 202
----------------------------------- [4] backtrack: 201
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1465 sat:846 unsat:619

string analysis: SPC # = 0
NPC constraint # = 4
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 5
x0 > x1 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1466 sat:846 unsat:620

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1467 sat:847 unsat:620

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 5
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1468 sat:848 unsat:620

string analysis: SPC # = 0
NPC constraint # = 5
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [5] forward: 225 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1469 sat:849 unsat:620

string analysis: SPC # = 0
NPC constraint # = 5
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 6
x1 > x2 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1470 sat:849 unsat:621

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x0 <= x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1471 sat:850 unsat:621

string analysis: SPC # = 0
NPC constraint # = 6
x0 <= x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 6
x0 > x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1472 sat:851 unsat:621

string analysis: SPC # = 0
NPC constraint # = 6
x0 > x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [6] forward: 226 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x0 > x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1473 sat:852 unsat:621

string analysis: SPC # = 0
NPC constraint # = 6
x0 > x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x1 &&
x0 > x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1474 sat:852 unsat:622

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 <= x0 &&
x0 > x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1475 sat:853 unsat:622

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x0 &&
x0 > x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x3 > x0 &&
x0 > x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1476 sat:853 unsat:623

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 6
x0 > x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 6
x0[-199] > x3[-200] &&
x1[-199] > x3[-200] &&
x2[-199] <= x4[-199] &&
x2[-199] > x3[-200] &&
x1[-199] <= x2[-199] &&
x0[-199] <= x1[-199]
*************Summary***************
PC is:constraint # = 6
x0[-199] > x3[-200] &&
x1[-199] > x3[-200] &&
x2[-199] <= x4[-199] &&
x2[-199] > x3[-200] &&
x1[-199] <= x2[-199] &&
x0[-199] <= x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x3 <= x0 &&
x0 > x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1477 sat:854 unsat:623

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x0 &&
x0 > x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x3 > x0 &&
x0 > x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1478 sat:854 unsat:624

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x0 > x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1479 sat:855 unsat:624

string analysis: SPC # = 0
NPC constraint # = 6
x0 > x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x1 &&
x0 > x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1480 sat:855 unsat:625

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x0 > x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1481 sat:856 unsat:625

string analysis: SPC # = 0
NPC constraint # = 6
x0 > x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x1 > x2 &&
x0 > x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1482 sat:856 unsat:626

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x0 > x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1483 sat:857 unsat:626

string analysis: SPC # = 0
NPC constraint # = 6
x0 > x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x2 > x4 &&
x0 > x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1484 sat:857 unsat:627

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [7] forward: 227 new end
----------------------------------- [6] backtrack: 226
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x3 <= x1 &&
x0 <= x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1485 sat:858 unsat:627

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x1 &&
x0 <= x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x3 > x1 &&
x0 <= x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1486 sat:858 unsat:628

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x0 <= x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1487 sat:859 unsat:628

string analysis: SPC # = 0
NPC constraint # = 6
x0 <= x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x3 &&
x0 <= x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1488 sat:859 unsat:629

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 6
x0 <= x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 6
x0[-200] <= x3[-200] &&
x1[-199] > x3[-200] &&
x2[-199] <= x4[-199] &&
x2[-199] > x3[-200] &&
x1[-199] <= x2[-199] &&
x0[-200] <= x1[-199]
*************Summary***************
PC is:constraint # = 6
x0[-200] <= x3[-200] &&
x1[-199] > x3[-200] &&
x2[-199] <= x4[-199] &&
x2[-199] > x3[-200] &&
x1[-199] <= x2[-199] &&
x0[-200] <= x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x0 <= x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1489 sat:860 unsat:629

string analysis: SPC # = 0
NPC constraint # = 6
x0 <= x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x3 &&
x0 <= x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1490 sat:860 unsat:630

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x3 <= x1 &&
x0 <= x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1491 sat:861 unsat:630

string analysis: SPC # = 0
NPC constraint # = 7
x3 <= x1 &&
x0 <= x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x3 > x1 &&
x0 <= x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1492 sat:861 unsat:631

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x0 <= x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1493 sat:862 unsat:631

string analysis: SPC # = 0
NPC constraint # = 6
x0 <= x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x1 > x2 &&
x0 <= x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1494 sat:862 unsat:632

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x0 <= x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1495 sat:863 unsat:632

string analysis: SPC # = 0
NPC constraint # = 6
x0 <= x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x2 > x4 &&
x0 <= x3 &&
x1 > x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1496 sat:863 unsat:633

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [7] forward: 228 new end
----------------------------------- [6] backtrack: 226
----------------------------------- [6] done: 226
----------------------------------- [5] backtrack: 225
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x3 <= x2 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1497 sat:864 unsat:633

string analysis: SPC # = 0
NPC constraint # = 6
x3 <= x2 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 6
x3 > x2 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1498 sat:864 unsat:634

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1499 sat:865 unsat:634

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 6
x0 > x1 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1500 sat:865 unsat:635

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1501 sat:866 unsat:635

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 6
x1 > x3 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1502 sat:866 unsat:636

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1503 sat:867 unsat:636

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 6
x0 > x1 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1504 sat:867 unsat:637

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 5
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 5
x1[-200] <= x3[-200] &&
x2[-199] <= x4[-199] &&
x2[-199] > x3[-200] &&
x1[-200] <= x2[-199] &&
x0[-200] <= x1[-200]
*************Summary***************
PC is:constraint # = 5
x1[-200] <= x3[-200] &&
x2[-199] <= x4[-199] &&
x2[-199] > x3[-200] &&
x1[-200] <= x2[-199] &&
x0[-200] <= x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1505 sat:868 unsat:637

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 6
x0 > x1 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1506 sat:868 unsat:638

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1507 sat:869 unsat:638

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 6
x1 > x3 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1508 sat:869 unsat:639

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x3 <= x2 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1509 sat:870 unsat:639

string analysis: SPC # = 0
NPC constraint # = 6
x3 <= x2 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 6
x3 > x2 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1510 sat:870 unsat:640

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1511 sat:871 unsat:640

string analysis: SPC # = 0
NPC constraint # = 5
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 6
x2 > x4 &&
x1 <= x3 &&
x2 <= x4 &&
x2 > x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1512 sat:871 unsat:641

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [6] forward: 229 new end
----------------------------------- [5] backtrack: 225
----------------------------------- [5] done: 225
----------------------------------- [4] backtrack: 201
----------------------------------- [4] done: 201
----------------------------------- [3] backtrack: 200
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1513 sat:872 unsat:641

string analysis: SPC # = 0
NPC constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 4
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1514 sat:873 unsat:641

string analysis: SPC # = 0
NPC constraint # = 4
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [4] forward: 230 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1515 sat:874 unsat:641

string analysis: SPC # = 0
NPC constraint # = 4
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 5
x0 > x1 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1516 sat:874 unsat:642

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1517 sat:875 unsat:642

string analysis: SPC # = 0
NPC constraint # = 4
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 5
x1 > x2 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1518 sat:875 unsat:643

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1519 sat:876 unsat:643

string analysis: SPC # = 0
NPC constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 5
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1520 sat:877 unsat:643

string analysis: SPC # = 0
NPC constraint # = 5
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [5] forward: 231 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1521 sat:878 unsat:643

string analysis: SPC # = 0
NPC constraint # = 5
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 6
x0 > x1 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1522 sat:878 unsat:644

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1523 sat:879 unsat:644

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 6
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1524 sat:880 unsat:644

string analysis: SPC # = 0
NPC constraint # = 6
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [6] forward: 232 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 7
x0 <= x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1525 sat:881 unsat:644

string analysis: SPC # = 0
NPC constraint # = 7
x0 <= x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1526 sat:882 unsat:644

string analysis: SPC # = 0
NPC constraint # = 7
x0 > x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
		 # garbage collection
----------------------------------- [7] forward: 233 new
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=0]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:14] : int temp = arr[j];
            [Sort.java:15] : arr[j] = arr[j+1];
            [Sort.java:16] : arr[j+1] = temp;
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x0 > x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x0[-199] > x4[-200] &&
x1[-199] > x4[-200] &&
x2[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x2[-199] <= x3[-199] &&
x1[-199] <= x2[-199] &&
x0[-199] <= x1[-199]
*************Summary***************
PC is:constraint # = 7
x0[-199] > x4[-200] &&
x1[-199] > x4[-200] &&
x2[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x2[-199] <= x3[-199] &&
x1[-199] <= x2[-199] &&
x0[-199] <= x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x4 <= x0 &&
x0 > x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1527 sat:883 unsat:644

string analysis: SPC # = 0
NPC constraint # = 8
x4 <= x0 &&
x0 > x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x4 > x0 &&
x0 > x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1528 sat:883 unsat:645

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x0 > x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1529 sat:884 unsat:645

string analysis: SPC # = 0
NPC constraint # = 7
x0 > x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x1 &&
x0 > x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1530 sat:884 unsat:646

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x0 > x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1531 sat:885 unsat:646

string analysis: SPC # = 0
NPC constraint # = 7
x0 > x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x1 > x2 &&
x0 > x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1532 sat:885 unsat:647

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x0 > x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1533 sat:886 unsat:647

string analysis: SPC # = 0
NPC constraint # = 7
x0 > x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x2 > x3 &&
x0 > x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1534 sat:886 unsat:648

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 234 new end
----------------------------------- [7] backtrack: 233
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 7
x0 <= x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 7
x0[-200] <= x4[-200] &&
x1[-199] > x4[-200] &&
x2[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x2[-199] <= x3[-199] &&
x1[-199] <= x2[-199] &&
x0[-200] <= x1[-199]
*************Summary***************
PC is:constraint # = 7
x0[-200] <= x4[-200] &&
x1[-199] > x4[-200] &&
x2[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x2[-199] <= x3[-199] &&
x1[-199] <= x2[-199] &&
x0[-200] <= x1[-199]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x0 <= x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1535 sat:887 unsat:648

string analysis: SPC # = 0
NPC constraint # = 7
x0 <= x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x0 > x4 &&
x0 <= x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1536 sat:887 unsat:649

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 8
x4 <= x1 &&
x0 <= x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1537 sat:888 unsat:649

string analysis: SPC # = 0
NPC constraint # = 8
x4 <= x1 &&
x0 <= x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x4 > x1 &&
x0 <= x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1538 sat:888 unsat:650

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x0 <= x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1539 sat:889 unsat:650

string analysis: SPC # = 0
NPC constraint # = 7
x0 <= x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x1 > x2 &&
x0 <= x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1540 sat:889 unsat:651

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x0 <= x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1541 sat:890 unsat:651

string analysis: SPC # = 0
NPC constraint # = 7
x0 <= x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 8
x2 > x3 &&
x0 <= x4 &&
x1 > x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1542 sat:890 unsat:652

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [8] forward: 235 new end
----------------------------------- [7] backtrack: 233
----------------------------------- [7] done: 233
----------------------------------- [6] backtrack: 232
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 6
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1543 sat:891 unsat:652

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x1 &&
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1544 sat:891 unsat:653

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 6
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 6
x1[-200] <= x4[-200] &&
x2[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x2[-199] <= x3[-199] &&
x1[-200] <= x2[-199] &&
x0[-200] <= x1[-200]
*************Summary***************
PC is:constraint # = 6
x1[-200] <= x4[-200] &&
x2[-199] > x4[-200] &&
x3[-199] > x4[-200] &&
x2[-199] <= x3[-199] &&
x1[-200] <= x2[-199] &&
x0[-200] <= x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1545 sat:892 unsat:653

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x0 > x1 &&
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1546 sat:892 unsat:654

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1547 sat:893 unsat:654

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x1 > x4 &&
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1548 sat:893 unsat:655

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 7
x4 <= x2 &&
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1549 sat:894 unsat:655

string analysis: SPC # = 0
NPC constraint # = 7
x4 <= x2 &&
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x4 > x2 &&
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1550 sat:894 unsat:656

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1551 sat:895 unsat:656

string analysis: SPC # = 0
NPC constraint # = 6
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 7
x2 > x3 &&
x1 <= x4 &&
x2 > x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1552 sat:895 unsat:657

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [7] forward: 236 new end
----------------------------------- [6] backtrack: 232
----------------------------------- [6] done: 232
----------------------------------- [5] backtrack: 231
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1553 sat:896 unsat:657

string analysis: SPC # = 0
NPC constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 6
x0 > x1 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1554 sat:896 unsat:658

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1555 sat:897 unsat:658

string analysis: SPC # = 0
NPC constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 6
x1 > x2 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1556 sat:897 unsat:659

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1557 sat:898 unsat:659

string analysis: SPC # = 0
NPC constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 6
x0 > x1 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1558 sat:898 unsat:660

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 5
x2[-200] <= x4[-200] &&
x3[-199] > x4[-200] &&
x2[-200] <= x3[-199] &&
x1[-200] <= x2[-200] &&
x0[-200] <= x1[-200]
*************Summary***************
PC is:constraint # = 5
x2[-200] <= x4[-200] &&
x3[-199] > x4[-200] &&
x2[-200] <= x3[-199] &&
x1[-200] <= x2[-200] &&
x0[-200] <= x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1559 sat:899 unsat:660

string analysis: SPC # = 0
NPC constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 6
x0 > x1 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1560 sat:899 unsat:661

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1561 sat:900 unsat:661

string analysis: SPC # = 0
NPC constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 6
x1 > x2 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1562 sat:900 unsat:662

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1563 sat:901 unsat:662

string analysis: SPC # = 0
NPC constraint # = 5
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 6
x2 > x4 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1564 sat:901 unsat:663

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 6
x4 <= x3 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1565 sat:902 unsat:663

string analysis: SPC # = 0
NPC constraint # = 6
x4 <= x3 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 6
x4 > x3 &&
x2 <= x4 &&
x3 > x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1566 sat:902 unsat:664

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [6] forward: 237 new end
----------------------------------- [5] backtrack: 231
----------------------------------- [5] done: 231
----------------------------------- [4] backtrack: 230
		 # choice: gov.nasa.jpf.symbc.numeric.PCChoiceGenerator[id="?",isCascaded:false,0..1,delta=+1,cur=1]
            [Sort.java:12] : if(arr[j] > arr[j+1])
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1567 sat:903 unsat:664

string analysis: SPC # = 0
NPC constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 5
x0 > x1 &&
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1568 sat:903 unsat:665

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1569 sat:904 unsat:665

string analysis: SPC # = 0
NPC constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 5
x1 > x2 &&
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1570 sat:904 unsat:666

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1571 sat:905 unsat:666

string analysis: SPC # = 0
NPC constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 5
x2 > x3 &&
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1572 sat:905 unsat:667

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1573 sat:906 unsat:667

string analysis: SPC # = 0
NPC constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 5
x0 > x1 &&
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1574 sat:906 unsat:668

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1575 sat:907 unsat:668

string analysis: SPC # = 0
NPC constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 5
x1 > x2 &&
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1576 sat:907 unsat:669

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:12] : if(arr[j] > arr[j+1])
numeric PC: constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1577 sat:908 unsat:669

string analysis: SPC # = 0
NPC constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 5
x0 > x1 &&
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1578 sat:908 unsat:670

            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
            [Sort.java:10] : for(int j=0; j<arr.length-i-1; j++)
            [Sort.java:8] : for(int i=0; i<arr.length; i++)
numeric PC: constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

string analysis: SPC # = 0
NPC constraint # = 4
x3[-200] <= x4[-200] &&
x2[-200] <= x3[-200] &&
x1[-200] <= x2[-200] &&
x0[-200] <= x1[-200]
*************Summary***************
PC is:constraint # = 4
x3[-200] <= x4[-200] &&
x2[-200] <= x3[-200] &&
x1[-200] <= x2[-200] &&
x0[-200] <= x1[-200]
            [Sort.java:20] : }
            [Sort.java:45] : checkSorted(arr);
            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1579 sat:909 unsat:670

string analysis: SPC # = 0
NPC constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 5
x0 > x1 &&
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1580 sat:909 unsat:671

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1581 sat:910 unsat:671

string analysis: SPC # = 0
NPC constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 5
x1 > x2 &&
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1582 sat:910 unsat:672

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1583 sat:911 unsat:672

string analysis: SPC # = 0
NPC constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 5
x2 > x3 &&
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1584 sat:911 unsat:673

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:26] : assert(arr[i] <= arr[i+1]);
numeric PC: constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> true

### PCs: total:1585 sat:912 unsat:673

string analysis: SPC # = 0
NPC constraint # = 4
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1
numeric PC: constraint # = 5
x3 > x4 &&
x3 <= x4 &&
x2 <= x3 &&
x1 <= x2 &&
x0 <= x1 -> false

### PCs: total:1586 sat:912 unsat:674

            [Sort.java:24] : for(int i=0; i<arr.length-1; i++)
            [Sort.java:28] : }
		 # thread terminated: main index: 0
            [Sort.java:3] : public class Sort
		 # garbage collection
----------------------------------- [5] forward: 238 new end
----------------------------------- [4] backtrack: 230
----------------------------------- [4] done: 230
----------------------------------- [3] backtrack: 200
----------------------------------- [3] done: 200
----------------------------------- [2] backtrack: 120
----------------------------------- [2] done: 120
----------------------------------- [1] backtrack: 0
----------------------------------- [1] done: 0
----------------------------------- [0] backtrack: -1
----------------------------------- [0] done: -1
----------------------------------- search finished

====================================================== Method Summaries
Inputs: arr_CONCRETE,
No path conditions for Sort.sort([I@15b)

====================================================== Method Summaries (HTML)
<h1>Test Cases Generated by Symbolic JavaPath Finder for Sort.sort (Path Coverage) </h1>
No path conditions for Sort.sort([I@15b)

====================================================== results
no errors detected

====================================================== statistics
elapsed time:       00:00:03
states:             new=239,visited=0,backtracked=239,end=120
search:             maxDepth=11,constraints=0
choice generators:  thread=1 (signal=0,lock=1,sharedRef=0,threadApi=0,reschedule=0), data=119
heap:               new=360,released=1202,maxLive=358,gcCycles=239
instructions:       27891
max memory:         155MB
loaded code:        classes=61,methods=1328

====================================================== search finished: 10/4/22 6:19 PM
